{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap ffdf8ab816aa35d69991","webpack:///./index.js","webpack:///../src/index.js","webpack:///../~/webpack/~/node-libs-browser/~/events/events.js","webpack:///../~/clusterize.js/clusterize.js","webpack:///../~/flattree/lib/index.js","webpack:///../~/flattree/lib/flatten.js","webpack:///../~/flattree/lib/extend.js","webpack:///../~/flattree/lib/node.js","webpack:///../src/lookup-table.js","webpack:///../src/renderer.js","webpack:///../src/helper.js","webpack:///./renderer.js","webpack:///../src/index.styl?cdde","webpack:///../src/index.styl","webpack:///../~/css-loader/lib/css-base.js","webpack:///../~/style-loader/addStyles.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_src","_src2","_renderer","_renderer2","_helper","data","source","i","push","JSON","parse","replace","tree","autoOpen","droppable","el","document","querySelector","rowRenderer","selectable","updatePreview","node","innerHTML","stringify","label","children","length","parent","state","on","progress","style","width","getSelectedNode","console","log","e","dataTransfer","getData","quoteattr","loadData","draggableElement","addEventListener","preventDefault","stopPropagation","dragDrop","effectAllowed","setData","target","window","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_typeof","Symbol","iterator","_createClass","defineProperties","props","descriptor","defineProperty","key","protoProps","staticProps","_events","_events2","_clusterize","_clusterize2","_flattree","_lookupTable","_lookupTable2","ensureNodeInstance","Node","Error","extend","_len","arguments","sources","Array","_key","undefined","output","index","hasOwnProperty","InfiniteTree","_events$EventEmitter","options","this","_this","getPrototypeOf","defaultRowRenderer","openNodes","rootNode","selectedNode","clusterize","nodeTable","nodes","rows","scrollElement","contentElement","dragoverElement","contentListener","click","currentTarget","itemTarget","handleToggler","parentElement","className","indexOf","getAttribute","getNodeById","toggleNode","selectNode","dragenter","removeClass","hasAttribute","canDrop","match","addClass","dragend","dragover","dropEffect","drop","emit","error","_this2","createElement","classNames","appendChild","tag","scrollElem","contentElem","no_data_class","callbacks","clusterWillChange","clusterChanged","scrollingProgress","removeEventListener","clear","destroy","firstChild","removeChild","containerElement","newNode","parentNode","_this3","Number","splice","deleteCount","total","flatten","getChildAt","map","parentOffset","apply","concat","flattenNode","forEach","set","update","addChildNodeAt","nodeIndex","selectedIndex","rangeFrom","rangeTo","open","filter","hasChildren","list","getFirstChild","getNextSibling","getParent","flattenChildNodes","get","slice","referenceNode","_this4","openAllNodes","_this5","_this6","parentNodeIndex","childNodes","unset","_this7","getPreviousSibling","querySelectorAll","rowHeight","offsetHeight","scrollTop","selected","_selectedNode","_selectedIndex","closeNode","openNode","traverse","s","_loop","keys","join","_node","EventEmitter","_maxListeners","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","n","isNaN","type","er","handler","len","args","listeners","addListener","listener","newListener","warned","trace","once","g","removeListener","fired","position","removeAllListeners","ret","listenerCount","evlistener","emitter","name","definition","evt","element","fnc","attachEvent","off","detachEvent","isArray","arr","toString","getStyle","prop","elem","getComputedStyle","currentStyle","ie","v","all","documentMode","is_mac","navigator","platform","toLowerCase","Clusterize","defaults","item_height","block_height","rows_in_block","rows_in_cluster","cluster_height","blocks_in_cluster","content_tag","show_no_data_row","no_data_text","keep_parity","scroll_top","option","elems","getElementById","content_elem","setAttribute","fetchMarkup","cache","bottom","scroll_elem","exploreEnvironment","insertToDOM","last_cluster","scroll_debounce","pointer_events_set","scrollEv","pointerEvents","clearTimeout","setTimeout","getClusterNum","getScrollProgress","resize_debounce","resizeEv","refresh","clean","html","generateEmptyRow","getRowsHeight","new_rows","getRowsAmount","add","where","_new_rows","append","prepend","rows_nodes","getChildNodes","shift","outerHTML","opts","tagName","prev_item_height","Math","floor","parseInt","td","empty_row","no_data_content","createTextNode","generate","cluster_num","rows_len","top_offset","bottom_offset","rows_above","items_start","max","items_end","this_cluster_rows","renderExtraTag","class_name","height","clusterize_prefix","this_cluster_content_changed","checkChanges","only_bottom_offset_changed","layout","lastChild","last","div","child_nodes","ii","changed","_flatten","_flatten2","_node2","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","next","done","err","_extend","_extend2","stack","pool","throwOnError","firstNode","depth","path","prefixMask","subtotal","_p$state","_p$state$total","isLastChild","_stack$pop","pop","_stack$pop2","current","prefix","mask","parentDidOpen","_p","_p2","hasNextSibling","LookupTable","treeOptions","_state$selected","childrenLength","more","togglerContent","toggler","buildHTML","class","title","treeNode","aria-id","aria-expanded","aria-depth","aria-path","aria-selected","aria-children","aria-total","tree-selected","returnValue","cancelBubble","dispatchEvent","eventType","createEvent","initEvent","hasClass","classes","split","toggleClass","ok","preserveCR","attrs","h","attr","icon","glyphicon-folder-open","glyphicon-folder-close","glyphicon-file","count","treeNodeAttributes","content","locals","result","item","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","createLinkElement","linkElement","rel","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","unescape","encodeURIComponent","blob","oldSrc","memoize","fn","memo","isOldIE","test","userAgent","getElementsByTagName","newList","mayRemove","textStore","replacement","Boolean"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _src = __webpack_require__(1);\n\t\n\tvar _src2 = _interopRequireDefault(_src);\n\t\n\tvar _renderer = __webpack_require__(11);\n\t\n\tvar _renderer2 = _interopRequireDefault(_renderer);\n\t\n\t__webpack_require__(12);\n\t\n\tvar _helper = __webpack_require__(10);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar data = [];\n\tvar source = '{\"id\":\"<root>\",\"label\":\"<root>\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"alpha\",\"label\":\"Alpha\",\"props\":{\"droppable\":true}},{\"id\":\"bravo\",\"label\":\"Bravo\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"charlie\",\"label\":\"Charlie\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"delta\",\"label\":\"Delta\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"echo\",\"label\":\"Echo\",\"props\":{\"droppable\":true}},{\"id\":\"foxtrot\",\"label\":\"Foxtrot\",\"props\":{\"droppable\":true}}]},{\"id\":\"golf\",\"label\":\"Golf\",\"props\":{\"droppable\":true}}]},{\"id\":\"hotel\",\"label\":\"Hotel\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"india\",\"label\":\"India\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"juliet\",\"label\":\"Juliet\",\"props\":{\"droppable\":true}}]}]},{\"id\":\"kilo\",\"label\":\"Kilo\",\"props\":{\"droppable\":true}}]}]}';\n\t\n\tfor (var i = 0; i < 1000; ++i) {\n\t    data.push(JSON.parse(source.replace(/\"(id|label)\":\"([^\"]*)\"/g, '\"$1\": \"$2.' + i + '\"')));\n\t}\n\t\n\tvar tree = new _src2['default']({\n\t    autoOpen: true, // Defaults to false\n\t    droppable: true, // Defaults to false\n\t    el: document.querySelector('#tree'),\n\t    rowRenderer: _renderer2['default'],\n\t    selectable: true // Defaults to true\n\t});\n\t\n\tvar updatePreview = function updatePreview(node) {\n\t    var el = document.querySelector('#preview');\n\t    if (node) {\n\t        el.innerHTML = JSON.stringify({\n\t            id: node.id,\n\t            label: node.label,\n\t            children: node.children ? node.children.length : 0,\n\t            parent: node.parent ? node.parent.id : null,\n\t            state: node.state\n\t        }, null, 2);\n\t    } else {\n\t        el.innerHTML = '';\n\t    }\n\t};\n\t\n\ttree.on('scrollProgress', function (progress) {\n\t    document.querySelector('#scrolling-progress').style.width = progress + '%';\n\t});\n\ttree.on('update', function () {\n\t    var node = tree.getSelectedNode();\n\t    updatePreview(node);\n\t});\n\ttree.on('openNode', function (node) {\n\t    console.log('openNode', node);\n\t});\n\ttree.on('closeNode', function (node) {\n\t    console.log('closeNode', node);\n\t});\n\ttree.on('dropNode', function (node, e) {\n\t    var source = e.dataTransfer.getData('text');\n\t    console.log('Dragged an element ' + JSON.stringify(source) + ' and dropped to ' + JSON.stringify(node.label));\n\t    document.querySelector('#dropped-result').innerHTML = 'Dropped to <b>' + (0, _helper.quoteattr)(node.label) + '</b>';\n\t});\n\ttree.on('selectNode', function (node) {\n\t    updatePreview(node);\n\t});\n\t\n\ttree.loadData(data);\n\t\n\t// Draggable Element\n\tvar draggableElement = document.querySelector('#draggable-element');\n\t\n\t// http://stackoverflow.com/questions/5500615/internet-explorer-9-drag-and-drop-dnd\n\t(0, _helper.addEventListener)(draggableElement, 'selectstart', function (e) {\n\t    (0, _helper.preventDefault)(e);\n\t    (0, _helper.stopPropagation)(e);\n\t    draggableElement.dragDrop();\n\t    return false;\n\t});\n\t\n\t(0, _helper.addEventListener)(draggableElement, 'dragstart', function (e) {\n\t    e.dataTransfer.effectAllowed = 'move';\n\t    e.dataTransfer.setData('text', e.target.id);\n\t    document.querySelector('#dropped-result').innerHTML = '';\n\t});\n\t\n\t(0, _helper.addEventListener)(draggableElement, 'dragend', function (e) {});\n\t\n\twindow.tree = tree;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = __webpack_require__(2);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _clusterize = __webpack_require__(3);\n\t\n\tvar _clusterize2 = _interopRequireDefault(_clusterize);\n\t\n\tvar _flattree = __webpack_require__(4);\n\t\n\tvar _lookupTable = __webpack_require__(8);\n\t\n\tvar _lookupTable2 = _interopRequireDefault(_lookupTable);\n\t\n\tvar _renderer = __webpack_require__(9);\n\t\n\tvar _helper = __webpack_require__(10);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ensureNodeInstance = function ensureNodeInstance(node) {\n\t    if (!(node instanceof _flattree.Node)) {\n\t        throw new Error('The node must be a Node object.');\n\t    }\n\t    return true;\n\t};\n\t\n\tvar extend = function extend(target) {\n\t    for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        sources[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    if (target === undefined || target === null) {\n\t        throw new TypeError('Cannot convert undefined or null to object');\n\t    }\n\t\n\t    var output = Object(target);\n\t    for (var index = 0; index < sources.length; index++) {\n\t        var source = sources[index];\n\t        if (source !== undefined && source !== null) {\n\t            for (var key in source) {\n\t                if (source.hasOwnProperty(key)) {\n\t                    output[key] = source[key];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return output;\n\t};\n\t\n\tvar InfiniteTree = function (_events$EventEmitter) {\n\t    _inherits(InfiniteTree, _events$EventEmitter);\n\t\n\t    // Creates new InfiniteTree object.\n\t\n\t    function InfiniteTree() {\n\t        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t        _classCallCheck(this, InfiniteTree);\n\t\n\t        // Assign options\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(InfiniteTree).call(this));\n\t\n\t        _this.options = {\n\t            autoOpen: false,\n\t            droppable: false,\n\t            el: null,\n\t            rowRenderer: _renderer.defaultRowRenderer,\n\t            selectable: true\n\t        };\n\t        _this.state = {\n\t            openNodes: [],\n\t            rootNode: null,\n\t            selectedNode: null\n\t        };\n\t        _this.clusterize = null;\n\t        _this.nodeTable = new _lookupTable2['default']();\n\t        _this.nodes = [];\n\t        _this.rows = [];\n\t        _this.scrollElement = null;\n\t        _this.contentElement = null;\n\t        _this.dragoverElement = null;\n\t        _this.contentListener = {\n\t            'click': function click(e) {\n\t                var target = e.target;\n\t                var currentTarget = e.currentTarget;\n\t\n\t\n\t                (0, _helper.stopPropagation)(e);\n\t\n\t                if (target !== currentTarget) {\n\t                    var itemTarget = target;\n\t                    var handleToggler = false;\n\t\n\t                    while (itemTarget && itemTarget.parentElement !== currentTarget) {\n\t                        if (itemTarget.className.indexOf('tree-toggler') >= 0) {\n\t                            handleToggler = true;\n\t                        }\n\t                        itemTarget = itemTarget.parentElement;\n\t                    }\n\t\n\t                    var id = itemTarget.getAttribute('aria-id');\n\t                    var node = _this.getNodeById(id);\n\t\n\t                    if (!node) {\n\t                        return;\n\t                    }\n\t\n\t                    // Click on the toggler to open/close a tree node\n\t                    if (handleToggler) {\n\t                        _this.toggleNode(node);\n\t                        return;\n\t                    }\n\t\n\t                    if (_this.options.selectable) {\n\t                        _this.selectNode(node);\n\t                        return;\n\t                    }\n\t                }\n\t            },\n\t            // https://developer.mozilla.org/en-US/docs/Web/Events/dragenter\n\t            // The dragenter event is fired when a dragged element or text selection enters a valid drop target.\n\t            'dragenter': function dragenter(e) {\n\t                var target = e.target;\n\t                var currentTarget = e.currentTarget;\n\t\n\t\n\t                if (target === currentTarget) {\n\t                    return;\n\t                }\n\t\n\t                var itemTarget = target;\n\t                while (itemTarget && itemTarget.parentElement !== currentTarget) {\n\t                    itemTarget = itemTarget.parentElement;\n\t                }\n\t\n\t                if (_this.dragoverElement !== itemTarget) {\n\t                    (0, _helper.removeClass)(_this.dragoverElement, 'highlight'); // remove 'highlight' class\n\t                    _this.dragoverElement = null;\n\t\n\t                    if (!itemTarget.hasAttribute('droppable')) {\n\t                        return;\n\t                    }\n\t\n\t                    var canDrop = !itemTarget.getAttribute('droppable').match(/false/i);\n\t                    if (canDrop) {\n\t                        (0, _helper.addClass)(itemTarget, 'highlight');\n\t                        _this.dragoverElement = itemTarget;\n\t                    }\n\t                }\n\t            },\n\t            // https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n\t            // The dragend event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\t            'dragend': function dragend(e) {\n\t                if (_this.dragoverElement) {\n\t                    (0, _helper.removeClass)(_this.dragoverElement, 'highlight'); // remove 'highlight' class\n\t                    _this.dragoverElement = null;\n\t                }\n\t            },\n\t            // https://developer.mozilla.org/en-US/docs/Web/Events/dragover\n\t            // The dragover event is fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds).\n\t            'dragover': function dragover(e) {\n\t                (0, _helper.preventDefault)(e);\n\t                e.dataTransfer.dropEffect = 'move';\n\t                return false;\n\t            },\n\t            // https://developer.mozilla.org/en-US/docs/Web/Events/drop\n\t            // The drop event is fired when an element or text selection is dropped on a valid drop target.\n\t            'drop': function drop(e) {\n\t                // prevent default action (open as link for some elements)\n\t                (0, _helper.preventDefault)(e);\n\t\n\t                if (_this.dragoverElement) {\n\t                    var id = _this.dragoverElement.getAttribute('aria-id');\n\t                    var node = _this.getNodeById(id);\n\t\n\t                    (0, _helper.removeClass)(_this.dragoverElement, 'highlight');\n\t                    _this.dragoverElement = null;\n\t\n\t                    _this.emit('dropNode', node, e);\n\t                }\n\t            }\n\t        };\n\t        _this.options = extend({}, _this.options, options);\n\t\n\t        if (!_this.options.el) {\n\t            console.error('Failed to initialize infinite-tree: el is not specified.', options);\n\t            return _possibleConstructorReturn(_this);\n\t        }\n\t\n\t        _this.create();\n\t\n\t        // Load tree data if it's provided\n\t        if (options.data) {\n\t            _this.loadData(options.data);\n\t        }\n\t        return _this;\n\t    }\n\t\n\t    _createClass(InfiniteTree, [{\n\t        key: 'create',\n\t        value: function create() {\n\t            var _this2 = this;\n\t\n\t            if (!this.options.el) {\n\t                throw new Error('The element option is not specified.');\n\t            }\n\t\n\t            var scrollElement = document.createElement('div');\n\t            scrollElement.className = (0, _helper.classNames)('infinite-tree', 'infinite-tree-scroll');\n\t            var contentElement = document.createElement('div');\n\t            contentElement.className = (0, _helper.classNames)('infinite-tree', 'infinite-tree-content');\n\t\n\t            scrollElement.appendChild(contentElement);\n\t            this.options.el.appendChild(scrollElement);\n\t\n\t            this.clusterize = new _clusterize2['default']({\n\t                tag: 'div',\n\t                rows: [],\n\t                scrollElem: scrollElement,\n\t                contentElem: contentElement,\n\t                no_data_class: 'infinite-tree-no-data',\n\t                callbacks: {\n\t                    // Will be called right before replacing previous cluster with new one.\n\t                    clusterWillChange: function clusterWillChange() {},\n\t                    // Will be called right after replacing previous cluster with new one.\n\t                    clusterChanged: function clusterChanged() {},\n\t                    // Will be called on scrolling. Returns progress position.\n\t                    scrollingProgress: function scrollingProgress(progress) {\n\t                        _this2.emit('scrollProgress', progress);\n\t                    }\n\t                }\n\t            });\n\t\n\t            this.scrollElement = scrollElement;\n\t            this.contentElement = contentElement;\n\t\n\t            (0, _helper.addEventListener)(this.contentElement, 'click', this.contentListener.click);\n\t            if (this.options.droppable) {\n\t                (0, _helper.addEventListener)(document, 'dragend', this.contentListener.dragend);\n\t                (0, _helper.addEventListener)(this.contentElement, 'dragenter', this.contentListener.dragenter);\n\t                (0, _helper.addEventListener)(this.contentElement, 'dragover', this.contentListener.dragover);\n\t                (0, _helper.addEventListener)(this.contentElement, 'drop', this.contentListener.drop);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            (0, _helper.removeEventListener)(this.contentElement, 'click', this.contentListener);\n\t            if (this.options.droppable) {\n\t                (0, _helper.removeEventListener)(document, 'dragend', this.contentListener.dragend);\n\t                (0, _helper.removeEventListener)(this.contentElement, 'dragenter', this.contentListener.dragenter);\n\t                (0, _helper.removeEventListener)(this.contentElement, 'dragover', this.contentListener.dragover);\n\t                (0, _helper.removeEventListener)(this.contentElement, 'drop', this.contentListener.drop);\n\t            }\n\t\n\t            this.clear();\n\t\n\t            if (this.clusterize) {\n\t                this.clusterize.destroy(true); // True to remove all data from the list\n\t                this.clusterize = null;\n\t            }\n\t\n\t            // Remove all child nodes\n\t            while (this.contentElement.firstChild) {\n\t                this.contentElement.removeChild(this.contentElement.firstChild);\n\t            }\n\t            while (this.scrollElement.firstChild) {\n\t                this.scrollElement.removeChild(this.scrollElement.firstChild);\n\t            }\n\t            if (this.options.el) {\n\t                var containerElement = this.options.el;\n\t                while (containerElement.firstChild) {\n\t                    containerElement.removeChild(containerElement.firstChild);\n\t                }\n\t            }\n\t            this.contentElement = null;\n\t            this.scrollElement = null;\n\t        }\n\t        // Inserts a new child node to a parent node at the specified index.\n\t        // * If the parent is null or undefined, inserts the child at the specified index in the top-level.\n\t        // * If the parent has children, the method adds the child to it at the specified index.\n\t        // * If the parent does not have children, the method adds the child to the parent.\n\t        // * If the index value is greater than or equal to the number of children in the parent, the method adds the child at the end of the children.\n\t        // @param {Object} newNode The new child node.\n\t        // @param {number} index The 0-based index of where to insert the child node. Defaults to 0 for negative index.\n\t        // @param {Node} parentNode The Node object that defines the parent node.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'addChildNodeAt',\n\t        value: function addChildNodeAt(newNode, index, parentNode) {\n\t            var _this3 = this;\n\t\n\t            // Defaults to rootNode if the parentNode is not specified\n\t            parentNode = parentNode || this.state.rootNode;\n\t\n\t            ensureNodeInstance(parentNode);\n\t\n\t            if (!newNode) {\n\t                return false;\n\t            }\n\t            index = Number(index) || 0;\n\t            if (index < 0) {\n\t                index = 0;\n\t            }\n\t\n\t            // Inserts the new child at the specified index\n\t            newNode.parent = parentNode;\n\t            parentNode.children.splice(index, 0, newNode);\n\t\n\t            var deleteCount = parentNode.state.total;\n\t\n\t            // Update index\n\t            index = parentNode.children.indexOf(newNode);\n\t\n\t            var nodes = (0, _flattree.flatten)(parentNode.children, { openNodes: this.state.openNodes });\n\t\n\t            // Update newNode\n\t            newNode = parentNode.getChildAt(index);\n\t\n\t            var rows = nodes.map(function (node) {\n\t                return _this3.options.rowRenderer(node, _this3.options);\n\t            });\n\t            var parentOffset = this.nodes.indexOf(parentNode);\n\t\n\t            // Update nodes & rows\n\t            this.nodes.splice.apply(this.nodes, [parentOffset + 1, deleteCount].concat(nodes));\n\t            this.rows.splice.apply(this.rows, [parentOffset + 1, deleteCount].concat(rows));\n\t\n\t            // Update the lookup table with newly added nodes\n\t            this.flattenNode(newNode).forEach(function (node) {\n\t                if (node.id !== undefined) {\n\t                    _this3.nodeTable.set(node.id, node);\n\t                }\n\t            });\n\t\n\t            // Update the row corresponding to the parent node\n\t            this.rows[parentOffset] = this.options.rowRenderer(parentNode, this.options);\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t\n\t            return true;\n\t        }\n\t        // Adds a node to the end of the list of children of a specified parent node.\n\t        // * If the parent is null or undefined, inserts the child at the specified index in the top-level.\n\t        // * If the parent has children, the method adds the child as the last child.\n\t        // * If the parent does not have children, the method adds the child to the parent.\n\t        // @param {Object} newNode The new child node.\n\t        // @param {Node} parentNode The Node object that defines the parent node.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'appendChildNode',\n\t        value: function appendChildNode(newNode, parentNode) {\n\t            // Defaults to rootNode if the parentNode is not specified\n\t            parentNode = parentNode || this.state.rootNode;\n\t\n\t            ensureNodeInstance(parentNode);\n\t\n\t            var index = parentNode.children.length;\n\t            return this.addChildNodeAt(newNode, index, parentNode);\n\t        }\n\t        // Clears the tree.\n\t\n\t    }, {\n\t        key: 'clear',\n\t        value: function clear() {\n\t            this.clusterize.clear();\n\t            this.nodeTable.clear();\n\t            this.nodes = [];\n\t            this.rows = [];\n\t            this.state.openNodes = [];\n\t            this.state.rootNode = null;\n\t            this.state.selectedNode = null;\n\t        }\n\t        // Closes a node to hide its children.\n\t        // @param {Node} node The Node object.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'closeNode',\n\t        value: function closeNode(node) {\n\t            ensureNodeInstance(node);\n\t\n\t            // Retrieve node index\n\t            var nodeIndex = this.nodes.indexOf(node);\n\t            if (nodeIndex < 0) {\n\t                throw new Error('Invalid node index');\n\t            }\n\t\n\t            // Check if the closeNode action can be performed\n\t            if (this.state.openNodes.indexOf(node) < 0) {\n\t                return false;\n\t            }\n\t\n\t            // Keep selected node unchanged if \"node\" is equal to \"this.state.selectedNode\"\n\t            if (this.state.selectedNode && this.state.selectedNode !== node) {\n\t                // row #0 - node.0         => parent node (total=4)\n\t                // row #1   - node.0.0     => close this node; next selected node (total=2)\n\t                // row #2       node.0.0.0 => selected node (total=0)\n\t                // row #3       node.0.0.1\n\t                // row #4     node.0.1\n\t                var selectedIndex = this.nodes.indexOf(this.state.selectedNode);\n\t                var rangeFrom = nodeIndex + 1;\n\t                var rangeTo = nodeIndex + node.state.total;\n\t\n\t                if (rangeFrom <= selectedIndex && selectedIndex <= rangeTo) {\n\t                    this.selectNode(node);\n\t                }\n\t            }\n\t\n\t            node.state.open = false; // Set the open state to false\n\t            var openNodes = this.state.openNodes.filter(function (node) {\n\t                return node.hasChildren() && node.state.open;\n\t            });\n\t            this.state.openNodes = openNodes;\n\t\n\t            var deleteCount = node.state.total;\n\t\n\t            // Subtract the deleteCount for all ancestors (parent, grandparent, etc.) of the current node\n\t            for (var p = node; p !== null; p = p.parent) {\n\t                p.state.total = p.state.total - deleteCount;\n\t            }\n\t\n\t            // Update nodes & rows\n\t            this.nodes.splice(nodeIndex + 1, deleteCount);\n\t            this.rows.splice(nodeIndex + 1, deleteCount);\n\t\n\t            // Update the row corresponding to the node\n\t            this.rows[nodeIndex] = this.options.rowRenderer(node, this.options);\n\t\n\t            // Emit the 'closeNode' event\n\t            this.emit('closeNode', node);\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t\n\t            return true;\n\t        }\n\t        // Flattens all child nodes of a parent node by performing full tree traversal using child-parent link.\n\t        // No recursion or stack is involved.\n\t        // @param {Node} parentNode The Node object that defines the parent node.\n\t        // @return {array} Returns an array of Node objects containing all the child nodes of the parent node.\n\t\n\t    }, {\n\t        key: 'flattenChildNodes',\n\t        value: function flattenChildNodes(parentNode) {\n\t            // Defaults to rootNode if the parentNode is not specified\n\t            parentNode = parentNode || this.state.rootNode;\n\t\n\t            ensureNodeInstance(parentNode);\n\t\n\t            var list = [];\n\t\n\t            // Ignore parent node\n\t            var node = parentNode.getFirstChild();\n\t            while (node) {\n\t                list.push(node);\n\t                if (node.hasChildren()) {\n\t                    node = node.getFirstChild();\n\t                } else {\n\t                    // find the parent level\n\t                    while (node.getNextSibling() === null && node.parent !== parentNode) {\n\t                        // use child-parent link to get to the parent level\n\t                        node = node.getParent();\n\t                    }\n\t\n\t                    // Get next sibling\n\t                    node = node.getNextSibling();\n\t                }\n\t            }\n\t\n\t            return list;\n\t        }\n\t        // Flattens a node by performing full tree traversal using child-parent link.\n\t        // No recursion or stack is involved.\n\t        // @param {Node} node The Node object.\n\t        // @return {array} Returns a flattened list of Node objects.\n\t\n\t    }, {\n\t        key: 'flattenNode',\n\t        value: function flattenNode(node) {\n\t            return [node].concat(this.flattenChildNodes(node));\n\t        }\n\t        // Gets a list of child nodes.\n\t        // @param {Node} [parentNode] The Node object that defines the parent node. If null or undefined, returns a list of top level nodes.\n\t        // @return {array} Returns an array of Node objects containing all the child nodes of the parent node.\n\t\n\t    }, {\n\t        key: 'getChildNodes',\n\t        value: function getChildNodes(parentNode) {\n\t            // Defaults to rootNode if the parentNode is not specified\n\t            parentNode = parentNode || this.state.rootNode;\n\t\n\t            ensureNodeInstance(parentNode);\n\t\n\t            return parentNode.children;\n\t        }\n\t        // Gets a node by its unique id. This assumes that you have given the nodes in the data a unique id.\n\t        // @param {string|number} id An unique node id. A null value will be returned if the id doesn't match.\n\t        // @return {Node} Returns a node the matches the id, null otherwise.\n\t\n\t    }, {\n\t        key: 'getNodeById',\n\t        value: function getNodeById(id) {\n\t            var node = this.nodeTable.get(id);\n\t            if (!node) {\n\t                // Find the first node that matches the id\n\t                node = this.nodes.filter(function (node) {\n\t                    return node.id === id;\n\t                })[0];\n\t                if (!node) {\n\t                    return null;\n\t                }\n\t                this.nodeTable.set(node.id, node);\n\t            }\n\t            return node;\n\t        }\n\t        // Gets an array of open nodes.\n\t        // @return {array} Returns an array of Node objects containing open nodes.\n\t\n\t    }, {\n\t        key: 'getOpenNodes',\n\t        value: function getOpenNodes() {\n\t            // returns a shallow copy of an array into a new array object.\n\t            return this.state.openNodes.slice();\n\t        }\n\t        // Gets the root node.\n\t        // @return {Node} Returns the root node, or null if empty.\n\t\n\t    }, {\n\t        key: 'getRootNode',\n\t        value: function getRootNode() {\n\t            return this.state.rootNode;\n\t        }\n\t        // Gets the selected node.\n\t        // @return {Node} Returns the selected node, or null if not selected.\n\t\n\t    }, {\n\t        key: 'getSelectedNode',\n\t        value: function getSelectedNode() {\n\t            return this.state.selectedNode;\n\t        }\n\t        // Inserts the specified node after the reference node.\n\t        // @param {Object} newNode The new sibling node.\n\t        // @param {Node} referenceNode The Node object that defines the reference node.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'insertNodeAfter',\n\t        value: function insertNodeAfter(newNode, referenceNode) {\n\t            ensureNodeInstance(referenceNode);\n\t            var parentNode = referenceNode.getParent();\n\t            var index = parentNode.children.indexOf(referenceNode) + 1;\n\t            return this.addChildNodeAt(newNode, index, parentNode);\n\t        }\n\t        // Inserts the specified node before the reference node.\n\t        // @param {Object} newNode The new sibling node.\n\t        // @param {Node} referenceNode The Node object that defines the reference node.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'insertNodeBefore',\n\t        value: function insertNodeBefore(newNode, referenceNode) {\n\t            ensureNodeInstance(referenceNode);\n\t            var parentNode = referenceNode.getParent();\n\t            var index = parentNode.children.indexOf(referenceNode);\n\t            return this.addChildNodeAt(newNode, index, parentNode);\n\t        }\n\t        // Loads data in the tree.\n\t        // @param {object|array} data The data is an object or array of objects that defines the node.\n\t\n\t    }, {\n\t        key: 'loadData',\n\t        value: function loadData() {\n\t            var _this4 = this;\n\t\n\t            var data = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\t\n\t            this.nodes = (0, _flattree.flatten)(data, { openAllNodes: this.options.autoOpen });\n\t\n\t            // Clear lookup table\n\t            this.nodeTable.clear();\n\t\n\t            this.state.openNodes = this.nodes.filter(function (node) {\n\t                return node.hasChildren() && node.state.open;\n\t            });\n\t            this.state.rootNode = function () {\n\t                var node = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t                // Finding the root node\n\t                while (node && node.parent !== null) {\n\t                    node = node.parent;\n\t                }\n\t                return node;\n\t            }(this.nodes[0]);\n\t            this.state.selectedNode = null;\n\t\n\t            // Update the lookup table with newly added nodes\n\t            this.flattenChildNodes(this.state.rootNode).forEach(function (node) {\n\t                if (node.id !== undefined) {\n\t                    _this4.nodeTable.set(node.id, node);\n\t                }\n\t            });\n\t\n\t            // Update rows\n\t            this.rows = this.nodes.map(function (node) {\n\t                return _this4.options.rowRenderer(node, _this4.options);\n\t            });\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t        }\n\t        // Opens a node to display its children.\n\t        // @param {Node} node The Node object.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'openNode',\n\t        value: function openNode(node) {\n\t            var _this5 = this;\n\t\n\t            ensureNodeInstance(node);\n\t\n\t            // Retrieve node index\n\t            var nodeIndex = this.nodes.indexOf(node);\n\t            if (nodeIndex < 0) {\n\t                throw new Error('Invalid node index');\n\t            }\n\t\n\t            // Check if the openNode action can be performed\n\t            if (this.state.openNodes.indexOf(node) >= 0) {\n\t                return false;\n\t            }\n\t\n\t            node.state.open = true; // Set node.state.open to true\n\t            var openNodes = [node].concat(this.state.openNodes); // the most recently used items first\n\t            this.state.openNodes = openNodes;\n\t\n\t            var nodes = (0, _flattree.flatten)(node.children, { openNodes: this.state.openNodes });\n\t            var rows = nodes.map(function (node) {\n\t                return _this5.options.rowRenderer(node, _this5.options);\n\t            });\n\t\n\t            // Update nodes & rows\n\t            this.nodes.splice.apply(this.nodes, [nodeIndex + 1, 0].concat(nodes));\n\t            this.rows.splice.apply(this.rows, [nodeIndex + 1, 0].concat(rows));\n\t\n\t            // Update the row corresponding to the node\n\t            this.rows[nodeIndex] = this.options.rowRenderer(node, this.options);\n\t\n\t            // Add all child nodes to the lookup table if the first child does not exist in the lookup table\n\t            if (nodes.length > 0 && !this.nodeTable.get(nodes[0])) {\n\t                nodes.forEach(function (node) {\n\t                    if (node.id !== undefined) {\n\t                        _this5.nodeTable.set(node.id, node);\n\t                    }\n\t                });\n\t            }\n\t\n\t            // Emit the 'openNode' event\n\t            this.emit('openNode', node);\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t\n\t            return true;\n\t        }\n\t        // Removes all child nodes from a parent node.\n\t        // @param {Node} parentNode The Node object that defines the parent node.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'removeChildNodes',\n\t        value: function removeChildNodes(parentNode) {\n\t            var _this6 = this;\n\t\n\t            ensureNodeInstance(parentNode);\n\t\n\t            if (parentNode.children.length === 0) {\n\t                return false;\n\t            }\n\t\n\t            var parentNodeIndex = this.nodes.indexOf(parentNode);\n\t\n\t            // Update selected node\n\t            if (parentNodeIndex >= 0 && this.state.selectedNode) {\n\t                // row #0 - node.0         => parent node (total=4)\n\t                // row #1   - node.0.0\n\t                // row #2       node.0.0.0 => current selected node\n\t                // row #3       node.0.0.1\n\t                // row #4     node.0.1\n\t                var selectedIndex = this.nodes.indexOf(this.state.selectedNode);\n\t                var rangeFrom = parentNodeIndex + 1;\n\t                var rangeTo = parentNodeIndex + parentNode.state.total;\n\t\n\t                if (rangeFrom <= selectedIndex && selectedIndex <= rangeTo) {\n\t                    this.selectNode(parentNode);\n\t                }\n\t            }\n\t\n\t            // Update parent node\n\t            parentNode.children = [];\n\t            parentNode.state.open = parentNode.state.open && parentNode.children.length > 0;\n\t\n\t            // Get the number of nodes to be removed\n\t            var deleteCount = parentNode.state.total;\n\t\n\t            // Subtract the deleteCount for all ancestors (parent, grandparent, etc.) of the current node\n\t            for (var p = parentNode; p !== null; p = p.parent) {\n\t                p.state.total = p.state.total - deleteCount;\n\t            }\n\t\n\t            if (parentNodeIndex >= 0) {\n\t                // Update nodes & rows\n\t                this.nodes.splice(parentNodeIndex + 1, deleteCount);\n\t                this.rows.splice(parentNodeIndex + 1, deleteCount);\n\t\n\t                // Update the row corresponding to the parent node\n\t                this.rows[parentNodeIndex] = this.options.rowRenderer(parentNode, this.options);\n\t            }\n\t\n\t            {\n\t                (function () {\n\t                    // Update open nodes and lookup table\n\t                    var childNodes = _this6.flattenChildNodes(parentNode);\n\t\n\t                    _this6.state.openNodes = _this6.state.openNodes.filter(function (node) {\n\t                        return childNodes.indexOf(node) < 0;\n\t                    });\n\t\n\t                    childNodes.forEach(function (node) {\n\t                        _this6.nodeTable.unset(node.id);\n\t                    });\n\t                })();\n\t            }\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t\n\t            return true;\n\t        }\n\t        // Removes a node and all of its child nodes.\n\t        // @param {Node} node The Node object.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'removeNode',\n\t        value: function removeNode(node) {\n\t            var _this7 = this;\n\t\n\t            ensureNodeInstance(node);\n\t\n\t            var parentNode = node.parent;\n\t            if (!parentNode) {\n\t                return false;\n\t            }\n\t\n\t            // Retrieve node index\n\t            var nodeIndex = this.nodes.indexOf(node);\n\t            var parentNodeIndex = this.nodes.indexOf(parentNode);\n\t\n\t            // Update selected node\n\t            if (nodeIndex >= 0 && this.state.selectedNode) {\n\t                // row #0 - node.0         => parent node (total=4)\n\t                // row #1   - node.0.0     => remove this node (total=2)\n\t                // row #2       node.0.0.0 => current selected node (total=0)\n\t                // row #3       node.0.0.1\n\t                // row #4     node.0.1     => next selected node (total=0)\n\t                var selectedIndex = this.nodes.indexOf(this.state.selectedNode);\n\t                var rangeFrom = nodeIndex;\n\t                var rangeTo = nodeIndex + node.state.total + 1;\n\t\n\t                if (rangeFrom <= selectedIndex && selectedIndex <= rangeTo) {\n\t                    // Change the selected node in the following order:\n\t                    // 1. next sibling node\n\t                    // 2. previous sibling node\n\t                    // 3. parent node\n\t                    var selectedNode = node.getNextSibling() || node.getPreviousSibling() || node.getParent();\n\t                    this.selectNode(selectedNode);\n\t                }\n\t            }\n\t\n\t            // Update parent node\n\t            parentNode.children.splice(parentNode.children.indexOf(node), 1);\n\t            parentNode.state.open = parentNode.state.open && parentNode.children.length > 0;\n\t\n\t            // Get the number of nodes to be removed\n\t            var deleteCount = node.state.total + 1;\n\t\n\t            // Subtract the deleteCount for all ancestors (parent, grandparent, etc.) of the current node\n\t            for (var p = parentNode; p !== null; p = p.parent) {\n\t                p.state.total = p.state.total - deleteCount;\n\t            }\n\t\n\t            if (nodeIndex >= 0) {\n\t                // Update nodes & rows\n\t                this.nodes.splice(nodeIndex, deleteCount);\n\t                this.rows.splice(nodeIndex, deleteCount);\n\t            }\n\t\n\t            // Update the row corresponding to the parent node\n\t            if (parentNodeIndex >= 0) {\n\t                this.rows[parentNodeIndex] = this.options.rowRenderer(parentNode, this.options);\n\t            }\n\t\n\t            {\n\t                (function () {\n\t                    // Update open nodes and lookup table\n\t                    var nodes = _this7.flattenNode(node);\n\t\n\t                    _this7.state.openNodes = _this7.state.openNodes.filter(function (node) {\n\t                        return nodes.indexOf(node) < 0;\n\t                    });\n\t\n\t                    nodes.forEach(function (node) {\n\t                        _this7.nodeTable.unset(node.id);\n\t                    });\n\t                })();\n\t            }\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t\n\t            return true;\n\t        }\n\t        // Sets the current scroll position to this node.\n\t        // @param {Node} node The Node object.\n\t        // @return {number} Returns the vertical scroll position, or -1 on error.\n\t\n\t    }, {\n\t        key: 'scrollToNode',\n\t        value: function scrollToNode(node) {\n\t            ensureNodeInstance(node);\n\t\n\t            // Retrieve node index\n\t            var nodeIndex = this.nodes.indexOf(node);\n\t            if (nodeIndex < 0) {\n\t                return -1;\n\t            }\n\t            if (!this.contentElement) {\n\t                return -1;\n\t            }\n\t            // Get the offset height of the first child element that contains the \"tree-item\" class\n\t            var firstChild = this.contentElement.querySelectorAll('.tree-item')[0];\n\t            var rowHeight = firstChild && firstChild.offsetHeight || 0;\n\t            return this.scrollTop(nodeIndex * rowHeight);\n\t        }\n\t        // Gets (or sets) the current vertical position of the scroll bar.\n\t        // @param {number} [value] An integer that indicates the new position to set the scroll bar to.\n\t        // @return {number} Returns the vertical scroll position.\n\t\n\t    }, {\n\t        key: 'scrollTop',\n\t        value: function scrollTop(value) {\n\t            if (!this.scrollElement) {\n\t                return 0;\n\t            }\n\t            if (value !== undefined) {\n\t                this.scrollElement.scrollTop = Number(value);\n\t            }\n\t            return this.scrollElement.scrollTop;\n\t        }\n\t        // Selects a node.\n\t        // @param {Node} node The Node object. If null or undefined, deselects the current node.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'selectNode',\n\t        value: function selectNode() {\n\t            var node = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t            if (!this.options.selectable) {\n\t                return false;\n\t            }\n\t\n\t            if (node === null) {\n\t                // Deselect the current node\n\t                if (this.state.selectedNode) {\n\t                    var selectedNode = this.state.selectedNode;\n\t                    var selectedIndex = this.nodes.indexOf(selectedNode);\n\t\n\t                    selectedNode.state.selected = false;\n\t                    this.rows[selectedIndex] = this.options.rowRenderer(selectedNode, this.options);\n\t                    this.state.selectedNode = null;\n\t\n\t                    // Emit the 'selectNode' event\n\t                    this.emit('selectNode', null);\n\t\n\t                    // Updates list with new data\n\t                    this.update();\n\t\n\t                    return true;\n\t                }\n\t\n\t                return false;\n\t            }\n\t\n\t            ensureNodeInstance(node);\n\t\n\t            // Retrieve node index\n\t            var nodeIndex = this.nodes.indexOf(node);\n\t            if (nodeIndex < 0) {\n\t                throw new Error('Invalid node index');\n\t            }\n\t\n\t            // Select this node\n\t            if (this.state.selectedNode !== node) {\n\t                node.state.selected = true;\n\t\n\t                // Update the row corresponding to the node\n\t                this.rows[nodeIndex] = this.options.rowRenderer(node, this.options);\n\t            }\n\t\n\t            // Deselect the current node\n\t            if (this.state.selectedNode) {\n\t                var _selectedNode = this.state.selectedNode;\n\t                var _selectedIndex = this.nodes.indexOf(_selectedNode);\n\t                _selectedNode.state.selected = false;\n\t                this.rows[_selectedIndex] = this.options.rowRenderer(_selectedNode, this.options);\n\t            }\n\t\n\t            if (this.state.selectedNode !== node) {\n\t                this.state.selectedNode = node;\n\t\n\t                // Emit the 'selectNode' event\n\t                this.emit('selectNode', node);\n\t            } else {\n\t                this.state.selectedNode = null;\n\t\n\t                // Emit the 'selectNode' event\n\t                this.emit('selectNode', null);\n\t            }\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t\n\t            return true;\n\t        }\n\t        // Toggles a node to display or hide its children.\n\t        // @param {Node} node The Node object.\n\t\n\t    }, {\n\t        key: 'toggleNode',\n\t        value: function toggleNode(node) {\n\t            if (this.state.openNodes.indexOf(node) >= 0) {\n\t                // close node\n\t                this.closeNode(node);\n\t            } else {\n\t                // open node\n\t                this.openNode(node);\n\t            }\n\t        }\n\t        // Serializes the current state of a node to a JSON string.\n\t        // @param {Node} node The Node object. If null, returns the whole tree.\n\t        // @return {string} Returns a JSON string represented the tree.\n\t\n\t    }, {\n\t        key: 'toString',\n\t        value: function toString() {\n\t            var node = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t            var traverse = function traverse(node) {\n\t                var s = '[';\n\t                if (node && node.children) {\n\t                    var _loop = function _loop(i) {\n\t                        var list = [];\n\t                        s = s + '{';\n\t                        Object.keys(node).forEach(function (key) {\n\t                            var value = node[key];\n\t                            if (key === 'parent') {\n\t                                // ignore parent\n\t                                return;\n\t                            }\n\t                            if (key === 'children') {\n\t                                // traverse child nodes\n\t                                list.push('\"' + key + '\":' + traverse(node.children[i]));\n\t                                return;\n\t                            }\n\t                            if (typeof value === 'string' || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t                                list.push('\"' + key + '\":' + JSON.stringify(value));\n\t                            } else {\n\t                                // primitive types\n\t                                list.push('\"' + key + '\":' + value);\n\t                            }\n\t                        });\n\t                        s = s + list.join(',');\n\t                        s = s + '}' + (i === node.children.length - 1 ? '' : ',');\n\t                    };\n\t\n\t                    for (var i = 0; i < node.children.length; ++i) {\n\t                        _loop(i);\n\t                    }\n\t                }\n\t                s = s + ']';\n\t                return s;\n\t            };\n\t\n\t            if (!node) {\n\t                node = this.state.rootNode;\n\t            }\n\t\n\t            return traverse(node);\n\t        }\n\t        // Updates the tree.\n\t\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            // Update the list with new data\n\t            this.clusterize.update(this.rows);\n\t\n\t            // Emit the 'update' event\n\t            this.emit('update');\n\t        }\n\t        // Updates the data of a node.\n\t        // @param {Node} node The Node object.\n\t        // @param {Object} data The data object.\n\t\n\t    }, {\n\t        key: 'updateNode',\n\t        value: function updateNode(node, data) {\n\t            ensureNodeInstance(node);\n\t\n\t            // The static attributes (i.e. children, parent, and state) are being protected\n\t            var _node = node;\n\t            var children = _node.children;\n\t            var parent = _node.parent;\n\t            var state = _node.state;\n\t\n\t            node = extend(node, data, { children: children, parent: parent, state: state });\n\t\n\t            // Retrieve node index\n\t            var nodeIndex = this.nodes.indexOf(node);\n\t            if (nodeIndex >= 0) {\n\t                // Update the row corresponding to the node\n\t                this.rows[nodeIndex] = this.options.rowRenderer(node, this.options);\n\t\n\t                // Updates list with new data\n\t                this.update();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return InfiniteTree;\n\t}(_events2['default'].EventEmitter);\n\t\n\t// IE8 compatibility output\n\t\n\t\n\tmodule.exports = InfiniteTree;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      }\n\t      throw TypeError('Uncaught, unspecified \"error\" event.');\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*! Clusterize.js - v0.16.0 - 2016-03-12\r\n\t* http://NeXTs.github.com/Clusterize.js/\r\n\t* Copyright (c) 2015 Denis Lukov; Licensed GPLv3 */\r\n\t\r\n\t;(function(name, definition) {\r\n\t    if (true) module.exports = definition();\r\n\t    else if (typeof define == 'function' && typeof define.amd == 'object') define(definition);\r\n\t    else this[name] = definition();\r\n\t}('Clusterize', function() {\r\n\t  \"use strict\"\r\n\t\r\n\t  // detect ie9 and lower\r\n\t  // https://gist.github.com/padolsey/527683#comment-786682\r\n\t  var ie = (function(){\r\n\t    for( var v = 3,\r\n\t             el = document.createElement('b'),\r\n\t             all = el.all || [];\r\n\t         el.innerHTML = '<!--[if gt IE ' + (++v) + ']><i><![endif]-->',\r\n\t         all[0];\r\n\t       ){}\r\n\t    return v > 4 ? v : document.documentMode;\r\n\t  }()),\r\n\t  is_mac = navigator.platform.toLowerCase().indexOf('mac') + 1;\r\n\t  var Clusterize = function(data) {\r\n\t    if( ! (this instanceof Clusterize))\r\n\t      return new Clusterize(data);\r\n\t    var self = this;\r\n\t\r\n\t    var defaults = {\r\n\t      item_height: 0,\r\n\t      block_height: 0,\r\n\t      rows_in_block: 50,\r\n\t      rows_in_cluster: 0,\r\n\t      cluster_height: 0,\r\n\t      blocks_in_cluster: 4,\r\n\t      tag: null,\r\n\t      content_tag: null,\r\n\t      show_no_data_row: true,\r\n\t      no_data_class: 'clusterize-no-data',\r\n\t      no_data_text: 'No data',\r\n\t      keep_parity: true,\r\n\t      callbacks: {},\r\n\t      scroll_top: 0\r\n\t    }\r\n\t\r\n\t    // public parameters\r\n\t    self.options = {};\r\n\t    var options = ['rows_in_block', 'blocks_in_cluster', 'show_no_data_row', 'no_data_class', 'no_data_text', 'keep_parity', 'tag', 'callbacks'];\r\n\t    for(var i = 0, option; option = options[i]; i++) {\r\n\t      self.options[option] = typeof data[option] != 'undefined' && data[option] != null\r\n\t        ? data[option]\r\n\t        : defaults[option];\r\n\t    }\r\n\t\r\n\t    var elems = ['scroll', 'content'];\r\n\t    for(var i = 0, elem; elem = elems[i]; i++) {\r\n\t      self[elem + '_elem'] = data[elem + 'Id']\r\n\t        ? document.getElementById(data[elem + 'Id'])\r\n\t        : data[elem + 'Elem'];\r\n\t      if( ! self[elem + '_elem'])\r\n\t        throw new Error(\"Error! Could not find \" + elem + \" element\");\r\n\t    }\r\n\t\r\n\t    // tabindex forces the browser to keep focus on the scrolling list, fixes #11\r\n\t    if( ! self.content_elem.hasAttribute('tabindex'))\r\n\t      self.content_elem.setAttribute('tabindex', 0);\r\n\t\r\n\t    // private parameters\r\n\t    var rows = isArray(data.rows)\r\n\t        ? data.rows\r\n\t        : self.fetchMarkup(),\r\n\t      cache = {data: '', bottom: 0},\r\n\t      scroll_top = self.scroll_elem.scrollTop;\r\n\t\r\n\t    // get row height\r\n\t    self.exploreEnvironment(rows);\r\n\t\r\n\t    // append initial data\r\n\t    self.insertToDOM(rows, cache);\r\n\t\r\n\t    // restore the scroll position\r\n\t    self.scroll_elem.scrollTop = scroll_top;\r\n\t\r\n\t    // adding scroll handler\r\n\t    var last_cluster = false,\r\n\t    scroll_debounce = 0,\r\n\t    pointer_events_set = false,\r\n\t    scrollEv = function() {\r\n\t      // fixes scrolling issue on Mac #3\r\n\t      if (is_mac) {\r\n\t          if( ! pointer_events_set) self.content_elem.style.pointerEvents = 'none';\r\n\t          pointer_events_set = true;\r\n\t          clearTimeout(scroll_debounce);\r\n\t          scroll_debounce = setTimeout(function () {\r\n\t              self.content_elem.style.pointerEvents = 'auto';\r\n\t              pointer_events_set = false;\r\n\t          }, 50);\r\n\t      }\r\n\t      if (last_cluster != (last_cluster = self.getClusterNum()))\r\n\t        self.insertToDOM(rows, cache);\r\n\t      if (self.options.callbacks.scrollingProgress)\r\n\t        self.options.callbacks.scrollingProgress(self.getScrollProgress());\r\n\t    },\r\n\t    resize_debounce = 0,\r\n\t    resizeEv = function() {\r\n\t      clearTimeout(resize_debounce);\r\n\t      resize_debounce = setTimeout(self.refresh, 100);\r\n\t    }\r\n\t    on('scroll', self.scroll_elem, scrollEv);\r\n\t    on('resize', window, resizeEv);\r\n\t\r\n\t    // public methods\r\n\t    self.destroy = function(clean) {\r\n\t      off('scroll', self.scroll_elem, scrollEv);\r\n\t      off('resize', window, resizeEv);\r\n\t      self.html((clean ? self.generateEmptyRow() : rows).join(''));\r\n\t    }\r\n\t    self.refresh = function() {\r\n\t      self.getRowsHeight(rows) && self.update(rows);\r\n\t    }\r\n\t    self.update = function(new_rows) {\r\n\t      rows = isArray(new_rows)\r\n\t        ? new_rows\r\n\t        : [];\r\n\t      var scroll_top = self.scroll_elem.scrollTop;\r\n\t      // fixes #39\r\n\t      if(rows.length * self.options.item_height < scroll_top) {\r\n\t        self.scroll_elem.scrollTop = 0;\r\n\t        last_cluster = 0;\r\n\t      }\r\n\t      self.insertToDOM(rows, cache);\r\n\t      self.scroll_elem.scrollTop = scroll_top;\r\n\t    }\r\n\t    self.clear = function() {\r\n\t      self.update([]);\r\n\t    }\r\n\t    self.getRowsAmount = function() {\r\n\t      return rows.length;\r\n\t    }\r\n\t    self.getScrollProgress = function() {\r\n\t      return this.options.scroll_top / (rows.length * this.options.item_height) * 100 || 0;\r\n\t    }\r\n\t\r\n\t    var add = function(where, _new_rows) {\r\n\t      var new_rows = isArray(_new_rows)\r\n\t        ? _new_rows\r\n\t        : [];\r\n\t      if( ! new_rows.length) return;\r\n\t      rows = where == 'append'\r\n\t        ? rows.concat(new_rows)\r\n\t        : new_rows.concat(rows);\r\n\t      self.insertToDOM(rows, cache);\r\n\t    }\r\n\t    self.append = function(rows) {\r\n\t      add('append', rows);\r\n\t    }\r\n\t    self.prepend = function(rows) {\r\n\t      add('prepend', rows);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  Clusterize.prototype = {\r\n\t    constructor: Clusterize,\r\n\t    // fetch existing markup\r\n\t    fetchMarkup: function() {\r\n\t      var rows = [], rows_nodes = this.getChildNodes(this.content_elem);\r\n\t      while (rows_nodes.length) {\r\n\t        rows.push(rows_nodes.shift().outerHTML);\r\n\t      }\r\n\t      return rows;\r\n\t    },\r\n\t    // get tag name, content tag name, tag height, calc cluster height\r\n\t    exploreEnvironment: function(rows) {\r\n\t      var opts = this.options;\r\n\t      opts.content_tag = this.content_elem.tagName.toLowerCase();\r\n\t      if( ! rows.length) return;\r\n\t      if(ie && ie <= 9 && ! opts.tag) opts.tag = rows[0].match(/<([^>\\s/]*)/)[1].toLowerCase();\r\n\t      if(this.content_elem.children.length <= 1) this.html(rows[0] + rows[0] + rows[0]);\r\n\t      if( ! opts.tag) opts.tag = this.content_elem.children[0].tagName.toLowerCase();\r\n\t      this.getRowsHeight(rows);\r\n\t    },\r\n\t    getRowsHeight: function(rows) {\r\n\t      var opts = this.options,\r\n\t        prev_item_height = opts.item_height;\r\n\t      opts.cluster_height = 0\r\n\t      if( ! rows.length) return;\r\n\t      var nodes = this.content_elem.children;\r\n\t      opts.item_height = nodes[Math.floor(nodes.length / 2)].offsetHeight;\r\n\t      // consider table's border-spacing\r\n\t      if(opts.tag == 'tr' && getStyle('borderCollapse', this.content_elem) != 'collapse')\r\n\t        opts.item_height += parseInt(getStyle('borderSpacing', this.content_elem)) || 0;\r\n\t      opts.block_height = opts.item_height * opts.rows_in_block;\r\n\t      opts.rows_in_cluster = opts.blocks_in_cluster * opts.rows_in_block;\r\n\t      opts.cluster_height = opts.blocks_in_cluster * opts.block_height;\r\n\t      return prev_item_height != opts.item_height;\r\n\t    },\r\n\t    // get current cluster number\r\n\t    getClusterNum: function () {\r\n\t      this.options.scroll_top = this.scroll_elem.scrollTop;\r\n\t      return Math.floor(this.options.scroll_top / (this.options.cluster_height - this.options.block_height)) || 0;\r\n\t    },\r\n\t    // generate empty row if no data provided\r\n\t    generateEmptyRow: function() {\r\n\t      var opts = this.options;\r\n\t      if( ! opts.tag || ! opts.show_no_data_row) return [];\r\n\t      var empty_row = document.createElement(opts.tag),\r\n\t        no_data_content = document.createTextNode(opts.no_data_text), td;\r\n\t      empty_row.className = opts.no_data_class;\r\n\t      if(opts.tag == 'tr') {\r\n\t        td = document.createElement('td');\r\n\t        td.appendChild(no_data_content);\r\n\t      }\r\n\t      empty_row.appendChild(td || no_data_content);\r\n\t      return [empty_row.outerHTML];\r\n\t    },\r\n\t    // generate cluster for current scroll position\r\n\t    generate: function (rows, cluster_num) {\r\n\t      var opts = this.options,\r\n\t        rows_len = rows.length;\r\n\t      if (rows_len < opts.rows_in_block) {\r\n\t        return {\r\n\t          top_offset: 0,\r\n\t          bottom_offset: 0,\r\n\t          rows_above: 0,\r\n\t          rows: rows_len ? rows : this.generateEmptyRow()\r\n\t        }\r\n\t      }\r\n\t      if( ! opts.cluster_height) {\r\n\t        this.exploreEnvironment(rows);\r\n\t      }\r\n\t      var items_start = Math.max((opts.rows_in_cluster - opts.rows_in_block) * cluster_num, 0),\r\n\t        items_end = items_start + opts.rows_in_cluster,\r\n\t        top_offset = Math.max(items_start * opts.item_height, 0),\r\n\t        bottom_offset = Math.max((rows_len - items_end) * opts.item_height, 0),\r\n\t        this_cluster_rows = [],\r\n\t        rows_above = items_start;\r\n\t      if(top_offset < 1) {\r\n\t        rows_above++;\r\n\t      }\r\n\t      for (var i = items_start; i < items_end; i++) {\r\n\t        rows[i] && this_cluster_rows.push(rows[i]);\r\n\t      }\r\n\t      return {\r\n\t        top_offset: top_offset,\r\n\t        bottom_offset: bottom_offset,\r\n\t        rows_above: rows_above,\r\n\t        rows: this_cluster_rows\r\n\t      }\r\n\t    },\r\n\t    renderExtraTag: function(class_name, height) {\r\n\t      var tag = document.createElement(this.options.tag),\r\n\t        clusterize_prefix = 'clusterize-';\r\n\t      tag.className = [clusterize_prefix + 'extra-row', clusterize_prefix + class_name].join(' ');\r\n\t      height && (tag.style.height = height + 'px');\r\n\t      return tag.outerHTML;\r\n\t    },\r\n\t    // if necessary verify data changed and insert to DOM\r\n\t    insertToDOM: function(rows, cache) {\r\n\t      var data = this.generate(rows, this.getClusterNum()),\r\n\t        this_cluster_rows = data.rows.join(''),\r\n\t        this_cluster_content_changed = this.checkChanges('data', this_cluster_rows, cache),\r\n\t        only_bottom_offset_changed = this.checkChanges('bottom', data.bottom_offset, cache),\r\n\t        callbacks = this.options.callbacks,\r\n\t        layout = [];\r\n\t\r\n\t      if(this_cluster_content_changed) {\r\n\t        if(data.top_offset) {\r\n\t          this.options.keep_parity && layout.push(this.renderExtraTag('keep-parity'));\r\n\t          layout.push(this.renderExtraTag('top-space', data.top_offset));\r\n\t        }\r\n\t        layout.push(this_cluster_rows);\r\n\t        data.bottom_offset && layout.push(this.renderExtraTag('bottom-space', data.bottom_offset));\r\n\t        callbacks.clusterWillChange && callbacks.clusterWillChange();\r\n\t        this.html(layout.join(''));\r\n\t        this.options.content_tag == 'ol' && this.content_elem.setAttribute('start', data.rows_above);\r\n\t        callbacks.clusterChanged && callbacks.clusterChanged();\r\n\t      } else if(only_bottom_offset_changed) {\r\n\t        this.content_elem.lastChild.style.height = data.bottom_offset + 'px';\r\n\t      }\r\n\t    },\r\n\t    // unfortunately ie <= 9 does not allow to use innerHTML for table elements, so make a workaround\r\n\t    html: function(data) {\r\n\t      var content_elem = this.content_elem;\r\n\t      if(ie && ie <= 9 && this.options.tag == 'tr') {\r\n\t        var div = document.createElement('div'), last;\r\n\t        div.innerHTML = '<table><tbody>' + data + '</tbody></table>';\r\n\t        while((last = content_elem.lastChild)) {\r\n\t          content_elem.removeChild(last);\r\n\t        }\r\n\t        var rows_nodes = this.getChildNodes(div.firstChild.firstChild);\r\n\t        while (rows_nodes.length) {\r\n\t          content_elem.appendChild(rows_nodes.shift());\r\n\t        }\r\n\t      } else {\r\n\t        content_elem.innerHTML = data;\r\n\t      }\r\n\t    },\r\n\t    getChildNodes: function(tag) {\r\n\t        var child_nodes = tag.children, nodes = [];\r\n\t        for (var i = 0, ii = child_nodes.length; i < ii; i++) {\r\n\t            nodes.push(child_nodes[i]);\r\n\t        }\r\n\t        return nodes;\r\n\t    },\r\n\t    checkChanges: function(type, value, cache) {\r\n\t      var changed = value != cache[type];\r\n\t      cache[type] = value;\r\n\t      return changed;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // support functions\r\n\t  function on(evt, element, fnc) {\r\n\t    return element.addEventListener ? element.addEventListener(evt, fnc, false) : element.attachEvent(\"on\" + evt, fnc);\r\n\t  }\r\n\t  function off(evt, element, fnc) {\r\n\t    return element.removeEventListener ? element.removeEventListener(evt, fnc, false) : element.detachEvent(\"on\" + evt, fnc);\r\n\t  }\r\n\t  function isArray(arr) {\r\n\t    return Object.prototype.toString.call(arr) === '[object Array]';\r\n\t  }\r\n\t  function getStyle(prop, elem) {\r\n\t    return window.getComputedStyle ? window.getComputedStyle(elem)[prop] : elem.currentStyle[prop];\r\n\t  }\r\n\t\r\n\t  return Clusterize;\r\n\t}));\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _flatten = __webpack_require__(5);\n\t\n\tvar _flatten2 = _interopRequireDefault(_flatten);\n\t\n\tvar _node = __webpack_require__(7);\n\t\n\tvar _node2 = _interopRequireDefault(_node);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t// IE8 compatibility output\n\tmodule.exports = {\n\t    flatten: _flatten2['default'],\n\t    Node: _node2['default']\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _extend = __webpack_require__(6);\n\t\n\tvar _extend2 = _interopRequireDefault(_extend);\n\t\n\tvar _node = __webpack_require__(7);\n\t\n\tvar _node2 = _interopRequireDefault(_node);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t// @param {object|array} nodes The tree nodes\n\t// @param {object} [options] The options object\n\t// @param {boolean} [options.openAllNodes] True to open all nodes. Defaults to false.\n\t// @param {array} [options.openNodes] An array that contains the ids of open nodes\n\t// @return {array}\n\tvar flatten = function flatten() {\n\t    var nodes = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    nodes = [].concat(nodes);\n\t\n\t    var flatten = [];\n\t    var stack = [];\n\t    var pool = {\n\t        lastChild: {}\n\t    };\n\t\n\t    options.openAllNodes = !!options.openAllNodes;\n\t    options.openNodes = options.openNodes || [];\n\t    options.throwOnError = !!options.throwOnError;\n\t\n\t    {\n\t        // root node\n\t        var firstNode = nodes.length > 0 ? nodes[0] : null;\n\t        var parentNode = firstNode ? firstNode.parent : null;\n\t        if (parentNode && !(parentNode instanceof _node2['default'])) {\n\t            parentNode = new _node2['default'](parentNode);\n\t        }\n\t        var rootNode = parentNode || new _node2['default']({ // defaults\n\t            label: '',\n\t            parent: null,\n\t            children: nodes,\n\t            state: {\n\t                depth: -1,\n\t                open: true, // always open\n\t                path: '',\n\t                prefixMask: '',\n\t                total: 0\n\t            }\n\t        });\n\t\n\t        if (rootNode === parentNode) {\n\t            var subtotal = rootNode.state.total || 0;\n\t\n\t            // Traversing up through its ancestors\n\t            var p = rootNode;\n\t            while (p) {\n\t                var _p$state = p.state;\n\t                var path = _p$state.path;\n\t                var _p$state$total = _p$state.total;\n\t                var total = _p$state$total === undefined ? 0 : _p$state$total;\n\t\n\t                // Rebuild the lastChild pool\n\t\n\t                if (p.isLastChild() && path) {\n\t                    pool.lastChild[path] = true;\n\t                }\n\t\n\t                // Subtract the number 'subtotal' from the total of the root node and all its ancestors\n\t                p.state.total = total - subtotal;\n\t                if (p.state.total < 0) {\n\t                    if (options.throwOnError) {\n\t                        throw new Error('The node might have been corrupted: id=' + JSON.stringify(p.id) + ', state=' + JSON.stringify(p.state));\n\t                    } else {\n\t                        console && console.log('Error: The node might have been corrupted: id=%s, label=%s, parent=%s, children=%s, state=%s', JSON.stringify(p.id), JSON.stringify(p.label), p.parent, p.children, JSON.stringify(p.state));\n\t                    }\n\t                }\n\t\n\t                p = p.parent;\n\t            }\n\t        }\n\t\n\t        stack.push([rootNode, rootNode.state.depth, 0]);\n\t    }\n\t\n\t    while (stack.length > 0) {\n\t        var _stack$pop = stack.pop();\n\t\n\t        var _stack$pop2 = _slicedToArray(_stack$pop, 3);\n\t\n\t        var current = _stack$pop2[0];\n\t        var depth = _stack$pop2[1];\n\t        var index = _stack$pop2[2];\n\t\n\t        var _loop = function _loop() {\n\t            var node = current.children[index];\n\t            if (!(node instanceof _node2['default'])) {\n\t                node = new _node2['default'](node);\n\t            }\n\t            node.parent = current;\n\t            node.children = node.children || [];\n\t\n\t            // Ensure parent.children[index] is equal to the current node\n\t            node.parent.children[index] = node;\n\t\n\t            var path = current.state.path + '.' + index;\n\t            var open = node.hasChildren() && function () {\n\t                var openAllNodes = options.openAllNodes;\n\t                var openNodes = options.openNodes;\n\t\n\t                if (openAllNodes) {\n\t                    return true;\n\t                }\n\t                // determine by node object\n\t                if (openNodes.indexOf(node) >= 0) {\n\t                    return true;\n\t                }\n\t                // determine by node id\n\t                if (openNodes.indexOf(node.id) >= 0) {\n\t                    return true;\n\t                }\n\t                return false;\n\t            }();\n\t            var prefixMask = function (prefix) {\n\t                var mask = '';\n\t                while (prefix.length > 0) {\n\t                    prefix = prefix.replace(/\\.\\d+$/, '');\n\t                    if (!prefix || pool.lastChild[prefix]) {\n\t                        mask = '0' + mask;\n\t                    } else {\n\t                        mask = '1' + mask;\n\t                    }\n\t                }\n\t                return mask;\n\t            }(path);\n\t\n\t            if (node.isLastChild()) {\n\t                pool.lastChild[path] = true;\n\t            }\n\t\n\t            // This allows you to put extra information to node.state\n\t            node.state = (0, _extend2['default'])({}, node.state, {\n\t                depth: depth + 1,\n\t                open: open,\n\t                path: path,\n\t                prefixMask: prefixMask,\n\t                total: 0\n\t            });\n\t\n\t            var parentDidOpen = true;\n\t\n\t            {\n\t                // Check the open state from its ancestors\n\t                var _p = node;\n\t                while (_p.parent !== null) {\n\t                    if (_p.parent.state.open === false) {\n\t                        parentDidOpen = false;\n\t                        break;\n\t                    }\n\t                    _p = _p.parent;\n\t                }\n\t            }\n\t\n\t            if (parentDidOpen) {\n\t                // Push the node to flatten list only if all of its parent nodes have the open state set to true\n\t                flatten.push(node);\n\t\n\t                // Update the total number of visible child nodes\n\t                var _p2 = node;\n\t                while (_p2.parent !== null) {\n\t                    _p2.parent.state.total++;\n\t                    _p2 = _p2.parent;\n\t                }\n\t            }\n\t\n\t            ++index;\n\t\n\t            if (node.hasChildren()) {\n\t                // Push back parent node to the stack that will be able to continue\n\t                // the next iteration once all the child nodes of the current node\n\t                // have been completely explored.\n\t                stack.push([current, depth, index]);\n\t\n\t                index = 0;\n\t                depth = depth + 1;\n\t                current = node;\n\t            }\n\t        };\n\t\n\t        while (index < current.children.length) {\n\t            _loop();\n\t        }\n\t    }\n\t\n\t    return flatten;\n\t};\n\t\n\t// IE8 compatibility output\n\tmodule.exports = flatten;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar extend = function extend(target) {\n\t    for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        sources[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    if (target === undefined || target === null) {\n\t        throw new TypeError('Cannot convert undefined or null to object');\n\t    }\n\t\n\t    var output = Object(target);\n\t    for (var index = 0; index < sources.length; index++) {\n\t        var source = sources[index];\n\t        if (source !== undefined && source !== null) {\n\t            for (var key in source) {\n\t                if (source.hasOwnProperty(key)) {\n\t                    output[key] = source[key];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return output;\n\t};\n\t\n\t// IE8 compatibility output\n\tmodule.exports = extend;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _extend = __webpack_require__(6);\n\t\n\tvar _extend2 = _interopRequireDefault(_extend);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Node = function () {\n\t    function Node(node) {\n\t        _classCallCheck(this, Node);\n\t\n\t        this.id = null;\n\t        this.label = '';\n\t        this.parent = null;\n\t        this.children = [];\n\t        this.state = {};\n\t\n\t        (0, _extend2['default'])(this, node);\n\t\n\t        this.children = this.children || [];\n\t    }\n\t    // Gets a child node at the specified index.\n\t    // @param {number} The index of the child node.\n\t    // @return {object} Returns an object that defines the node, null otherwise.\n\t\n\t\n\t    _createClass(Node, [{\n\t        key: 'getChildAt',\n\t        value: function getChildAt(index) {\n\t            var node = null;\n\t            if (this.children.length > 0 && index >= 0 && index < this.children.length) {\n\t                node = this.children[index];\n\t            }\n\t            return node;\n\t        }\n\t        // Gets the child nodes.\n\t        // @return {array} Returns an array of objects that define the nodes.\n\t\n\t    }, {\n\t        key: 'getChildren',\n\t        value: function getChildren() {\n\t            return this.children;\n\t        }\n\t        // Gets the first child node.\n\t        // @return {object} Returns an object that defines the node, null otherwise.\n\t\n\t    }, {\n\t        key: 'getFirstChild',\n\t        value: function getFirstChild() {\n\t            var node = null;\n\t            if (this.children.length > 0) {\n\t                node = this.children[0];\n\t            }\n\t            return node;\n\t        }\n\t        // Gets the last child node.\n\t        // @return {object} Returns an object that defines the node, null otherwise.\n\t\n\t    }, {\n\t        key: 'getLastChild',\n\t        value: function getLastChild() {\n\t            var node = null;\n\t            if (this.children.length > 0) {\n\t                node = this.children[this.children.length - 1];\n\t            }\n\t            return node;\n\t        }\n\t        // Gets the next sibling node.\n\t        // @return {object} Returns an object that defines the node, null otherwise.\n\t\n\t    }, {\n\t        key: 'getNextSibling',\n\t        value: function getNextSibling() {\n\t            var node = null;\n\t            if (this.parent) {\n\t                var index = this.parent.children.indexOf(this);\n\t                if (index >= 0 && index < this.parent.children.length - 1) {\n\t                    node = this.parent.children[index + 1];\n\t                }\n\t            }\n\t            return node;\n\t        }\n\t        // Gets the parent node.\n\t        // @return {object} Returns an object that defines the node, null otherwise.\n\t\n\t    }, {\n\t        key: 'getParent',\n\t        value: function getParent() {\n\t            return this.parent;\n\t        }\n\t        // Gets the previous sibling node.\n\t        // @return {object} Returns an object that defines the node, null otherwise.\n\t\n\t    }, {\n\t        key: 'getPreviousSibling',\n\t        value: function getPreviousSibling() {\n\t            var node = null;\n\t            if (this.parent) {\n\t                var index = this.parent.children.indexOf(this);\n\t                if (index > 0 && index < this.parent.children.length) {\n\t                    node = this.parent.children[index - 1];\n\t                }\n\t            }\n\t            return node;\n\t        }\n\t        // Checks whether this node has children.\n\t        // @return {boolean} Returns true if the node has children, false otherwise.\n\t\n\t    }, {\n\t        key: 'hasChildren',\n\t        value: function hasChildren() {\n\t            return this.children.length > 0;\n\t        }\n\t        // Checks whether this node is the last child of its parent.\n\t        // @return {boolean} Returns true if the node is the last child of its parent, false otherwise.\n\t\n\t    }, {\n\t        key: 'isLastChild',\n\t        value: function isLastChild() {\n\t            var hasNextSibling = this.getNextSibling();\n\t            return !hasNextSibling;\n\t        }\n\t    }]);\n\t\n\t    return Node;\n\t}();\n\t\n\t// IE8 compatibility output\n\t\n\t\n\tmodule.exports = Node;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar LookupTable = function () {\n\t    function LookupTable() {\n\t        _classCallCheck(this, LookupTable);\n\t\n\t        this.data = {};\n\t    }\n\t\n\t    _createClass(LookupTable, [{\n\t        key: \"clear\",\n\t        value: function clear() {\n\t            this.data = {};\n\t        }\n\t    }, {\n\t        key: \"get\",\n\t        value: function get(key) {\n\t            return this.data[key];\n\t        }\n\t    }, {\n\t        key: \"has\",\n\t        value: function has(key) {\n\t            return this.data[key] !== undefined;\n\t        }\n\t    }, {\n\t        key: \"set\",\n\t        value: function set(key, value) {\n\t            this.data[key] = value;\n\t            return value;\n\t        }\n\t    }, {\n\t        key: \"unset\",\n\t        value: function unset(key) {\n\t            if (this.data[key] !== undefined) {\n\t                delete this.data[key];\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return LookupTable;\n\t}();\n\t\n\t// IE8 compatibility output\n\t\n\t\n\tmodule.exports = LookupTable;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _helper = __webpack_require__(10);\n\t\n\tvar defaultRowRenderer = function defaultRowRenderer(node, treeOptions) {\n\t    var id = node.id;\n\t    var label = node.label;\n\t    var children = node.children;\n\t    var state = node.state;\n\t    var depth = state.depth;\n\t    var open = state.open;\n\t    var path = state.path;\n\t    var total = state.total;\n\t    var _state$selected = state.selected;\n\t    var selected = _state$selected === undefined ? false : _state$selected;\n\t\n\t    var childrenLength = Object.keys(children).length;\n\t    var more = node.hasChildren();\n\t\n\t    var togglerContent = '';\n\t    if (more && open) {\n\t        togglerContent = '▼';\n\t    }\n\t    if (more && !open) {\n\t        togglerContent = '►';\n\t    }\n\t    var toggler = (0, _helper.buildHTML)('a', togglerContent, {\n\t        'class': function () {\n\t            if (more && open) {\n\t                return (0, _helper.classNames)('tree-toggler');\n\t            }\n\t            if (more && !open) {\n\t                return (0, _helper.classNames)('tree-toggler', 'tree-closed');\n\t            }\n\t            return '';\n\t        }()\n\t    });\n\t    var title = (0, _helper.buildHTML)('span', (0, _helper.quoteattr)(label), {\n\t        'class': (0, _helper.classNames)('tree-title')\n\t    });\n\t    var treeNode = (0, _helper.buildHTML)('div', toggler + title, {\n\t        'class': 'tree-node',\n\t        'style': 'margin-left: ' + depth * 18 + 'px'\n\t    });\n\t\n\t    return (0, _helper.buildHTML)('div', treeNode, {\n\t        'aria-id': id,\n\t        'aria-expanded': more && open,\n\t        'aria-depth': depth,\n\t        'aria-path': path,\n\t        'aria-selected': selected,\n\t        'aria-children': childrenLength,\n\t        'aria-total': total,\n\t        'class': (0, _helper.classNames)('tree-item', { 'tree-selected': selected }),\n\t        'droppable': true\n\t    });\n\t};\n\t\n\t// IE8 compatibility output\n\tmodule.exports = {\n\t    defaultRowRenderer: defaultRowRenderer\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar preventDefault = function preventDefault(e) {\n\t    if (typeof e.preventDefault !== 'undefined') {\n\t        e.preventDefault();\n\t    } else {\n\t        e.returnValue = false;\n\t    }\n\t};\n\t\n\tvar stopPropagation = function stopPropagation(e) {\n\t    if (typeof e.stopPropagation !== 'undefined') {\n\t        e.stopPropagation();\n\t    } else {\n\t        e.cancelBubble = true;\n\t    }\n\t};\n\t\n\t// http://blog.garstasio.com/you-dont-need-jquery/events/#sending-custom-events\n\tvar dispatchEvent = function dispatchEvent(el, eventType) {\n\t    var evt = document.createEvent('Event');\n\t    evt.initEvent(eventType, true, true); // can bubble, and is cancellable\n\t    el.dispatchEvent(evt);\n\t};\n\t\n\t// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Compatibility\n\tvar addEventListener = function addEventListener(target, type, listener) {\n\t    if (target.addEventListener) {\n\t        // Standard\n\t        target.addEventListener(type, listener, false);\n\t    } else if (target.attachEvent) {\n\t        // IE8\n\t        // In Internet Explorer versions before IE 9, you have to use attachEvent rather than the standard addEventListener.\n\t        target.attachEvent('on' + type, listener);\n\t    }\n\t};\n\t\n\t// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n\tvar removeEventListener = function removeEventListener(target, type, listener) {\n\t    if (target.removeEventListener) {\n\t        // Standard\n\t        target.removeEventListener(type, listener, false);\n\t    } else if (target.detachEvent) {\n\t        // IE8\n\t        // In Internet Explorer versions before IE 9, you have to use detachEvent rather than the standard removeEventListener.\n\t        target.detachEvent('on' + type, listener);\n\t    }\n\t};\n\t\n\tvar hasClass = function hasClass(el, className) {\n\t    if (!el) {\n\t        return false;\n\t    }\n\t    var classes = el.className.split(' ');\n\t    return classes.indexOf(className) >= 0;\n\t};\n\t\n\tvar addClass = function addClass(el, className) {\n\t    if (!el) {\n\t        return '';\n\t    }\n\t    if (!hasClass(el, className)) {\n\t        var classes = el.className.split(' ');\n\t        el.className = classes.concat(className).join(' ');\n\t    }\n\t    return el.className;\n\t};\n\t\n\tvar removeClass = function removeClass(el, className) {\n\t    if (!el) {\n\t        return '';\n\t    }\n\t    if (hasClass(el, className)) {\n\t        var classes = el.className.split(' ');\n\t        el.className = classes.filter(function (c) {\n\t            return c !== className;\n\t        }).join(' ');\n\t    }\n\t    return el.className;\n\t};\n\t\n\tvar toggleClass = function toggleClass(el, className) {\n\t    if (!el) {\n\t        return;\n\t    }\n\t    if (hasClass(el, className)) {\n\t        removeClass(el, className);\n\t    } else {\n\t        addClass(el, className);\n\t    }\n\t};\n\t\n\tvar classNames = function classNames() {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t    }\n\t\n\t    var classNames = [];\n\t    args.forEach(function (arg) {\n\t        if (Array.isArray(arg)) {\n\t            classNames = classNames.concat(arg);\n\t        } else if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {\n\t            Object.keys(arg).forEach(function (className) {\n\t                var ok = arg[className];\n\t                if (!!ok) {\n\t                    classNames.push(className);\n\t                }\n\t            });\n\t        } else {\n\t            classNames.push(arg);\n\t        }\n\t    });\n\t    return classNames.join(' ');\n\t};\n\t\n\tvar quoteattr = function quoteattr(s, preserveCR) {\n\t    preserveCR = preserveCR ? '&#13;' : '\\n';\n\t    return ('' + s). /* Forces the conversion to string. */\n\t    replace(/&/g, '&amp;') /* This MUST be the 1st replacement. */\n\t    .replace(/'/g, '&apos;') /* The 4 other predefined entities, required. */\n\t    .replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;')\n\t    /*\n\t     * You may add other replacements here for HTML only\n\t     * (but it's not necessary).\n\t     * Or for XML, only if the named entities are defined in its DTD.\n\t     */\n\t    .replace(/\\r\\n/g, preserveCR) /* Must be before the next replacement. */\n\t    .replace(/[\\r\\n]/g, preserveCR);\n\t};\n\t\n\t/**\n\t * Example #1:\n\t * =========================================================================\n\t * <a id=\"mymail href=\"http://mymail.example.com\">My Mail</a>\n\t *\n\t * buildHTML('a', 'My Mail', {\n\t *     id: 'mymail',\n\t *     href: 'http://mymail.example.com'\n\t * });\n\t *\n\t * Example #2:\n\t * =========================================================================\n\t * <input id=\"myinput\" type=\"text\" value=\"myvalue\" />\n\t *\n\t * buildHTML('input', {\n\t *   id: 'myinput',\n\t *   type: 'text',\n\t *   value: 'myvalue'\n\t * });\n\t *\n\t */\n\tvar buildHTML = function buildHTML(tag, html, attrs) {\n\t    switch (tag) {\n\t        case 'select':\n\t            if ((typeof html === 'undefined' ? 'undefined' : _typeof(html)) === 'object') {\n\t                var options = html || {};\n\t                html = '';\n\t                for (var value in options) {\n\t                    if (!options.hasOwnProperty(value)) {\n\t                        continue;\n\t                    }\n\t                    html += buildHTML('option', options[value] || '', { value: value });\n\t                }\n\t            }\n\t            break;\n\t\n\t        default:\n\t            if ((typeof html === 'undefined' ? 'undefined' : _typeof(html)) === 'object') {\n\t                attrs = html;\n\t                html = undefined;\n\t            }\n\t            break;\n\t    }\n\t\n\t    var h = '<' + tag;\n\t    for (var attr in attrs) {\n\t        if (!attrs.hasOwnProperty(attr)) {\n\t            continue;\n\t        }\n\t        if (typeof attrs[attr] !== 'undefined') {\n\t            h += ' ' + attr + '=\"' + quoteattr(attrs[attr]) + '\"';\n\t        }\n\t    }\n\t    h += typeof html !== 'undefined' ? '>' + html + '</' + tag + '>' : '/>';\n\t\n\t    return h;\n\t};\n\t\n\t// IE8 compatibility output\n\tmodule.exports = {\n\t    preventDefault: preventDefault,\n\t    stopPropagation: stopPropagation,\n\t    dispatchEvent: dispatchEvent,\n\t    addEventListener: addEventListener,\n\t    removeEventListener: removeEventListener,\n\t    hasClass: hasClass,\n\t    addClass: addClass,\n\t    removeClass: removeClass,\n\t    toggleClass: toggleClass,\n\t    classNames: classNames,\n\t    quoteattr: quoteattr,\n\t    buildHTML: buildHTML\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _helper = __webpack_require__(10);\n\t\n\tvar rowRenderer = function rowRenderer(node, treeOptions) {\n\t    var id = node.id;\n\t    var label = node.label;\n\t    var children = node.children;\n\t    var state = node.state;\n\t    var props = node.props;\n\t\n\t    var droppable = treeOptions.droppable && props.droppable;\n\t    var depth = state.depth;\n\t    var open = state.open;\n\t    var path = state.path;\n\t    var total = state.total;\n\t    var _state$selected = state.selected;\n\t    var selected = _state$selected === undefined ? false : _state$selected;\n\t\n\t    var childrenLength = Object.keys(children).length;\n\t    var more = node.hasChildren();\n\t\n\t    var toggler = '';\n\t    if (more) {\n\t        var togglerContent = '';\n\t        if (open) {\n\t            togglerContent = (0, _helper.buildHTML)('i', '', {\n\t                'class': (0, _helper.classNames)('glyphicon', 'glyphicon-triangle-bottom')\n\t            });\n\t        }\n\t        if (!open) {\n\t            togglerContent = (0, _helper.buildHTML)('i', '', {\n\t                'class': (0, _helper.classNames)('glyphicon', 'glyphicon-triangle-right')\n\t            });\n\t        }\n\t        toggler = (0, _helper.buildHTML)('a', togglerContent, {\n\t            'class': function () {\n\t                if (more && open) {\n\t                    return (0, _helper.classNames)('tree-toggler');\n\t                }\n\t                if (more && !open) {\n\t                    return (0, _helper.classNames)('tree-toggler', 'tree-closed');\n\t                }\n\t                return '';\n\t            }()\n\t        });\n\t    }\n\t\n\t    var icon = (0, _helper.buildHTML)('i', '', {\n\t        'class': (0, _helper.classNames)('tree-folder-icon', 'glyphicon', { 'glyphicon-folder-open': more && open }, { 'glyphicon-folder-close': more && !open }, { 'glyphicon-file': !more })\n\t    });\n\t    var title = (0, _helper.buildHTML)('span', (0, _helper.quoteattr)(label), {\n\t        'class': (0, _helper.classNames)('tree-title')\n\t    });\n\t    var count = (0, _helper.buildHTML)('span', childrenLength, {\n\t        'class': 'count'\n\t    });\n\t    var treeNode = (0, _helper.buildHTML)('div', toggler + icon + title + count, {\n\t        'class': 'tree-node',\n\t        'style': 'margin-left: ' + depth * 18 + 'px'\n\t    });\n\t\n\t    var treeNodeAttributes = {\n\t        'aria-id': id,\n\t        'aria-expanded': more && open,\n\t        'aria-depth': depth,\n\t        'aria-path': path,\n\t        'aria-selected': selected,\n\t        'aria-children': childrenLength,\n\t        'aria-total': total,\n\t        'class': (0, _helper.classNames)('tree-item', { 'tree-selected': selected })\n\t    };\n\t    if (droppable) {\n\t        treeNodeAttributes['droppable'] = true;\n\t    }\n\t\n\t    return (0, _helper.buildHTML)('div', treeNode, treeNodeAttributes);\n\t};\n\t\n\texports['default'] = rowRenderer;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(13);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(15)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/stylus-loader/index.js!./index.styl\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/stylus-loader/index.js!./index.styl\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(14)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".infinite-tree-scroll{overflow:auto}.infinite-tree-content{outline:0}.infinite-tree-content .tree-selected.tree-item,.infinite-tree-content .tree-selected.tree-item:hover{background:#deecfd;border:1px solid #06c}.infinite-tree-content .tree-item{border:1px solid transparent;cursor:default}.infinite-tree-content .tree-item:hover{background:#f2fdff}.infinite-tree-content .tree-item.highlight{border:1px dotted #ccc;background-color:#f5f6f7}.infinite-tree-content .tree-node{position:relative}.infinite-tree-content .tree-toggler{color:#666;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-tree-content .tree-toggler:hover{color:#333;text-decoration:none}.infinite-tree-content .tree-title{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-tree-no-data{text-align:center}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(true) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ffdf8ab816aa35d69991\n **/","import InfiniteTree from '../src';\nimport rowRenderer from './renderer';\nimport '../src/index.styl';\nimport { addEventListener, preventDefault, stopPropagation, quoteattr } from '../src/helper';\n\nconst data = [];\nconst source = '{\"id\":\"<root>\",\"label\":\"<root>\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"alpha\",\"label\":\"Alpha\",\"props\":{\"droppable\":true}},{\"id\":\"bravo\",\"label\":\"Bravo\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"charlie\",\"label\":\"Charlie\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"delta\",\"label\":\"Delta\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"echo\",\"label\":\"Echo\",\"props\":{\"droppable\":true}},{\"id\":\"foxtrot\",\"label\":\"Foxtrot\",\"props\":{\"droppable\":true}}]},{\"id\":\"golf\",\"label\":\"Golf\",\"props\":{\"droppable\":true}}]},{\"id\":\"hotel\",\"label\":\"Hotel\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"india\",\"label\":\"India\",\"props\":{\"droppable\":true},\"children\":[{\"id\":\"juliet\",\"label\":\"Juliet\",\"props\":{\"droppable\":true}}]}]},{\"id\":\"kilo\",\"label\":\"Kilo\",\"props\":{\"droppable\":true}}]}]}';\n\nfor (let i = 0; i < 1000; ++i) {\n    data.push(JSON.parse(source.replace(/\"(id|label)\":\"([^\"]*)\"/g, '\"$1\": \"$2.' + i + '\"')));\n}\n\nconst tree = new InfiniteTree({\n    autoOpen: true, // Defaults to false\n    droppable: true, // Defaults to false\n    el: document.querySelector('#tree'),\n    rowRenderer: rowRenderer,\n    selectable: true // Defaults to true\n});\n\nconst updatePreview = (node) => {\n    const el = document.querySelector('#preview');\n    if (node) {\n        el.innerHTML = JSON.stringify({\n            id: node.id,\n            label: node.label,\n            children: node.children ? node.children.length : 0,\n            parent: node.parent ? node.parent.id : null,\n            state: node.state\n        }, null, 2);\n    } else {\n        el.innerHTML = '';\n    }\n};\n\ntree.on('scrollProgress', (progress) => {\n    document.querySelector('#scrolling-progress').style.width = progress + '%';\n});\ntree.on('update', () => {\n    const node = tree.getSelectedNode();\n    updatePreview(node);\n});\ntree.on('openNode', (node) => {\n    console.log('openNode', node);\n});\ntree.on('closeNode', (node) => {\n    console.log('closeNode', node);\n});\ntree.on('dropNode', (node, e) => {\n    const source = e.dataTransfer.getData('text');\n    console.log('Dragged an element ' + JSON.stringify(source) + ' and dropped to ' + JSON.stringify(node.label));\n    document.querySelector('#dropped-result').innerHTML = 'Dropped to <b>' + quoteattr(node.label) + '</b>';\n});\ntree.on('selectNode', (node) => {\n    updatePreview(node);\n});\n\ntree.loadData(data);\n\n// Draggable Element\nconst draggableElement = document.querySelector('#draggable-element');\n\n// http://stackoverflow.com/questions/5500615/internet-explorer-9-drag-and-drop-dnd\naddEventListener(draggableElement, 'selectstart', (e) => {\n    preventDefault(e);\n    stopPropagation(e);\n    draggableElement.dragDrop();\n    return false;\n});\n\naddEventListener(draggableElement, 'dragstart', (e) => {\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text', e.target.id);\n    document.querySelector('#dropped-result').innerHTML = '';\n});\n\naddEventListener(draggableElement, 'dragend', function(e) {\n});\n\nwindow.tree = tree;\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","import events from 'events';\nimport Clusterize from 'clusterize.js';\nimport { flatten, Node } from 'flattree';\nimport LookupTable from './lookup-table';\nimport { defaultRowRenderer } from './renderer';\nimport {\n    preventDefault,\n    stopPropagation,\n    addEventListener,\n    removeEventListener,\n    classNames,\n    addClass,\n    removeClass\n} from './helper';\n\nconst ensureNodeInstance = (node) => {\n    if (!(node instanceof Node)) {\n        throw new Error('The node must be a Node object.');\n    }\n    return true;\n};\n\nconst extend = (target, ...sources) => {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    const output = Object(target);\n    for (let index = 0; index < sources.length; index++) {\n        const source = sources[index];\n        if (source !== undefined && source !== null) {\n            for (let key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n\nclass InfiniteTree extends events.EventEmitter {\n    options = {\n        autoOpen: false,\n        droppable: false,\n        el: null,\n        rowRenderer: defaultRowRenderer,\n        selectable: true\n    };\n    state = {\n        openNodes: [],\n        rootNode: null,\n        selectedNode: null\n    };\n    clusterize = null;\n    nodeTable = new LookupTable();\n    nodes = [];\n    rows = [];\n    scrollElement = null;\n    contentElement = null;\n    dragoverElement = null;\n\n    contentListener = {\n        'click': (e) => {\n            const { target, currentTarget } = e;\n\n            stopPropagation(e);\n\n            if (target !== currentTarget) {\n                let itemTarget = target;\n                let handleToggler = false;\n\n                while (itemTarget && itemTarget.parentElement !== currentTarget) {\n                    if (itemTarget.className.indexOf('tree-toggler') >= 0) {\n                        handleToggler = true;\n                    }\n                    itemTarget = itemTarget.parentElement;\n                }\n\n                const id = itemTarget.getAttribute('aria-id');\n                const node = this.getNodeById(id);\n\n                if (!node) {\n                    return;\n                }\n\n                // Click on the toggler to open/close a tree node\n                if (handleToggler) {\n                    this.toggleNode(node);\n                    return;\n                }\n\n                if (this.options.selectable) {\n                    this.selectNode(node);\n                    return;\n                }\n            }\n        },\n        // https://developer.mozilla.org/en-US/docs/Web/Events/dragenter\n        // The dragenter event is fired when a dragged element or text selection enters a valid drop target.\n        'dragenter': (e) => {\n            const { target, currentTarget } = e;\n\n            if (target === currentTarget) {\n                return;\n            }\n\n            let itemTarget = target;\n            while (itemTarget && itemTarget.parentElement !== currentTarget) {\n                itemTarget = itemTarget.parentElement;\n            }\n\n            if (this.dragoverElement !== itemTarget) {\n                removeClass(this.dragoverElement, 'highlight'); // remove 'highlight' class\n                this.dragoverElement = null;\n\n                if (!(itemTarget.hasAttribute('droppable'))) {\n                    return;\n                }\n\n                const canDrop = !(itemTarget.getAttribute('droppable').match(/false/i));\n                if (canDrop) {\n                    addClass(itemTarget, 'highlight');\n                    this.dragoverElement = itemTarget;\n                }\n            }\n        },\n        // https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n        // The dragend event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key).\n        'dragend': (e) => {\n            if (this.dragoverElement) {\n                removeClass(this.dragoverElement, 'highlight'); // remove 'highlight' class\n                this.dragoverElement = null;\n            }\n        },\n        // https://developer.mozilla.org/en-US/docs/Web/Events/dragover\n        // The dragover event is fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds).\n        'dragover': (e) => {\n            preventDefault(e);\n            e.dataTransfer.dropEffect = 'move';\n            return false;\n        },\n        // https://developer.mozilla.org/en-US/docs/Web/Events/drop\n        // The drop event is fired when an element or text selection is dropped on a valid drop target.\n        'drop': (e) => {\n            // prevent default action (open as link for some elements)\n            preventDefault(e);\n\n            if (this.dragoverElement) {\n                const id = this.dragoverElement.getAttribute('aria-id');\n                const node = this.getNodeById(id);\n\n                removeClass(this.dragoverElement, 'highlight');\n                this.dragoverElement = null;\n\n                this.emit('dropNode', node, e);\n            }\n        }\n    };\n\n    // Creates new InfiniteTree object.\n    constructor(options = {}) {\n        super();\n\n        // Assign options\n        this.options = extend({}, this.options, options);\n\n        if (!this.options.el) {\n            console.error('Failed to initialize infinite-tree: el is not specified.', options);\n            return;\n        }\n\n        this.create();\n\n        // Load tree data if it's provided\n        if (options.data) {\n            this.loadData(options.data);\n        }\n    }\n    create() {\n        if (!this.options.el) {\n            throw new Error('The element option is not specified.');\n        }\n\n        const scrollElement = document.createElement('div');\n        scrollElement.className = classNames(\n            'infinite-tree',\n            'infinite-tree-scroll'\n        );\n        const contentElement = document.createElement('div');\n        contentElement.className = classNames(\n            'infinite-tree',\n            'infinite-tree-content'\n        );\n\n        scrollElement.appendChild(contentElement);\n        this.options.el.appendChild(scrollElement);\n\n        this.clusterize = new Clusterize({\n            tag: 'div',\n            rows: [],\n            scrollElem: scrollElement,\n            contentElem: contentElement,\n            no_data_class: 'infinite-tree-no-data',\n            callbacks: {\n                // Will be called right before replacing previous cluster with new one.\n                clusterWillChange: () => {\n                },\n                // Will be called right after replacing previous cluster with new one.\n                clusterChanged: () => {\n                },\n                // Will be called on scrolling. Returns progress position.\n                scrollingProgress: (progress) => {\n                    this.emit('scrollProgress', progress);\n                }\n            }\n        });\n\n        this.scrollElement = scrollElement;\n        this.contentElement = contentElement;\n\n        addEventListener(this.contentElement, 'click', this.contentListener.click);\n        if (this.options.droppable) {\n            addEventListener(document, 'dragend', this.contentListener.dragend);\n            addEventListener(this.contentElement, 'dragenter', this.contentListener.dragenter);\n            addEventListener(this.contentElement, 'dragover', this.contentListener.dragover);\n            addEventListener(this.contentElement, 'drop', this.contentListener.drop);\n        }\n    }\n    destroy() {\n        removeEventListener(this.contentElement, 'click', this.contentListener);\n        if (this.options.droppable) {\n            removeEventListener(document, 'dragend', this.contentListener.dragend);\n            removeEventListener(this.contentElement, 'dragenter', this.contentListener.dragenter);\n            removeEventListener(this.contentElement, 'dragover', this.contentListener.dragover);\n            removeEventListener(this.contentElement, 'drop', this.contentListener.drop);\n        }\n\n        this.clear();\n\n        if (this.clusterize) {\n            this.clusterize.destroy(true); // True to remove all data from the list\n            this.clusterize = null;\n        }\n\n        // Remove all child nodes\n        while (this.contentElement.firstChild) {\n            this.contentElement.removeChild(this.contentElement.firstChild);\n        }\n        while (this.scrollElement.firstChild) {\n            this.scrollElement.removeChild(this.scrollElement.firstChild);\n        }\n        if (this.options.el) {\n            const containerElement = this.options.el;\n            while (containerElement.firstChild) {\n                containerElement.removeChild(containerElement.firstChild);\n            }\n        }\n        this.contentElement = null;\n        this.scrollElement = null;\n    }\n    // Inserts a new child node to a parent node at the specified index.\n    // * If the parent is null or undefined, inserts the child at the specified index in the top-level.\n    // * If the parent has children, the method adds the child to it at the specified index.\n    // * If the parent does not have children, the method adds the child to the parent.\n    // * If the index value is greater than or equal to the number of children in the parent, the method adds the child at the end of the children.\n    // @param {Object} newNode The new child node.\n    // @param {number} index The 0-based index of where to insert the child node. Defaults to 0 for negative index.\n    // @param {Node} parentNode The Node object that defines the parent node.\n    // @return {boolean} Returns true on success, false otherwise.\n    addChildNodeAt(newNode, index, parentNode) {\n        // Defaults to rootNode if the parentNode is not specified\n        parentNode = parentNode || this.state.rootNode;\n\n        ensureNodeInstance(parentNode);\n\n        if (!newNode) {\n            return false;\n        }\n        index = Number(index) || 0;\n        if (index < 0) {\n            index = 0;\n        }\n\n        // Inserts the new child at the specified index\n        newNode.parent = parentNode;\n        parentNode.children.splice(index, 0, newNode);\n\n        const deleteCount = parentNode.state.total;\n\n        // Update index\n        index = parentNode.children.indexOf(newNode);\n\n        const nodes = flatten(parentNode.children, { openNodes: this.state.openNodes });\n\n        // Update newNode\n        newNode = parentNode.getChildAt(index);\n\n        const rows = nodes.map(node => this.options.rowRenderer(node, this.options));\n        const parentOffset = this.nodes.indexOf(parentNode);\n\n        // Update nodes & rows\n        this.nodes.splice.apply(this.nodes, [parentOffset + 1, deleteCount].concat(nodes));\n        this.rows.splice.apply(this.rows, [parentOffset + 1, deleteCount].concat(rows));\n\n        // Update the lookup table with newly added nodes\n        this.flattenNode(newNode).forEach((node) => {\n            if (node.id !== undefined) {\n                this.nodeTable.set(node.id, node);\n            }\n        });\n\n        // Update the row corresponding to the parent node\n        this.rows[parentOffset] = this.options.rowRenderer(parentNode, this.options);\n\n        // Updates list with new data\n        this.update();\n\n        return true;\n    }\n    // Adds a node to the end of the list of children of a specified parent node.\n    // * If the parent is null or undefined, inserts the child at the specified index in the top-level.\n    // * If the parent has children, the method adds the child as the last child.\n    // * If the parent does not have children, the method adds the child to the parent.\n    // @param {Object} newNode The new child node.\n    // @param {Node} parentNode The Node object that defines the parent node.\n    // @return {boolean} Returns true on success, false otherwise.\n    appendChildNode(newNode, parentNode) {\n        // Defaults to rootNode if the parentNode is not specified\n        parentNode = parentNode || this.state.rootNode;\n\n        ensureNodeInstance(parentNode);\n\n        const index = parentNode.children.length;\n        return this.addChildNodeAt(newNode, index, parentNode);\n    }\n    // Clears the tree.\n    clear() {\n        this.clusterize.clear();\n        this.nodeTable.clear();\n        this.nodes = [];\n        this.rows = [];\n        this.state.openNodes = [];\n        this.state.rootNode = null;\n        this.state.selectedNode = null;\n    }\n    // Closes a node to hide its children.\n    // @param {Node} node The Node object.\n    // @return {boolean} Returns true on success, false otherwise.\n    closeNode(node) {\n        ensureNodeInstance(node);\n\n        // Retrieve node index\n        const nodeIndex = this.nodes.indexOf(node);\n        if (nodeIndex < 0) {\n            throw new Error('Invalid node index');\n        }\n\n        // Check if the closeNode action can be performed\n        if (this.state.openNodes.indexOf(node) < 0) {\n            return false;\n        }\n\n        // Keep selected node unchanged if \"node\" is equal to \"this.state.selectedNode\"\n        if (this.state.selectedNode && (this.state.selectedNode !== node)) {\n            // row #0 - node.0         => parent node (total=4)\n            // row #1   - node.0.0     => close this node; next selected node (total=2)\n            // row #2       node.0.0.0 => selected node (total=0)\n            // row #3       node.0.0.1\n            // row #4     node.0.1\n            const selectedIndex = this.nodes.indexOf(this.state.selectedNode);\n            const rangeFrom = nodeIndex + 1;\n            const rangeTo = nodeIndex + node.state.total;\n\n            if ((rangeFrom <= selectedIndex) && (selectedIndex <= rangeTo)) {\n                this.selectNode(node);\n            }\n        }\n\n        node.state.open = false; // Set the open state to false\n        const openNodes = this.state.openNodes.filter((node) => (node.hasChildren() && node.state.open));\n        this.state.openNodes = openNodes;\n\n        const deleteCount = node.state.total;\n\n        // Subtract the deleteCount for all ancestors (parent, grandparent, etc.) of the current node\n        for (let p = node; p !== null; p = p.parent) {\n            p.state.total = p.state.total - deleteCount;\n        }\n\n        // Update nodes & rows\n        this.nodes.splice(nodeIndex + 1, deleteCount);\n        this.rows.splice(nodeIndex + 1, deleteCount);\n\n        // Update the row corresponding to the node\n        this.rows[nodeIndex] = this.options.rowRenderer(node, this.options);\n\n        // Emit the 'closeNode' event\n        this.emit('closeNode', node);\n\n        // Updates list with new data\n        this.update();\n\n        return true;\n    }\n    // Flattens all child nodes of a parent node by performing full tree traversal using child-parent link.\n    // No recursion or stack is involved.\n    // @param {Node} parentNode The Node object that defines the parent node.\n    // @return {array} Returns an array of Node objects containing all the child nodes of the parent node.\n    flattenChildNodes(parentNode) {\n        // Defaults to rootNode if the parentNode is not specified\n        parentNode = parentNode || this.state.rootNode;\n\n        ensureNodeInstance(parentNode);\n\n        const list = [];\n\n        // Ignore parent node\n        let node = parentNode.getFirstChild();\n        while (node) {\n            list.push(node);\n            if (node.hasChildren()) {\n                node = node.getFirstChild();\n            } else {\n                // find the parent level\n                while ((node.getNextSibling() === null) && (node.parent !== parentNode)) {\n                    // use child-parent link to get to the parent level\n                    node = node.getParent();\n                }\n\n                // Get next sibling\n                node = node.getNextSibling();\n            }\n        }\n\n        return list;\n    }\n    // Flattens a node by performing full tree traversal using child-parent link.\n    // No recursion or stack is involved.\n    // @param {Node} node The Node object.\n    // @return {array} Returns a flattened list of Node objects.\n    flattenNode(node) {\n        return [node].concat(this.flattenChildNodes(node));\n    }\n    // Gets a list of child nodes.\n    // @param {Node} [parentNode] The Node object that defines the parent node. If null or undefined, returns a list of top level nodes.\n    // @return {array} Returns an array of Node objects containing all the child nodes of the parent node.\n    getChildNodes(parentNode) {\n        // Defaults to rootNode if the parentNode is not specified\n        parentNode = parentNode || this.state.rootNode;\n\n        ensureNodeInstance(parentNode);\n\n        return parentNode.children;\n    }\n    // Gets a node by its unique id. This assumes that you have given the nodes in the data a unique id.\n    // @param {string|number} id An unique node id. A null value will be returned if the id doesn't match.\n    // @return {Node} Returns a node the matches the id, null otherwise.\n    getNodeById(id) {\n        let node = this.nodeTable.get(id);\n        if (!node) {\n            // Find the first node that matches the id\n            node = this.nodes.filter((node) => (node.id === id))[0];\n            if (!node) {\n                return null;\n            }\n            this.nodeTable.set(node.id, node);\n        }\n        return node;\n    }\n    // Gets an array of open nodes.\n    // @return {array} Returns an array of Node objects containing open nodes.\n    getOpenNodes() {\n        // returns a shallow copy of an array into a new array object.\n        return this.state.openNodes.slice();\n    }\n    // Gets the root node.\n    // @return {Node} Returns the root node, or null if empty.\n    getRootNode() {\n        return this.state.rootNode;\n    }\n    // Gets the selected node.\n    // @return {Node} Returns the selected node, or null if not selected.\n    getSelectedNode() {\n        return this.state.selectedNode;\n    }\n    // Inserts the specified node after the reference node.\n    // @param {Object} newNode The new sibling node.\n    // @param {Node} referenceNode The Node object that defines the reference node.\n    // @return {boolean} Returns true on success, false otherwise.\n    insertNodeAfter(newNode, referenceNode) {\n        ensureNodeInstance(referenceNode);\n        const parentNode = referenceNode.getParent();\n        const index = parentNode.children.indexOf(referenceNode) + 1;\n        return this.addChildNodeAt(newNode, index, parentNode);\n    }\n    // Inserts the specified node before the reference node.\n    // @param {Object} newNode The new sibling node.\n    // @param {Node} referenceNode The Node object that defines the reference node.\n    // @return {boolean} Returns true on success, false otherwise.\n    insertNodeBefore(newNode, referenceNode) {\n        ensureNodeInstance(referenceNode);\n        const parentNode = referenceNode.getParent();\n        const index = parentNode.children.indexOf(referenceNode);\n        return this.addChildNodeAt(newNode, index, parentNode);\n    }\n    // Loads data in the tree.\n    // @param {object|array} data The data is an object or array of objects that defines the node.\n    loadData(data = []) {\n        this.nodes = flatten(data, { openAllNodes: this.options.autoOpen });\n\n        // Clear lookup table\n        this.nodeTable.clear();\n\n        this.state.openNodes = this.nodes.filter((node) => (node.hasChildren() && node.state.open));\n        this.state.rootNode = ((node = null) => {\n            // Finding the root node\n            while (node && node.parent !== null) {\n                node = node.parent;\n            }\n            return node;\n        })(this.nodes[0]);\n        this.state.selectedNode = null;\n\n        // Update the lookup table with newly added nodes\n        this.flattenChildNodes(this.state.rootNode).forEach((node) => {\n            if (node.id !== undefined) {\n                this.nodeTable.set(node.id, node);\n            }\n        });\n\n        // Update rows\n        this.rows = this.nodes.map(node => this.options.rowRenderer(node, this.options));\n\n        // Updates list with new data\n        this.update();\n    }\n    // Opens a node to display its children.\n    // @param {Node} node The Node object.\n    // @return {boolean} Returns true on success, false otherwise.\n    openNode(node) {\n        ensureNodeInstance(node);\n\n        // Retrieve node index\n        const nodeIndex = this.nodes.indexOf(node);\n        if (nodeIndex < 0) {\n            throw new Error('Invalid node index');\n        }\n\n        // Check if the openNode action can be performed\n        if (this.state.openNodes.indexOf(node) >= 0) {\n            return false;\n        }\n\n        node.state.open = true; // Set node.state.open to true\n        const openNodes = [node].concat(this.state.openNodes); // the most recently used items first\n        this.state.openNodes = openNodes;\n\n        const nodes = flatten(node.children, { openNodes: this.state.openNodes });\n        const rows = nodes.map(node => this.options.rowRenderer(node, this.options));\n\n        // Update nodes & rows\n        this.nodes.splice.apply(this.nodes, [nodeIndex + 1, 0].concat(nodes));\n        this.rows.splice.apply(this.rows, [nodeIndex + 1, 0].concat(rows));\n\n        // Update the row corresponding to the node\n        this.rows[nodeIndex] = this.options.rowRenderer(node, this.options);\n\n        // Add all child nodes to the lookup table if the first child does not exist in the lookup table\n        if ((nodes.length > 0) && !(this.nodeTable.get(nodes[0]))) {\n            nodes.forEach((node) => {\n                if (node.id !== undefined) {\n                    this.nodeTable.set(node.id, node);\n                }\n            });\n        }\n\n        // Emit the 'openNode' event\n        this.emit('openNode', node);\n\n        // Updates list with new data\n        this.update();\n\n        return true;\n    }\n    // Removes all child nodes from a parent node.\n    // @param {Node} parentNode The Node object that defines the parent node.\n    // @return {boolean} Returns true on success, false otherwise.\n    removeChildNodes(parentNode) {\n        ensureNodeInstance(parentNode);\n\n        if (parentNode.children.length === 0) {\n            return false;\n        }\n\n        const parentNodeIndex = this.nodes.indexOf(parentNode);\n\n        // Update selected node\n        if ((parentNodeIndex >= 0) && this.state.selectedNode) {\n            // row #0 - node.0         => parent node (total=4)\n            // row #1   - node.0.0\n            // row #2       node.0.0.0 => current selected node\n            // row #3       node.0.0.1\n            // row #4     node.0.1\n            const selectedIndex = this.nodes.indexOf(this.state.selectedNode);\n            const rangeFrom = parentNodeIndex + 1;\n            const rangeTo = parentNodeIndex + parentNode.state.total;\n\n            if ((rangeFrom <= selectedIndex) && (selectedIndex <= rangeTo)) {\n                this.selectNode(parentNode);\n            }\n        }\n\n        // Update parent node\n        parentNode.children = [];\n        parentNode.state.open = parentNode.state.open && (parentNode.children.length > 0);\n\n        // Get the number of nodes to be removed\n        const deleteCount = parentNode.state.total;\n\n        // Subtract the deleteCount for all ancestors (parent, grandparent, etc.) of the current node\n        for (let p = parentNode; p !== null; p = p.parent) {\n            p.state.total = p.state.total - deleteCount;\n        }\n\n        if (parentNodeIndex >= 0) {\n            // Update nodes & rows\n            this.nodes.splice(parentNodeIndex + 1, deleteCount);\n            this.rows.splice(parentNodeIndex + 1, deleteCount);\n\n            // Update the row corresponding to the parent node\n            this.rows[parentNodeIndex] = this.options.rowRenderer(parentNode, this.options);\n        }\n\n        { // Update open nodes and lookup table\n            const childNodes = this.flattenChildNodes(parentNode);\n\n            this.state.openNodes = this.state.openNodes.filter((node) => {\n                return childNodes.indexOf(node) < 0;\n            });\n\n            childNodes.forEach((node) => {\n                this.nodeTable.unset(node.id);\n            });\n        }\n\n        // Updates list with new data\n        this.update();\n\n        return true;\n    }\n    // Removes a node and all of its child nodes.\n    // @param {Node} node The Node object.\n    // @return {boolean} Returns true on success, false otherwise.\n    removeNode(node) {\n        ensureNodeInstance(node);\n\n        const parentNode = node.parent;\n        if (!parentNode) {\n            return false;\n        }\n\n        // Retrieve node index\n        const nodeIndex = this.nodes.indexOf(node);\n        const parentNodeIndex = this.nodes.indexOf(parentNode);\n\n        // Update selected node\n        if ((nodeIndex >= 0) && this.state.selectedNode) {\n            // row #0 - node.0         => parent node (total=4)\n            // row #1   - node.0.0     => remove this node (total=2)\n            // row #2       node.0.0.0 => current selected node (total=0)\n            // row #3       node.0.0.1\n            // row #4     node.0.1     => next selected node (total=0)\n            const selectedIndex = this.nodes.indexOf(this.state.selectedNode);\n            const rangeFrom = nodeIndex;\n            const rangeTo = nodeIndex + node.state.total + 1;\n\n            if ((rangeFrom <= selectedIndex) && (selectedIndex <= rangeTo)) {\n                // Change the selected node in the following order:\n                // 1. next sibling node\n                // 2. previous sibling node\n                // 3. parent node\n                const selectedNode = node.getNextSibling() || node.getPreviousSibling() || node.getParent();\n                this.selectNode(selectedNode);\n            }\n        }\n\n        // Update parent node\n        parentNode.children.splice(parentNode.children.indexOf(node), 1);\n        parentNode.state.open = parentNode.state.open && (parentNode.children.length > 0);\n\n        // Get the number of nodes to be removed\n        const deleteCount = node.state.total + 1;\n\n        // Subtract the deleteCount for all ancestors (parent, grandparent, etc.) of the current node\n        for (let p = parentNode; p !== null; p = p.parent) {\n            p.state.total = p.state.total - deleteCount;\n        }\n\n        if (nodeIndex >= 0) {\n            // Update nodes & rows\n            this.nodes.splice(nodeIndex, deleteCount);\n            this.rows.splice(nodeIndex, deleteCount);\n        }\n\n        // Update the row corresponding to the parent node\n        if (parentNodeIndex >= 0) {\n            this.rows[parentNodeIndex] = this.options.rowRenderer(parentNode, this.options);\n        }\n\n        { // Update open nodes and lookup table\n            const nodes = this.flattenNode(node);\n\n            this.state.openNodes = this.state.openNodes.filter((node) => {\n                return nodes.indexOf(node) < 0;\n            });\n\n            nodes.forEach((node) => {\n                this.nodeTable.unset(node.id);\n            });\n        }\n\n        // Updates list with new data\n        this.update();\n\n        return true;\n    }\n    // Sets the current scroll position to this node.\n    // @param {Node} node The Node object.\n    // @return {number} Returns the vertical scroll position, or -1 on error.\n    scrollToNode(node) {\n        ensureNodeInstance(node);\n\n        // Retrieve node index\n        const nodeIndex = this.nodes.indexOf(node);\n        if (nodeIndex < 0) {\n            return -1;\n        }\n        if (!this.contentElement) {\n            return -1;\n        }\n        // Get the offset height of the first child element that contains the \"tree-item\" class\n        const firstChild = this.contentElement.querySelectorAll('.tree-item')[0];\n        const rowHeight = (firstChild && firstChild.offsetHeight) || 0;\n        return this.scrollTop(nodeIndex * rowHeight);\n    }\n    // Gets (or sets) the current vertical position of the scroll bar.\n    // @param {number} [value] An integer that indicates the new position to set the scroll bar to.\n    // @return {number} Returns the vertical scroll position.\n    scrollTop(value) {\n        if (!this.scrollElement) {\n            return 0;\n        }\n        if (value !== undefined) {\n            this.scrollElement.scrollTop = Number(value);\n        }\n        return this.scrollElement.scrollTop;\n    }\n    // Selects a node.\n    // @param {Node} node The Node object. If null or undefined, deselects the current node.\n    // @return {boolean} Returns true on success, false otherwise.\n    selectNode(node = null) {\n        if (!this.options.selectable) {\n            return false;\n        }\n\n        if (node === null) {\n            // Deselect the current node\n            if (this.state.selectedNode) {\n                const selectedNode = this.state.selectedNode;\n                const selectedIndex = this.nodes.indexOf(selectedNode);\n\n                selectedNode.state.selected = false;\n                this.rows[selectedIndex] = this.options.rowRenderer(selectedNode, this.options);\n                this.state.selectedNode = null;\n\n                // Emit the 'selectNode' event\n                this.emit('selectNode', null);\n\n                // Updates list with new data\n                this.update();\n\n                return true;\n            }\n\n            return false;\n        }\n\n        ensureNodeInstance(node);\n\n        // Retrieve node index\n        const nodeIndex = this.nodes.indexOf(node);\n        if (nodeIndex < 0) {\n            throw new Error('Invalid node index');\n        }\n\n        // Select this node\n        if (this.state.selectedNode !== node) {\n            node.state.selected = true;\n\n            // Update the row corresponding to the node\n            this.rows[nodeIndex] = this.options.rowRenderer(node, this.options);\n        }\n\n        // Deselect the current node\n        if (this.state.selectedNode) {\n            const selectedNode = this.state.selectedNode;\n            const selectedIndex = this.nodes.indexOf(selectedNode);\n            selectedNode.state.selected = false;\n            this.rows[selectedIndex] = this.options.rowRenderer(selectedNode, this.options);\n        }\n\n        if (this.state.selectedNode !== node) {\n            this.state.selectedNode = node;\n\n            // Emit the 'selectNode' event\n            this.emit('selectNode', node);\n        } else {\n            this.state.selectedNode = null;\n\n            // Emit the 'selectNode' event\n            this.emit('selectNode', null);\n        }\n\n        // Updates list with new data\n        this.update();\n\n        return true;\n    }\n    // Toggles a node to display or hide its children.\n    // @param {Node} node The Node object.\n    toggleNode(node) {\n        if (this.state.openNodes.indexOf(node) >= 0) {\n            // close node\n            this.closeNode(node);\n        } else {\n            // open node\n            this.openNode(node);\n        }\n    }\n    // Serializes the current state of a node to a JSON string.\n    // @param {Node} node The Node object. If null, returns the whole tree.\n    // @return {string} Returns a JSON string represented the tree.\n    toString(node = null) {\n        const traverse = (node) => {\n            let s = '[';\n            if (node && node.children) {\n                for (let i = 0; i < node.children.length; ++i) {\n                    let list = [];\n                    s = s + '{';\n                    Object.keys(node).forEach((key) => {\n                        let value = node[key];\n                        if (key === 'parent') { // ignore parent\n                            return;\n                        }\n                        if (key === 'children') { // traverse child nodes\n                            list.push('\"' + key + '\":' + traverse(node.children[i]));\n                            return;\n                        }\n                        if (typeof value === 'string' || typeof value === 'object') {\n                            list.push('\"' + key + '\":' + JSON.stringify(value));\n                        } else { // primitive types\n                            list.push('\"' + key + '\":' + value);\n                        }\n                    });\n                    s = s + list.join(',');\n                    s = s + '}' + ((i === node.children.length - 1) ? '' : ',');\n                }\n            }\n            s = s + ']';\n            return s;\n        };\n\n        if (!node) {\n            node = this.state.rootNode;\n        }\n\n        return traverse(node);\n    }\n    // Updates the tree.\n    update() {\n        // Update the list with new data\n        this.clusterize.update(this.rows);\n\n        // Emit the 'update' event\n        this.emit('update');\n    }\n    // Updates the data of a node.\n    // @param {Node} node The Node object.\n    // @param {Object} data The data object.\n    updateNode(node, data) {\n        ensureNodeInstance(node);\n\n        // The static attributes (i.e. children, parent, and state) are being protected\n        const { children, parent, state } = node;\n        node = extend(node, data, { children, parent, state });\n\n        // Retrieve node index\n        const nodeIndex = this.nodes.indexOf(node);\n        if (nodeIndex >= 0) {\n            // Update the row corresponding to the node\n            this.rows[nodeIndex] = this.options.rowRenderer(node, this.options);\n\n            // Updates list with new data\n            this.update();\n        }\n    }\n}\n\n// IE8 compatibility output\nmodule.exports = InfiniteTree;\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/index.js\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/events/events.js\n ** module id = 2\n ** module chunks = 0\n **/","/*! Clusterize.js - v0.16.0 - 2016-03-12\r\n* http://NeXTs.github.com/Clusterize.js/\r\n* Copyright (c) 2015 Denis Lukov; Licensed GPLv3 */\r\n\r\n;(function(name, definition) {\r\n    if (typeof module != 'undefined') module.exports = definition();\r\n    else if (typeof define == 'function' && typeof define.amd == 'object') define(definition);\r\n    else this[name] = definition();\r\n}('Clusterize', function() {\r\n  \"use strict\"\r\n\r\n  // detect ie9 and lower\r\n  // https://gist.github.com/padolsey/527683#comment-786682\r\n  var ie = (function(){\r\n    for( var v = 3,\r\n             el = document.createElement('b'),\r\n             all = el.all || [];\r\n         el.innerHTML = '<!--[if gt IE ' + (++v) + ']><i><![endif]-->',\r\n         all[0];\r\n       ){}\r\n    return v > 4 ? v : document.documentMode;\r\n  }()),\r\n  is_mac = navigator.platform.toLowerCase().indexOf('mac') + 1;\r\n  var Clusterize = function(data) {\r\n    if( ! (this instanceof Clusterize))\r\n      return new Clusterize(data);\r\n    var self = this;\r\n\r\n    var defaults = {\r\n      item_height: 0,\r\n      block_height: 0,\r\n      rows_in_block: 50,\r\n      rows_in_cluster: 0,\r\n      cluster_height: 0,\r\n      blocks_in_cluster: 4,\r\n      tag: null,\r\n      content_tag: null,\r\n      show_no_data_row: true,\r\n      no_data_class: 'clusterize-no-data',\r\n      no_data_text: 'No data',\r\n      keep_parity: true,\r\n      callbacks: {},\r\n      scroll_top: 0\r\n    }\r\n\r\n    // public parameters\r\n    self.options = {};\r\n    var options = ['rows_in_block', 'blocks_in_cluster', 'show_no_data_row', 'no_data_class', 'no_data_text', 'keep_parity', 'tag', 'callbacks'];\r\n    for(var i = 0, option; option = options[i]; i++) {\r\n      self.options[option] = typeof data[option] != 'undefined' && data[option] != null\r\n        ? data[option]\r\n        : defaults[option];\r\n    }\r\n\r\n    var elems = ['scroll', 'content'];\r\n    for(var i = 0, elem; elem = elems[i]; i++) {\r\n      self[elem + '_elem'] = data[elem + 'Id']\r\n        ? document.getElementById(data[elem + 'Id'])\r\n        : data[elem + 'Elem'];\r\n      if( ! self[elem + '_elem'])\r\n        throw new Error(\"Error! Could not find \" + elem + \" element\");\r\n    }\r\n\r\n    // tabindex forces the browser to keep focus on the scrolling list, fixes #11\r\n    if( ! self.content_elem.hasAttribute('tabindex'))\r\n      self.content_elem.setAttribute('tabindex', 0);\r\n\r\n    // private parameters\r\n    var rows = isArray(data.rows)\r\n        ? data.rows\r\n        : self.fetchMarkup(),\r\n      cache = {data: '', bottom: 0},\r\n      scroll_top = self.scroll_elem.scrollTop;\r\n\r\n    // get row height\r\n    self.exploreEnvironment(rows);\r\n\r\n    // append initial data\r\n    self.insertToDOM(rows, cache);\r\n\r\n    // restore the scroll position\r\n    self.scroll_elem.scrollTop = scroll_top;\r\n\r\n    // adding scroll handler\r\n    var last_cluster = false,\r\n    scroll_debounce = 0,\r\n    pointer_events_set = false,\r\n    scrollEv = function() {\r\n      // fixes scrolling issue on Mac #3\r\n      if (is_mac) {\r\n          if( ! pointer_events_set) self.content_elem.style.pointerEvents = 'none';\r\n          pointer_events_set = true;\r\n          clearTimeout(scroll_debounce);\r\n          scroll_debounce = setTimeout(function () {\r\n              self.content_elem.style.pointerEvents = 'auto';\r\n              pointer_events_set = false;\r\n          }, 50);\r\n      }\r\n      if (last_cluster != (last_cluster = self.getClusterNum()))\r\n        self.insertToDOM(rows, cache);\r\n      if (self.options.callbacks.scrollingProgress)\r\n        self.options.callbacks.scrollingProgress(self.getScrollProgress());\r\n    },\r\n    resize_debounce = 0,\r\n    resizeEv = function() {\r\n      clearTimeout(resize_debounce);\r\n      resize_debounce = setTimeout(self.refresh, 100);\r\n    }\r\n    on('scroll', self.scroll_elem, scrollEv);\r\n    on('resize', window, resizeEv);\r\n\r\n    // public methods\r\n    self.destroy = function(clean) {\r\n      off('scroll', self.scroll_elem, scrollEv);\r\n      off('resize', window, resizeEv);\r\n      self.html((clean ? self.generateEmptyRow() : rows).join(''));\r\n    }\r\n    self.refresh = function() {\r\n      self.getRowsHeight(rows) && self.update(rows);\r\n    }\r\n    self.update = function(new_rows) {\r\n      rows = isArray(new_rows)\r\n        ? new_rows\r\n        : [];\r\n      var scroll_top = self.scroll_elem.scrollTop;\r\n      // fixes #39\r\n      if(rows.length * self.options.item_height < scroll_top) {\r\n        self.scroll_elem.scrollTop = 0;\r\n        last_cluster = 0;\r\n      }\r\n      self.insertToDOM(rows, cache);\r\n      self.scroll_elem.scrollTop = scroll_top;\r\n    }\r\n    self.clear = function() {\r\n      self.update([]);\r\n    }\r\n    self.getRowsAmount = function() {\r\n      return rows.length;\r\n    }\r\n    self.getScrollProgress = function() {\r\n      return this.options.scroll_top / (rows.length * this.options.item_height) * 100 || 0;\r\n    }\r\n\r\n    var add = function(where, _new_rows) {\r\n      var new_rows = isArray(_new_rows)\r\n        ? _new_rows\r\n        : [];\r\n      if( ! new_rows.length) return;\r\n      rows = where == 'append'\r\n        ? rows.concat(new_rows)\r\n        : new_rows.concat(rows);\r\n      self.insertToDOM(rows, cache);\r\n    }\r\n    self.append = function(rows) {\r\n      add('append', rows);\r\n    }\r\n    self.prepend = function(rows) {\r\n      add('prepend', rows);\r\n    }\r\n  }\r\n\r\n  Clusterize.prototype = {\r\n    constructor: Clusterize,\r\n    // fetch existing markup\r\n    fetchMarkup: function() {\r\n      var rows = [], rows_nodes = this.getChildNodes(this.content_elem);\r\n      while (rows_nodes.length) {\r\n        rows.push(rows_nodes.shift().outerHTML);\r\n      }\r\n      return rows;\r\n    },\r\n    // get tag name, content tag name, tag height, calc cluster height\r\n    exploreEnvironment: function(rows) {\r\n      var opts = this.options;\r\n      opts.content_tag = this.content_elem.tagName.toLowerCase();\r\n      if( ! rows.length) return;\r\n      if(ie && ie <= 9 && ! opts.tag) opts.tag = rows[0].match(/<([^>\\s/]*)/)[1].toLowerCase();\r\n      if(this.content_elem.children.length <= 1) this.html(rows[0] + rows[0] + rows[0]);\r\n      if( ! opts.tag) opts.tag = this.content_elem.children[0].tagName.toLowerCase();\r\n      this.getRowsHeight(rows);\r\n    },\r\n    getRowsHeight: function(rows) {\r\n      var opts = this.options,\r\n        prev_item_height = opts.item_height;\r\n      opts.cluster_height = 0\r\n      if( ! rows.length) return;\r\n      var nodes = this.content_elem.children;\r\n      opts.item_height = nodes[Math.floor(nodes.length / 2)].offsetHeight;\r\n      // consider table's border-spacing\r\n      if(opts.tag == 'tr' && getStyle('borderCollapse', this.content_elem) != 'collapse')\r\n        opts.item_height += parseInt(getStyle('borderSpacing', this.content_elem)) || 0;\r\n      opts.block_height = opts.item_height * opts.rows_in_block;\r\n      opts.rows_in_cluster = opts.blocks_in_cluster * opts.rows_in_block;\r\n      opts.cluster_height = opts.blocks_in_cluster * opts.block_height;\r\n      return prev_item_height != opts.item_height;\r\n    },\r\n    // get current cluster number\r\n    getClusterNum: function () {\r\n      this.options.scroll_top = this.scroll_elem.scrollTop;\r\n      return Math.floor(this.options.scroll_top / (this.options.cluster_height - this.options.block_height)) || 0;\r\n    },\r\n    // generate empty row if no data provided\r\n    generateEmptyRow: function() {\r\n      var opts = this.options;\r\n      if( ! opts.tag || ! opts.show_no_data_row) return [];\r\n      var empty_row = document.createElement(opts.tag),\r\n        no_data_content = document.createTextNode(opts.no_data_text), td;\r\n      empty_row.className = opts.no_data_class;\r\n      if(opts.tag == 'tr') {\r\n        td = document.createElement('td');\r\n        td.appendChild(no_data_content);\r\n      }\r\n      empty_row.appendChild(td || no_data_content);\r\n      return [empty_row.outerHTML];\r\n    },\r\n    // generate cluster for current scroll position\r\n    generate: function (rows, cluster_num) {\r\n      var opts = this.options,\r\n        rows_len = rows.length;\r\n      if (rows_len < opts.rows_in_block) {\r\n        return {\r\n          top_offset: 0,\r\n          bottom_offset: 0,\r\n          rows_above: 0,\r\n          rows: rows_len ? rows : this.generateEmptyRow()\r\n        }\r\n      }\r\n      if( ! opts.cluster_height) {\r\n        this.exploreEnvironment(rows);\r\n      }\r\n      var items_start = Math.max((opts.rows_in_cluster - opts.rows_in_block) * cluster_num, 0),\r\n        items_end = items_start + opts.rows_in_cluster,\r\n        top_offset = Math.max(items_start * opts.item_height, 0),\r\n        bottom_offset = Math.max((rows_len - items_end) * opts.item_height, 0),\r\n        this_cluster_rows = [],\r\n        rows_above = items_start;\r\n      if(top_offset < 1) {\r\n        rows_above++;\r\n      }\r\n      for (var i = items_start; i < items_end; i++) {\r\n        rows[i] && this_cluster_rows.push(rows[i]);\r\n      }\r\n      return {\r\n        top_offset: top_offset,\r\n        bottom_offset: bottom_offset,\r\n        rows_above: rows_above,\r\n        rows: this_cluster_rows\r\n      }\r\n    },\r\n    renderExtraTag: function(class_name, height) {\r\n      var tag = document.createElement(this.options.tag),\r\n        clusterize_prefix = 'clusterize-';\r\n      tag.className = [clusterize_prefix + 'extra-row', clusterize_prefix + class_name].join(' ');\r\n      height && (tag.style.height = height + 'px');\r\n      return tag.outerHTML;\r\n    },\r\n    // if necessary verify data changed and insert to DOM\r\n    insertToDOM: function(rows, cache) {\r\n      var data = this.generate(rows, this.getClusterNum()),\r\n        this_cluster_rows = data.rows.join(''),\r\n        this_cluster_content_changed = this.checkChanges('data', this_cluster_rows, cache),\r\n        only_bottom_offset_changed = this.checkChanges('bottom', data.bottom_offset, cache),\r\n        callbacks = this.options.callbacks,\r\n        layout = [];\r\n\r\n      if(this_cluster_content_changed) {\r\n        if(data.top_offset) {\r\n          this.options.keep_parity && layout.push(this.renderExtraTag('keep-parity'));\r\n          layout.push(this.renderExtraTag('top-space', data.top_offset));\r\n        }\r\n        layout.push(this_cluster_rows);\r\n        data.bottom_offset && layout.push(this.renderExtraTag('bottom-space', data.bottom_offset));\r\n        callbacks.clusterWillChange && callbacks.clusterWillChange();\r\n        this.html(layout.join(''));\r\n        this.options.content_tag == 'ol' && this.content_elem.setAttribute('start', data.rows_above);\r\n        callbacks.clusterChanged && callbacks.clusterChanged();\r\n      } else if(only_bottom_offset_changed) {\r\n        this.content_elem.lastChild.style.height = data.bottom_offset + 'px';\r\n      }\r\n    },\r\n    // unfortunately ie <= 9 does not allow to use innerHTML for table elements, so make a workaround\r\n    html: function(data) {\r\n      var content_elem = this.content_elem;\r\n      if(ie && ie <= 9 && this.options.tag == 'tr') {\r\n        var div = document.createElement('div'), last;\r\n        div.innerHTML = '<table><tbody>' + data + '</tbody></table>';\r\n        while((last = content_elem.lastChild)) {\r\n          content_elem.removeChild(last);\r\n        }\r\n        var rows_nodes = this.getChildNodes(div.firstChild.firstChild);\r\n        while (rows_nodes.length) {\r\n          content_elem.appendChild(rows_nodes.shift());\r\n        }\r\n      } else {\r\n        content_elem.innerHTML = data;\r\n      }\r\n    },\r\n    getChildNodes: function(tag) {\r\n        var child_nodes = tag.children, nodes = [];\r\n        for (var i = 0, ii = child_nodes.length; i < ii; i++) {\r\n            nodes.push(child_nodes[i]);\r\n        }\r\n        return nodes;\r\n    },\r\n    checkChanges: function(type, value, cache) {\r\n      var changed = value != cache[type];\r\n      cache[type] = value;\r\n      return changed;\r\n    }\r\n  }\r\n\r\n  // support functions\r\n  function on(evt, element, fnc) {\r\n    return element.addEventListener ? element.addEventListener(evt, fnc, false) : element.attachEvent(\"on\" + evt, fnc);\r\n  }\r\n  function off(evt, element, fnc) {\r\n    return element.removeEventListener ? element.removeEventListener(evt, fnc, false) : element.detachEvent(\"on\" + evt, fnc);\r\n  }\r\n  function isArray(arr) {\r\n    return Object.prototype.toString.call(arr) === '[object Array]';\r\n  }\r\n  function getStyle(prop, elem) {\r\n    return window.getComputedStyle ? window.getComputedStyle(elem)[prop] : elem.currentStyle[prop];\r\n  }\r\n\r\n  return Clusterize;\r\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/clusterize.js/clusterize.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nvar _flatten = require('./flatten');\n\nvar _flatten2 = _interopRequireDefault(_flatten);\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// IE8 compatibility output\nmodule.exports = {\n    flatten: _flatten2['default'],\n    Node: _node2['default']\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/flattree/lib/index.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extend = require('./extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// @param {object|array} nodes The tree nodes\n// @param {object} [options] The options object\n// @param {boolean} [options.openAllNodes] True to open all nodes. Defaults to false.\n// @param {array} [options.openNodes] An array that contains the ids of open nodes\n// @return {array}\nvar flatten = function flatten() {\n    var nodes = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    nodes = [].concat(nodes);\n\n    var flatten = [];\n    var stack = [];\n    var pool = {\n        lastChild: {}\n    };\n\n    options.openAllNodes = !!options.openAllNodes;\n    options.openNodes = options.openNodes || [];\n    options.throwOnError = !!options.throwOnError;\n\n    {\n        // root node\n        var firstNode = nodes.length > 0 ? nodes[0] : null;\n        var parentNode = firstNode ? firstNode.parent : null;\n        if (parentNode && !(parentNode instanceof _node2['default'])) {\n            parentNode = new _node2['default'](parentNode);\n        }\n        var rootNode = parentNode || new _node2['default']({ // defaults\n            label: '',\n            parent: null,\n            children: nodes,\n            state: {\n                depth: -1,\n                open: true, // always open\n                path: '',\n                prefixMask: '',\n                total: 0\n            }\n        });\n\n        if (rootNode === parentNode) {\n            var subtotal = rootNode.state.total || 0;\n\n            // Traversing up through its ancestors\n            var p = rootNode;\n            while (p) {\n                var _p$state = p.state;\n                var path = _p$state.path;\n                var _p$state$total = _p$state.total;\n                var total = _p$state$total === undefined ? 0 : _p$state$total;\n\n                // Rebuild the lastChild pool\n\n                if (p.isLastChild() && path) {\n                    pool.lastChild[path] = true;\n                }\n\n                // Subtract the number 'subtotal' from the total of the root node and all its ancestors\n                p.state.total = total - subtotal;\n                if (p.state.total < 0) {\n                    if (options.throwOnError) {\n                        throw new Error('The node might have been corrupted: id=' + JSON.stringify(p.id) + ', state=' + JSON.stringify(p.state));\n                    } else {\n                        console && console.log('Error: The node might have been corrupted: id=%s, label=%s, parent=%s, children=%s, state=%s', JSON.stringify(p.id), JSON.stringify(p.label), p.parent, p.children, JSON.stringify(p.state));\n                    }\n                }\n\n                p = p.parent;\n            }\n        }\n\n        stack.push([rootNode, rootNode.state.depth, 0]);\n    }\n\n    while (stack.length > 0) {\n        var _stack$pop = stack.pop();\n\n        var _stack$pop2 = _slicedToArray(_stack$pop, 3);\n\n        var current = _stack$pop2[0];\n        var depth = _stack$pop2[1];\n        var index = _stack$pop2[2];\n\n        var _loop = function _loop() {\n            var node = current.children[index];\n            if (!(node instanceof _node2['default'])) {\n                node = new _node2['default'](node);\n            }\n            node.parent = current;\n            node.children = node.children || [];\n\n            // Ensure parent.children[index] is equal to the current node\n            node.parent.children[index] = node;\n\n            var path = current.state.path + '.' + index;\n            var open = node.hasChildren() && function () {\n                var openAllNodes = options.openAllNodes;\n                var openNodes = options.openNodes;\n\n                if (openAllNodes) {\n                    return true;\n                }\n                // determine by node object\n                if (openNodes.indexOf(node) >= 0) {\n                    return true;\n                }\n                // determine by node id\n                if (openNodes.indexOf(node.id) >= 0) {\n                    return true;\n                }\n                return false;\n            }();\n            var prefixMask = function (prefix) {\n                var mask = '';\n                while (prefix.length > 0) {\n                    prefix = prefix.replace(/\\.\\d+$/, '');\n                    if (!prefix || pool.lastChild[prefix]) {\n                        mask = '0' + mask;\n                    } else {\n                        mask = '1' + mask;\n                    }\n                }\n                return mask;\n            }(path);\n\n            if (node.isLastChild()) {\n                pool.lastChild[path] = true;\n            }\n\n            // This allows you to put extra information to node.state\n            node.state = (0, _extend2['default'])({}, node.state, {\n                depth: depth + 1,\n                open: open,\n                path: path,\n                prefixMask: prefixMask,\n                total: 0\n            });\n\n            var parentDidOpen = true;\n\n            {\n                // Check the open state from its ancestors\n                var _p = node;\n                while (_p.parent !== null) {\n                    if (_p.parent.state.open === false) {\n                        parentDidOpen = false;\n                        break;\n                    }\n                    _p = _p.parent;\n                }\n            }\n\n            if (parentDidOpen) {\n                // Push the node to flatten list only if all of its parent nodes have the open state set to true\n                flatten.push(node);\n\n                // Update the total number of visible child nodes\n                var _p2 = node;\n                while (_p2.parent !== null) {\n                    _p2.parent.state.total++;\n                    _p2 = _p2.parent;\n                }\n            }\n\n            ++index;\n\n            if (node.hasChildren()) {\n                // Push back parent node to the stack that will be able to continue\n                // the next iteration once all the child nodes of the current node\n                // have been completely explored.\n                stack.push([current, depth, index]);\n\n                index = 0;\n                depth = depth + 1;\n                current = node;\n            }\n        };\n\n        while (index < current.children.length) {\n            _loop();\n        }\n    }\n\n    return flatten;\n};\n\n// IE8 compatibility output\nmodule.exports = flatten;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/flattree/lib/flatten.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\n\nvar extend = function extend(target) {\n    for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n    }\n\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var output = Object(target);\n    for (var index = 0; index < sources.length; index++) {\n        var source = sources[index];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n\n// IE8 compatibility output\nmodule.exports = extend;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/flattree/lib/extend.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extend = require('./extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Node = function () {\n    function Node(node) {\n        _classCallCheck(this, Node);\n\n        this.id = null;\n        this.label = '';\n        this.parent = null;\n        this.children = [];\n        this.state = {};\n\n        (0, _extend2['default'])(this, node);\n\n        this.children = this.children || [];\n    }\n    // Gets a child node at the specified index.\n    // @param {number} The index of the child node.\n    // @return {object} Returns an object that defines the node, null otherwise.\n\n\n    _createClass(Node, [{\n        key: 'getChildAt',\n        value: function getChildAt(index) {\n            var node = null;\n            if (this.children.length > 0 && index >= 0 && index < this.children.length) {\n                node = this.children[index];\n            }\n            return node;\n        }\n        // Gets the child nodes.\n        // @return {array} Returns an array of objects that define the nodes.\n\n    }, {\n        key: 'getChildren',\n        value: function getChildren() {\n            return this.children;\n        }\n        // Gets the first child node.\n        // @return {object} Returns an object that defines the node, null otherwise.\n\n    }, {\n        key: 'getFirstChild',\n        value: function getFirstChild() {\n            var node = null;\n            if (this.children.length > 0) {\n                node = this.children[0];\n            }\n            return node;\n        }\n        // Gets the last child node.\n        // @return {object} Returns an object that defines the node, null otherwise.\n\n    }, {\n        key: 'getLastChild',\n        value: function getLastChild() {\n            var node = null;\n            if (this.children.length > 0) {\n                node = this.children[this.children.length - 1];\n            }\n            return node;\n        }\n        // Gets the next sibling node.\n        // @return {object} Returns an object that defines the node, null otherwise.\n\n    }, {\n        key: 'getNextSibling',\n        value: function getNextSibling() {\n            var node = null;\n            if (this.parent) {\n                var index = this.parent.children.indexOf(this);\n                if (index >= 0 && index < this.parent.children.length - 1) {\n                    node = this.parent.children[index + 1];\n                }\n            }\n            return node;\n        }\n        // Gets the parent node.\n        // @return {object} Returns an object that defines the node, null otherwise.\n\n    }, {\n        key: 'getParent',\n        value: function getParent() {\n            return this.parent;\n        }\n        // Gets the previous sibling node.\n        // @return {object} Returns an object that defines the node, null otherwise.\n\n    }, {\n        key: 'getPreviousSibling',\n        value: function getPreviousSibling() {\n            var node = null;\n            if (this.parent) {\n                var index = this.parent.children.indexOf(this);\n                if (index > 0 && index < this.parent.children.length) {\n                    node = this.parent.children[index - 1];\n                }\n            }\n            return node;\n        }\n        // Checks whether this node has children.\n        // @return {boolean} Returns true if the node has children, false otherwise.\n\n    }, {\n        key: 'hasChildren',\n        value: function hasChildren() {\n            return this.children.length > 0;\n        }\n        // Checks whether this node is the last child of its parent.\n        // @return {boolean} Returns true if the node is the last child of its parent, false otherwise.\n\n    }, {\n        key: 'isLastChild',\n        value: function isLastChild() {\n            var hasNextSibling = this.getNextSibling();\n            return !hasNextSibling;\n        }\n    }]);\n\n    return Node;\n}();\n\n// IE8 compatibility output\n\n\nmodule.exports = Node;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/flattree/lib/node.js\n ** module id = 7\n ** module chunks = 0\n **/","class LookupTable {\n    data = {};\n\n    clear() {\n        this.data = {};\n    }\n    get(key) {\n        return this.data[key];\n    }\n    has(key) {\n        return this.data[key] !== undefined;\n    }\n    set(key, value) {\n        this.data[key] = value;\n        return value;\n    }\n    unset(key) {\n        if (this.data[key] !== undefined) {\n            delete this.data[key];\n        }\n    }\n}\n\n// IE8 compatibility output\nmodule.exports = LookupTable;\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lookup-table.js\n **/","import { buildHTML, classNames, quoteattr } from './helper';\n\nconst defaultRowRenderer = (node, treeOptions) => {\n    const { id, label, children, state } = node;\n    const { depth, open, path, total, selected = false } = state;\n    const childrenLength = Object.keys(children).length;\n    const more = node.hasChildren();\n\n    let togglerContent = '';\n    if (more && open) {\n        togglerContent = '▼';\n    }\n    if (more && !open) {\n        togglerContent = '►';\n    }\n    const toggler = buildHTML('a', togglerContent, {\n        'class': (() => {\n            if (more && open) {\n                return classNames('tree-toggler');\n            }\n            if (more && !open) {\n                return classNames('tree-toggler', 'tree-closed');\n            }\n            return '';\n        })()\n    });\n    const title = buildHTML('span', quoteattr(label), {\n        'class': classNames('tree-title')\n    });\n    const treeNode = buildHTML('div', toggler + title, {\n        'class': 'tree-node',\n        'style': 'margin-left: ' + depth * 18 + 'px'\n    });\n\n    return buildHTML('div', treeNode, {\n        'aria-id': id,\n        'aria-expanded': more && open,\n        'aria-depth': depth,\n        'aria-path': path,\n        'aria-selected': selected,\n        'aria-children': childrenLength,\n        'aria-total': total,\n        'class': classNames(\n            'tree-item',\n            { 'tree-selected': selected }\n        ),\n        'droppable': true\n    });\n};\n\n// IE8 compatibility output\nmodule.exports = {\n    defaultRowRenderer\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/renderer.js\n **/","const preventDefault = (e) => {\n    if (typeof e.preventDefault !== 'undefined') {\n        e.preventDefault();\n    } else {\n        e.returnValue = false;\n    }\n};\n\nconst stopPropagation = (e) => {\n    if (typeof e.stopPropagation !== 'undefined') {\n        e.stopPropagation();\n    } else {\n        e.cancelBubble = true;\n    }\n};\n\n// http://blog.garstasio.com/you-dont-need-jquery/events/#sending-custom-events\nconst dispatchEvent = (el, eventType) => {\n    const evt = document.createEvent('Event');\n    evt.initEvent(eventType, true, true); // can bubble, and is cancellable\n    el.dispatchEvent(evt);\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Compatibility\nconst addEventListener = (target, type, listener) => {\n    if (target.addEventListener) { // Standard\n        target.addEventListener(type, listener, false);\n    } else if (target.attachEvent) { // IE8\n        // In Internet Explorer versions before IE 9, you have to use attachEvent rather than the standard addEventListener.\n        target.attachEvent('on' + type, listener);\n    }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\nconst removeEventListener = (target, type, listener) => {\n    if (target.removeEventListener) { // Standard\n        target.removeEventListener(type, listener, false);\n    } else if (target.detachEvent) { // IE8\n        // In Internet Explorer versions before IE 9, you have to use detachEvent rather than the standard removeEventListener.\n        target.detachEvent('on' + type, listener);\n    }\n};\n\nconst hasClass = (el, className) => {\n    if (!el) {\n        return false;\n    }\n    const classes = el.className.split(' ');\n    return (classes.indexOf(className) >= 0);\n};\n\nconst addClass = (el, className) => {\n    if (!el) {\n        return '';\n    }\n    if (!hasClass(el, className)) {\n        let classes = el.className.split(' ');\n        el.className = classes.concat(className).join(' ');\n    }\n    return el.className;\n};\n\nconst removeClass = (el, className) => {\n    if (!el) {\n        return '';\n    }\n    if (hasClass(el, className)) {\n        let classes = el.className.split(' ');\n        el.className = classes.filter(c => (c !== className)).join(' ');\n    }\n    return el.className;\n};\n\nconst toggleClass = (el, className) => {\n    if (!el) {\n        return;\n    }\n    if (hasClass(el, className)) {\n        removeClass(el, className);\n    } else {\n        addClass(el, className);\n    }\n};\n\nconst classNames = (...args) => {\n    let classNames = [];\n    args.forEach((arg) => {\n        if (Array.isArray(arg)) {\n            classNames = classNames.concat(arg);\n        } else if (typeof arg === 'object') {\n            Object.keys(arg).forEach((className) => {\n                const ok = arg[className];\n                if (!!ok) {\n                    classNames.push(className);\n                }\n            });\n        } else {\n            classNames.push(arg);\n        }\n    });\n    return classNames.join(' ');\n};\n\nconst quoteattr = (s, preserveCR) => {\n    preserveCR = preserveCR ? '&#13;' : '\\n';\n    return ('' + s) /* Forces the conversion to string. */\n        .replace(/&/g, '&amp;') /* This MUST be the 1st replacement. */\n        .replace(/'/g, '&apos;') /* The 4 other predefined entities, required. */\n        .replace(/\"/g, '&quot;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        /*\n         * You may add other replacements here for HTML only\n         * (but it's not necessary).\n         * Or for XML, only if the named entities are defined in its DTD.\n         */\n        .replace(/\\r\\n/g, preserveCR) /* Must be before the next replacement. */\n        .replace(/[\\r\\n]/g, preserveCR);\n};\n\n/**\n * Example #1:\n * =========================================================================\n * <a id=\"mymail href=\"http://mymail.example.com\">My Mail</a>\n *\n * buildHTML('a', 'My Mail', {\n *     id: 'mymail',\n *     href: 'http://mymail.example.com'\n * });\n *\n * Example #2:\n * =========================================================================\n * <input id=\"myinput\" type=\"text\" value=\"myvalue\" />\n *\n * buildHTML('input', {\n *   id: 'myinput',\n *   type: 'text',\n *   value: 'myvalue'\n * });\n *\n */\nconst buildHTML = (tag, html, attrs) => {\n    switch (tag) {\n    case 'select':\n        if (typeof(html) === 'object') {\n            let options = html || {};\n            html = '';\n            for (let value in options) {\n                if (!options.hasOwnProperty(value)) {\n                    continue;\n                }\n                html += buildHTML('option', options[value] || '', { value: value });\n            }\n        }\n        break;\n\n    default:\n        if (typeof(html) === 'object') {\n            attrs = html;\n            html = undefined;\n        }\n        break;\n    }\n\n    let h = '<' + tag;\n    for (let attr in attrs) {\n        if (!attrs.hasOwnProperty(attr)) {\n            continue;\n        }\n        if (typeof attrs[attr] !== 'undefined') {\n            h += ' ' + attr + '=\"' + quoteattr(attrs[attr]) + '\"';\n        }\n    }\n    h += (typeof(html) !== 'undefined') ? '>' + html + '</' + tag + '>' : '/>';\n\n    return h;\n};\n\n// IE8 compatibility output\nmodule.exports = {\n    preventDefault,\n    stopPropagation,\n    dispatchEvent,\n    addEventListener,\n    removeEventListener,\n    hasClass,\n    addClass,\n    removeClass,\n    toggleClass,\n    classNames,\n    quoteattr,\n    buildHTML\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/helper.js\n **/","import { buildHTML, classNames, quoteattr } from '../src/helper';\n\nconst rowRenderer = (node, treeOptions) => {\n    const { id, label, children, state, props } = node;\n    const droppable = (treeOptions.droppable) && (props.droppable);\n    const { depth, open, path, total, selected = false } = state;\n    const childrenLength = Object.keys(children).length;\n    const more = node.hasChildren();\n\n    let toggler = '';\n    if (more) {\n        let togglerContent = '';\n        if (open) {\n            togglerContent = buildHTML('i', '', {\n                'class': classNames('glyphicon', 'glyphicon-triangle-bottom')\n            });\n        }\n        if (!open) {\n            togglerContent = buildHTML('i', '', {\n                'class': classNames('glyphicon', 'glyphicon-triangle-right')\n            });\n        }\n        toggler = buildHTML('a', togglerContent, {\n            'class': (() => {\n                if (more && open) {\n                    return classNames('tree-toggler');\n                }\n                if (more && !open) {\n                    return classNames('tree-toggler', 'tree-closed');\n                }\n                return '';\n            })()\n        });\n    }\n\n    const icon = buildHTML('i', '', {\n        'class': classNames(\n            'tree-folder-icon',\n            'glyphicon',\n            { 'glyphicon-folder-open': more && open },\n            { 'glyphicon-folder-close': more && !open },\n            { 'glyphicon-file': !more }\n        )\n    });\n    const title = buildHTML('span', quoteattr(label), {\n        'class': classNames('tree-title')\n    });\n    const count = buildHTML('span', childrenLength, {\n        'class': 'count'\n    });\n    const treeNode = buildHTML('div', toggler + icon + title + count, {\n        'class': 'tree-node',\n        'style': 'margin-left: ' + depth * 18 + 'px'\n    });\n\n    let treeNodeAttributes = {\n        'aria-id': id,\n        'aria-expanded': more && open,\n        'aria-depth': depth,\n        'aria-path': path,\n        'aria-selected': selected,\n        'aria-children': childrenLength,\n        'aria-total': total,\n        'class': classNames(\n            'tree-item',\n            { 'tree-selected': selected }\n        )\n    };\n    if (droppable) {\n        treeNodeAttributes['droppable'] = true;\n    }\n\n    return buildHTML('div', treeNode, treeNodeAttributes);\n};\n\nexport default rowRenderer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./renderer.js\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/stylus-loader/index.js!./index.styl\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/stylus-loader/index.js!./index.styl\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/stylus-loader/index.js!./index.styl\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/index.styl\n ** module id = 12\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".infinite-tree-scroll{overflow:auto}.infinite-tree-content{outline:0}.infinite-tree-content .tree-selected.tree-item,.infinite-tree-content .tree-selected.tree-item:hover{background:#deecfd;border:1px solid #06c}.infinite-tree-content .tree-item{border:1px solid transparent;cursor:default}.infinite-tree-content .tree-item:hover{background:#f2fdff}.infinite-tree-content .tree-item.highlight{border:1px dotted #ccc;background-color:#f5f6f7}.infinite-tree-content .tree-node{position:relative}.infinite-tree-content .tree-toggler{color:#666;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-tree-content .tree-toggler:hover{color:#333;text-decoration:none}.infinite-tree-content .tree-title{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-tree-no-data{text-align:center}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/css-loader!../~/stylus-loader!../src/index.styl\n ** module id = 13\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/css-loader/lib/css-base.js\n ** module id = 14\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/style-loader/addStyles.js\n ** module id = 15\n ** module chunks = 0\n **/"],"sourceRoot":""}