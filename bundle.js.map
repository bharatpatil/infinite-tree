{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 2b956fb53021583462e3","webpack:///./index.js","webpack:///../src/index.js","webpack:///(webpack)/~/node-libs-browser/~/events/events.js","webpack:///../~/clusterize.js/clusterize.js","webpack:///../~/flattree/lib/index.js","webpack:///../~/flattree/lib/flatten.js","webpack:///../~/flattree/lib/extend.js","webpack:///../~/flattree/lib/node.js","webpack:///../src/lookup-table.js","webpack:///../src/renderer.js","webpack:///../src/utils.js","webpack:///../src/polyfill.js","webpack:///./renderer.js","webpack:///../src/index.styl?cdde","webpack:///../src/index.styl","webpack:///../~/css-loader/lib/css-base.js","webpack:///../~/style-loader/addStyles.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_src","_src2","_renderer","_renderer2","data","source","i","push","JSON","parse","replace","tree","autoOpen","el","document","querySelector","rowRenderer","on","progress","style","node","console","log","innerHTML","stringify","label","children","length","parent","state","loadData","window","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_typeof","Symbol","iterator","_createClass","defineProperties","target","props","descriptor","defineProperty","key","protoProps","staticProps","_events","_events2","_clusterize","_clusterize2","_flattree","_lookupTable","_lookupTable2","_polyfill","_utils","extend","_len","arguments","sources","Array","_key","undefined","output","index","hasOwnProperty","InfiniteTree","_events$EventEmitter","options","this","_this","getPrototypeOf","defaultRowRenderer","openNodes","selectedNode","clusterize","tbl","nodes","rows","scrollElement","contentElement","contentListener","evt","currentTarget","stopPropagation","itemTarget","handleToggler","parentElement","className","indexOf","getAttribute","getNodeById","toggleNode","selectNode","error","_this2","Error","createElement","classNames","appendChild","tag","scrollElem","contentElem","no_data_class","callbacks","clusterWillChange","clusterChanged","scrollingProgress","emit","addEventListener","clear","removeEventListener","destroy","firstChild","removeChild","containerElement","update","_this3","newChild","total","flatten","slice","map","newChildIndex","splice","apply","concat","forEach","set","newSibling","nodeIndex","selectedIndex","rangeFrom","rangeTo","open","filter","more","deleteCount","get","_this4","_options","openAllNodes","_this5","querySelectorAll","rowHeight","offsetHeight","scrollTop","Number","selected","_selectedNode","_selectedIndex","closeNode","openNode","traverse","s","_loop","list","keys","join","rootNode","getFirstChild","hasChildren","getNextSibling","getParent","_node","EventEmitter","_maxListeners","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","n","isNaN","type","er","handler","len","args","listeners","addListener","listener","newListener","warned","trace","once","g","removeListener","fired","position","removeAllListeners","ret","listenerCount","evlistener","emitter","name","definition","element","fnc","attachEvent","off","detachEvent","isArray","arr","toString","getStyle","prop","elem","getComputedStyle","currentStyle","ie","v","all","documentMode","is_mac","navigator","platform","toLowerCase","Clusterize","defaults","item_height","block_height","rows_in_block","rows_in_cluster","cluster_height","blocks_in_cluster","content_tag","show_no_data_row","no_data_text","keep_parity","scroll_top","option","elems","getElementById","content_elem","hasAttribute","setAttribute","fetchMarkup","cache","bottom","scroll_elem","exploreEnvironment","insertToDOM","last_cluster","scroll_debounce","pointer_events_set","scrollEv","pointerEvents","clearTimeout","setTimeout","getClusterNum","getScrollProgress","resize_debounce","resizeEv","refresh","clean","html","generateEmptyRow","getRowsHeight","new_rows","getRowsAmount","add","where","_new_rows","append","prepend","rows_nodes","getChildNodes","shift","outerHTML","opts","tagName","match","prev_item_height","Math","floor","parseInt","td","empty_row","no_data_content","createTextNode","generate","cluster_num","rows_len","top_offset","bottom_offset","rows_above","items_start","max","items_end","this_cluster_rows","renderExtraTag","class_name","height","clusterize_prefix","this_cluster_content_changed","checkChanges","only_bottom_offset_changed","layout","lastChild","last","div","child_nodes","ii","changed","_flatten","_flatten2","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","next","done","err","_extend","_extend2","_node2","stack","pool","throwOnError","firstNode","parentNode","depth","path","prefixMask","subtotal","_p$state","_p$state$total","_stack$pop","pop","_stack$pop2","current","prefix","mask","parentDidOpen","_p","_p2","Node","LookupTable","_state$selected","childrenLength","togglerContent","toggler","buildHTML","class","title","quoteattr","treeNode","treeItem","aria-id","aria-expanded","aria-depth","aria-path","aria-selected","aria-children","aria-total","tree-selected","attrs","h","attr","ok","preserveCR","preventDefault","e","returnValue","cancelBubble","icon","glyphicon-folder-open","glyphicon-folder-close","glyphicon-file","count","content","locals","result","item","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","createLinkElement","linkElement","rel","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","childNodes","unescape","encodeURIComponent","blob","oldSrc","memoize","fn","memo","isOldIE","test","userAgent","getElementsByTagName","newList","mayRemove","textStore","replacement","Boolean"],"mappings":"CAAS,SAAUA,SCInB,QAAAC,qBAAAC,UAGA,GAAAC,iBAAAD,UACA,MAAAC,kBAAAD,UAAAE,OAGA,IAAAC,QAAAF,iBAAAD,WACAE,WACAE,GAAAJ,SACAK,QAAA,EAUA,OANAP,SAAAE,UAAAM,KAAAH,OAAAD,QAAAC,cAAAD,QAAAH,qBAGAI,OAAAE,QAAA,EAGAF,OAAAD,QAvBA,GAAAD,oBAqCA,OATAF,qBAAAQ,EAAAT,QAGAC,oBAAAS,EAAAP,iBAGAF,oBAAAU,EAAA,GAGAV,oBAAA,KDMM,SAASI,OAAQD,QAASH,qBAE/B,YAYA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,UAAWF,KE1D1F,GAAAG,MAAAf,oBAAA,GFkDKgB,MAAQL,uBAAuBI,MEjDpCE,UAAAjB,oBAAA,IFqDKkB,WAAaP,uBAAuBM,UEpDzCjB,qBAAA,GAKA,KAAK,GAHCmB,SACAC,OAAS,0cAENC,EAAI,EAAO,IAAJA,IAAYA,EACxBF,KAAKG,KAAKC,KAAKC,MAAMJ,OAAOK,QAAQ,0BAA2B,aAAeJ,EAAI,MAGtF,IAAMK,MAAO,GAAAV,OAAA,YACTW,UAAU,EACVC,GAAIC,SAASC,cAAc,SAC3BC,YAAAb,WAAA,YAGJQ,MAAKM,GAAG,iBAAkB,SAACC,UACvBJ,SAASC,cAAc,uBAAuBI,MAAQ,UAAYD,SAAW,MAGjFP,KAAKM,GAAG,WAAY,SAACG,MACjBC,QAAQC,IAAI,WAAYF,QAE5BT,KAAKM,GAAG,YAAa,SAACG,MAClBC,QAAQC,IAAI,YAAaF,QAE7BT,KAAKM,GAAG,aAAc,SAACG,MACnB,GAAMP,IAAKC,SAASC,cAAc,WAE9BK,MACAP,GAAGU,UAAYf,KAAKgB,WAChBlC,GAAI8B,KAAK9B,GACTmC,MAAOL,KAAKK,MACZC,SAAUN,KAAKM,SAAWN,KAAKM,SAASC,OAAS,EACjDC,OAAQR,KAAKQ,OAASR,KAAKQ,OAAOtC,GAAK,KACvCuC,MAAOT,KAAKS,OACb,KAAM,GAEThB,GAAGU,UAAY,KAIvBZ,KAAKmB,SAAS1B,MAEd2B,OAAOpB,KAAOA,MF4DR,SAAStB,OAAQD,QAASH,qBAE/B,YA0BA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,UAAWF,KAEzF,QAASmC,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAM7C,MAAQ,IAAK6C,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAO9C,MAAyB,gBAATA,OAAqC,kBAATA,MAA8B6C,KAAP7C,KAElO,QAAS+C,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YA9Bje,GAAIW,SAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUzD,KAAO,aAAcA,MAAS,SAAUA,KAAO,MAAOA,MAAyB,kBAAXwD,SAAyBxD,IAAIgD,cAAgBQ,OAAS,eAAkBxD,MAEtO0D,aAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIpD,GAAI,EAAGA,EAAIoD,MAAM/B,OAAQrB,IAAK,CAAE,GAAIqD,YAAaD,MAAMpD,EAAIqD,YAAWZ,WAAaY,WAAWZ,aAAc,EAAOY,WAAWV,cAAe,EAAU,SAAWU,cAAYA,WAAWX,UAAW,GAAML,OAAOiB,eAAeH,OAAQE,WAAWE,IAAKF,aAAiB,MAAO,UAAUzB,YAAa4B,WAAYC,aAAiJ,MAA9HD,aAAYN,iBAAiBtB,YAAYQ,UAAWoB,YAAiBC,aAAaP,iBAAiBtB,YAAa6B,aAAqB7B,gBG/GjiB8B,QAAA/E,oBAAA,GHmHKgF,SAAWrE,uBAAuBoE,SGlHvCE,YAAAjF,oBAAA,GHsHKkF,aAAevE,uBAAuBsE,aGrH3CE,UAAAnF,oBAAA,GACAoF,aAAApF,oBAAA,GH0HKqF,cAAgB1E,uBAAuByE,cGzH5CnE,UAAAjB,oBAAA,GACAsF,UAAAtF,oBAAA,IACAuF,OAAAvF,oBAAA,IAEMwF,OAAS,SAAChB,QHsIX,IAAK,GAAIiB,MAAOC,UAAUhD,OGtIJiD,QAAAC,MAAAH,KAAA,EAAAA,KAAA,KAAAI,KAAA,EAAAJ,KAAAI,YHuIlBF,QAAQE,KAAO,GAAKH,UAAUG,KGtInC,IAAeC,SAAXtB,QAAmC,OAAXA,OACxB,KAAM,IAAItB,WAAU,6CAIxB,KAAK,GADC6C,QAASrC,OAAOc,QACbwB,MAAQ,EAAGA,MAAQL,QAAQjD,OAAQsD,QAAS,CACjD,GAAM5E,QAASuE,QAAQK,MACvB,IAAeF,SAAX1E,QAAmC,OAAXA,OACxB,IAAK,GAAIwD,OAAOxD,QACRA,OAAO6E,eAAerB,OACtBmB,OAAOnB,KAAOxD,OAAOwD,MAKrC,MAAOmB,SAGLG,aAAA,SAAAC,sBAiDF,QAjDED,gBH6IG,GG5FOE,SAAAV,UAAAhD,QAAA,GAAAoD,SAAAJ,UAAA,MAAUA,UAAA,EH8FjB3C,iBAAgBsD,KG/InBH,aHmJG,IAAII,OAAQnD,2BAA2BkD,KAAM3C,OAAO6C,eGnJvDL,cAAA3F,KAAA8F,MAuDE,OH8FCC,OGpJLF,SACIzE,UAAU,EACVC,GAAI,KACJG,YAAAd,UAAAuF,oBHsJCF,MGpJL1D,OACI6D,aACAC,aAAc,MHsJbJ,MGpJLK,WAAa,KHqJRL,MGpJLM,IAAM,GAAAvB,eAAA,WHqJDiB,MGpJLO,SHqJKP,MGpJLQ,QHqJKR,MGpJLS,cAAgB,KHqJXT,MGpJLU,eAAiB,KHsJZV,MGpJLW,gBAAkB,SAACC,KHqJV,GGpJC1C,QAA0B0C,IAA1B1C,OAAQ2C,cAAkBD,IAAlBC,aAId,KAFA,EAAA7B,UAAA8B,iBAAgBF,KAEZ1C,SAAW2C,cAAe,CAI1B,IAHA,GAAIE,YAAa7C,OACb8C,eAAgB,EAEbD,YAAcA,WAAWE,gBAAkBJ,eAC1CE,WAAWG,UAAUC,QAAQ,iBAAmB,IAChDH,eAAgB,GAEpBD,WAAaA,WAAWE,aAG5B,IAAMlH,IAAKgH,WAAWK,aAAa,WAC7BvF,KAAOmE,MAAKqB,YAAYtH,GAE9B,KAAK8B,KACD,MAIAmF,eACAhB,MAAKsB,WAAWzF,MAEhBmE,MAAKuB,WAAW1F,QASxBmE,MAAKF,QAAUZ,UAAWc,MAAKF,QAASA,SAEnCE,MAAKF,QAAQxE,IAKlB0E,MAAK3C,SAGDyC,QAAQjF,MACRmF,MAAKzD,SAASuD,QAAQjF,MHoJlBmF,QG5JJlE,QAAQ0F,MAAM,2DAA4D1B,SAC1EjD,2BAAAmD,QH4xBP,MA3sBAhD,WAAU4C,aAAcC,sBA6ExB7B,aGvNC4B,eHwNGtB,IAAK,SACLf,MAAO,WACH,GAAIkE,QAAS1B,IGtJlB,KAAKA,KAAKD,QAAQxE,GACd,KAAM,IAAIoG,OAAM,uCAGpB,IAAMjB,eAAgBlF,SAASoG,cAAc,MAC7ClB,eAAcS,WAAY,EAAAjC,OAAA2C,YACtB,gBACA,uBAEJ,IAAMlB,gBAAiBnF,SAASoG,cAAc,MAC9CjB,gBAAeQ,WAAY,EAAAjC,OAAA2C,YACvB,gBACA,yBAGJnB,cAAcoB,YAAYnB,gBAC1BX,KAAKD,QAAQxE,GAAGuG,YAAYpB,eAE5BV,KAAKM,WAAa,GAAAzB,cAAA,YACdkD,IAAK,MACLtB,QACAuB,WAAYtB,cACZuB,YAAatB,eACbuB,cAAe,wBACfC,WAEIC,kBAAmB,aAGnBC,eAAgB,aAGhBC,kBAAmB,SAAC1G,UAChB8F,OAAKa,KAAK,iBAAkB3G,cAKxCoE,KAAKU,cAAgBA,cACrBV,KAAKW,eAAiBA,gBAEtB,EAAA1B,UAAAuD,kBAAiBxC,KAAKW,eAAgB,QAASX,KAAKY,oBHmJnDrC,IAAK,QACLf,MAAO,WGjJRwC,KAAKM,WAAWmC,QAChBzC,KAAKO,IAAIkC,QACTzC,KAAKQ,SACLR,KAAKS,QACLT,KAAKzD,MAAM6D,aACXJ,KAAKzD,MAAM8D,aAAe,QHqJzB9B,IAAK,UACLf,MAAO,WGpJF,KACN,EAAAyB,UAAAyD,qBAAoB1C,KAAKW,eAAgB,QAASX,KAAKY,iBAEvDZ,KAAKyC,QAEDzC,KAAKM,aACLN,KAAKM,WAAWqC,SAAQ,GADP3C,KAEZM,WAAa,MAIfN,KAAKW,eAAeiC,YACvB5C,KAAKW,eAAekC,YAAY7C,KAAKW,eAAeiC,WAExD,MAAO5C,KAAKU,cAAckC,YACtB5C,KAAKU,cAAcmC,YAAY7C,KAAKU,cAAckC,WAEtD,IAAI5C,KAAKD,QAAQxE,GAEb,IADA,GAAMuH,kBAAmB9C,KAAKD,QAAQxE,GAC/BuH,iBAAiBF,YACpBE,iBAAiBD,YAAYC,iBAAiBF,WAGtD5C,MAAKW,eAAiB,KACtBX,KAAKU,cAAgB,QHyJpBnC,IAAK,SACLf,MAAO,WGtJRwC,KAAKM,WAAWyC,OAAO/C,KAAKS,SH+J3BlC,IAAK,eACLf,MAAO,WACH,GAAIwF,QAAShD,KG3JT1D,OAAA+C,UAAAhD,QAAA,GAAAoD,SAAAJ,UAAA,GAAS,KAAAA,UAAA,GAAM4D,SAAA5D,UAAAhD,QAAA,GAAAoD,SAAAJ,UAAA,GAAW,KAAAA,UAAA,GAC3B3D,YAAgBsE,KAAKD,QAArBrE,WAER,KAAKuH,SACD,OAAO,CAEX,KAAK3G,OAGD,IADAA,OAAS0D,KAAMQ,MAAMnE,OAAS,EAAK2D,KAAKQ,MAAM,GAAK,KAC5ClE,QAA4B,OAAlBA,OAAOA,QACpBA,OAASA,OAAOA,MAGnB2G,UAAS3G,SACVA,OAAOF,SAAWE,OAAOF,aACzBE,OAAOF,SAASnB,KAAKgI,UACrBA,SAAS3G,OAASA,OAGtB,IAAM4G,OAAQ5G,OAAOC,MAAM2G,MACrB1C,OAAQ,EAAA1B,UAAAqE,SAAQ7G,OAAOF,UAAYgE,UAAWJ,KAAKzD,MAAM6D,YAAagD,MAAMF,OAC5EzC,KAAOD,MAAM6C,IAAI,SAAAvH,MHgKd,MGhKsBJ,aAAYI,QAIrCwH,cAAiBtD,KAAKQ,MAAMY,QAAQ9E,QAAU4G,MAAQ,CAiB5D,OA1CyClD,MA4BpCQ,MAAM+C,OAAOC,MAAMxD,KAAKQ,OAAQ8C,cAAe,GAAGG,OAAOjD,QAC9DR,KAAKS,KAAK8C,OAAOC,MAAMxD,KAAKS,MAAO6C,cAAe,GAAGG,OAAOhD,OAC5DT,KAAKS,KAAK6C,eAAiB5H,YAAYuH,UA9BEzC,MAiCnCkD,QAAQ,SAAC5H,MACK2D,SAAZ3D,KAAK9B,IACLgJ,OAAKzC,IAAIoD,IAAI7H,KAAK9B,GAAI8B,QAnCWkE,KAwCpC+C,UAEE,KH6KNxE,IAAK,iBACLf,MAAO,SGpKGlB,OAAQ2G,SAAUtD,WH0K5BpB,IAAK,sBACLf,MAAO,SGtKQ1B,KAAM8H,gBH8KrBrF,IAAK,uBACLf,MAAO,SGzKS1B,KAAM8H,gBHiLtBrF,IAAK,YACLf,MAAO,SG5KF1B,MH6KD,GG5KGJ,aAAgBsE,KAAKD,QAArBrE,YAGFmI,UAAY7D,KAAKQ,MAAMY,QAAQtF,KACrC,IAAgB,EAAZ+H,UACA,KAAM,IAAIlC,OAAM,mCAAqCzG,KAAKgB,UAAUJ,KAAK9B,IANjE,IAURgG,KAAKzD,MAAM6D,UAAUgB,QAAQtF,MAAQ,EACrC,OAAO,CAXC,IAeRkE,KAAKzD,MAAM8D,cAAiBL,KAAKzD,MAAM8D,eAAiBvE,KAAO,CAU/D,GAAMgI,eAAgB9D,KAAKQ,MAAMY,QAAQpB,KAAKzD,MAAM8D,cAC9C0D,UAAYF,UAAY,EACxBG,QAAUH,UAAY/H,KAAKS,MAAM2G,KAErBY,gBAAdC,WAAkDC,SAAjBF,eACjC9D,KAAKwB,WAAW1F,MAIxBA,KAAKS,MAAM0H,MAAO,CAlCN,IAmCN7D,WAAYJ,KAAKzD,MAAM6D,UAAU8D,OAAO,SAACpI,MH8KtC,MG9KgDA,MAAKS,MAAM4H,MAAQrI,KAAKS,MAAM0H,MACvFjE,MAAKzD,MAAM6D,UAAYA,SAMnB,KADA,GAHEgE,aAActI,KAAKS,MAAM2G,MAGvB7I,EAAIyB,KACDzB,GACHA,EAAEkC,MAAM2G,MAAS7I,EAAEkC,MAAM2G,MAAQkB,YACjC/J,EAAIA,EAAEiC,MAed,OA3DY0D,MAiDPQ,MAAM+C,OAAOM,UAAY,EAAGO,aACjCpE,KAAKS,KAAK8C,OAAOM,UAAY,EAAGO,aAChCpE,KAAKS,KAAKoD,WAAanI,YAAYI,MAnDvBkE,KAsDPuC,KAAK,YAAazG,MAtDXkE,KAyDP+C,UAEE,KHuLNxE,IAAK,gBACLf,MAAO,WACH,GGpLK1B,MAAAuD,UAAAhD,QAAA,GAAAoD,SAAAJ,UAAA,GAAO,KAAAA,UAAA,EACjB,IAAIvD,KACA,MAAOA,MAAKM,YAGhB,KADAN,KAAOkE,KAAMQ,MAAMnE,OAAS,EAAK2D,KAAKQ,MAAM,GAAK,KAC1C1E,MAAwB,OAAhBA,KAAKQ,QAChBR,KAAOA,KAAKQ,MAEhB,OAAOR,OAASA,KAAKM,gBH4LpBmC,IAAK,cACLf,MAAO,SGxLAxD,IACR,GAAI8B,MAAOkE,KAAKO,IAAI8D,IAAIrK,GACxB,KAAK8B,KAAM,CAGP,GADAA,KAAOkE,KAAKQ,MAAM0D,OAAO,SAACpI,MHyLjB,MGzL2BA,MAAK9B,KAAOA,KAAK,IAChD8B,KACD,MAAO,KAEXkE,MAAKO,IAAIoD,IAAI7H,KAAK9B,GAAI8B,MAE1B,MAAOA,SHgMNyC,IAAK,kBACLf,MAAO,WG5LR,MAAOwC,MAAKzD,MAAM8D,gBHmMjB9B,IAAK,eACLf,MAAO,WG9LR,MAAOwC,MAAKzD,MAAM6D,UAAUgD,WHsM3B7E,IAAK,WACLf,MAAO,WACH,GAAI8G,QAAStE,KGpMblF,KAAAuE,UAAAhD,QAAA,GAAAoD,SAAAJ,UAAA,MAAOA,UAAA,GHuMHkF,SGtMyBvE,KAAKD,QAA/BzE,SAAAiJ,SAAAjJ,SAAUI,YAAA6I,SAAA7I,WAElBsE,MAAKQ,OAAQ,EAAA1B,UAAAqE,SAAQrI,MAAQ0J,aAAclJ,WAH3B0E,KAMXO,IAAIkC,QANOzC,KASXQ,MAAMkD,QAAQ,SAAC5H,MACA2D,SAAZ3D,KAAK9B,IACLsK,OAAK/D,IAAIoD,IAAI7H,KAAK9B,GAAI8B,OAI9B,IAAMsE,WAAYJ,KAAKQ,MAAM0D,OAAO,SAACpI,MH0M5B,MG1MsCA,MAAKS,MAAM4H,MAAQrI,KAAKS,MAAM0H,MAC7EjE,MAAKzD,MAAM6D,UAAYA,UACvBJ,KAAKzD,MAAM8D,aAAe,KAE1BL,KAAKS,KAAOT,KAAKQ,MAAM6C,IAAI,SAAAvH,MH4MlB,MG5M0BJ,aAAYI,QAnB/BkE,KAsBX+C,YHoNJxE,IAAK,WACLf,MAAO,SGhNH1B,MHiNA,GAAI2I,QAASzE,KGhNVtE,YAAgBsE,KAAKD,QAArBrE,YAGFmI,UAAY7D,KAAKQ,MAAMY,QAAQtF,KACrC,IAAgB,EAAZ+H,UACA,KAAM,IAAIlC,OAAM,mCAAqCzG,KAAKgB,UAAUJ,KAAK9B,IANlE,IAUPgG,KAAKzD,MAAM6D,UAAUgB,QAAQtF,OAAS,EACtC,OAAO,CAGXA,MAAKS,MAAM0H,MAAO,CAdP,IAeL7D,YAAatE,MAAM2H,OAAOzD,KAAKzD,MAAM6D,UAfhCJ,MAgBNzD,MAAM6D,UAAYA,SAEvB,IAAMI,QAAQ,EAAA1B,UAAAqE,SAAQrH,KAAKM,UAAYgE,UAAWJ,KAAKzD,MAAM6D,YACvDK,KAAOD,MAAM6C,IAAI,SAAAvH,MHoNd,MGpNsBJ,aAAYI,OAsB3C,OAzCWkE,MAsBNQ,MAAM+C,OAAOC,MAAMxD,KAAKQ,OAAQqD,UAAY,EAAG,GAAGJ,OAAOjD,QAC9DR,KAAKS,KAAK8C,OAAOC,MAAMxD,KAAKS,MAAOoD,UAAY,EAAG,GAAGJ,OAAOhD,OAC5DT,KAAKS,KAAKoD,WAAanI,YAAYI,MAG/B0E,MAAOnE,OAAS,IAAQ2D,KAAKO,IAAI8D,IAAI7D,MAAM,KAC3CA,MAAMkD,QAAQ,SAAC5H,MACK2D,SAAZ3D,KAAK9B,IACLyK,OAAKlE,IAAIoD,IAAI7H,KAAK9B,GAAI8B,QA9BvBkE,KAoCNuC,KAAK,WAAYzG,MApCXkE,KAuCN+C,UAEE,KH2NNxE,IAAK,aACLf,MAAO,SGxND1B,UHgONyC,IAAK,eACLf,MAAO,SG3NC1B,MAET,GAAM+H,WAAY7D,KAAKQ,MAAMY,QAAQtF,KACrC,IAAgB,EAAZ+H,UACA,MAAO,EAEX,KAAK7D,KAAKW,eACN,MAAO,EAPI,IAUTiC,YAAa5C,KAAKW,eAAe+D,iBAAiB,cAAc,GAChEC,UAAY/B,YAAeA,WAAWgC,cAAiB,CAC7D,OAAO5E,MAAK6E,UAAUhB,UAAYc,cHkOjCpG,IAAK,YACLf,MAAO,SG9NFA,OACN,MAAKwC,MAAKU,eAGIjB,SAAVjC,QACAwC,KAAKU,cAAcmE,UAAYC,OAAOtH,QAEnCwC,KAAKU,cAAcmE,WALf,KH0OVtG,IAAK,aACLf,MAAO,WACH,GGlOE1B,MAAAuD,UAAAhD,QAAA,GAAAoD,SAAAJ,UAAA,GAAO,KAAAA,UAAA,GACN3D,YAAgBsE,KAAKD,QAArBrE,WAER,IAAa,OAATI,KAAe,CAEf,GAAIkE,KAAKzD,MAAM8D,aAAc,CACzB,GAAMA,cAAeL,KAAKzD,MAAM8D,aAC1ByD,cAAgB9D,KAAKQ,MAAMY,QAAQf,aAYzC,OAVAA,cAAa9D,MAAMwI,UAAW,EAC9B/E,KAAKS,KAAKqD,eAAiBpI,YAAY2E,cACvCL,KAAKzD,MAAM8D,aAAe,KANDL,KASpBuC,KAAK,aAAc,MATCvC,KAYpB+C,UAEE,EAGX,OAAO,EAtBS,GA0Bdc,WAAY7D,KAAKQ,MAAMY,QAAQtF,KACrC,IAAgB,EAAZ+H,UACA,KAAM,IAAIlC,OAAM,mCAAqCzG,KAAKgB,UAAUJ,KAAK9B,IA5BzD,IAgChBgG,KAAKzD,MAAM8D,eAAiBvE,OAC5BA,KAAKS,MAAMwI,UAAW,EACtB/E,KAAKS,KAAKoD,WAAanI,YAAYI,OAInCkE,KAAKzD,MAAM8D,aAAc,CACzB,GAAM2E,eAAehF,KAAKzD,MAAM8D,aAC1B4E,eAAgBjF,KAAKQ,MAAMY,QAAQ4D,cACzCA,eAAazI,MAAMwI,UAAW,EAC9B/E,KAAKS,KAAKwE,gBAAiBvJ,YAAYsJ,eAkB3C,MAfIhF,MAAKzD,MAAM8D,eAAiBvE,MAC5BkE,KAAKzD,MAAM8D,aAAevE,KADQkE,KAI7BuC,KAAK,aAAczG,QAExBkE,KAAKzD,MAAM8D,aAAe,KADvBL,KAIEuC,KAAK,aAAc,OAtDRvC,KA0Df+C,UAEE,KHyONxE,IAAK,aACLf,MAAO,SGtOD1B,MACHkE,KAAKzD,MAAM6D,UAAUgB,QAAQtF,OAAS,EAEtCkE,KAAKkF,UAAUpJ,MAGfkE,KAAKmF,SAASrJ,SH6OjByC,IAAK,WACLf,MAAO,SGzOH1B,MACL,GAAMsJ,UAAW,QAAXA,UAAYtJ,MACd,GAAIuJ,GAAI,GACR,IAAIvJ,MAAQA,KAAKM,SACb,IAAK,GHyOIkJ,OAAQ,SGzORtK,GACL,GAAIuK,QACJF,IAAQ,IACRhI,OAAOmI,KAAK1J,MAAM4H,QAAQ,SAACnF,KACvB,GAAIf,OAAQ1B,KAAKyC,IACjB,IAAY,WAARA,IAGJ,MAAY,aAARA,QACAgH,MAAKtK,KAAK,IAAMsD,IAAM,KAAO6G,SAAStJ,KAAKM,SAASpB,UAGnC,gBAAVwC,QAAuC,YAAV,mBAAAA,OAAA,YAAAM,QAAAN,QACpC+H,KAAKtK,KAAK,IAAMsD,IAAM,KAAOrD,KAAKgB,UAAUsB,QAE5C+H,KAAKtK,KAAK,IAAMsD,IAAM,KAAOf,UAGrC6H,GAAQE,KAAKE,KAAK,KAClBJ,EAAIA,EAAI,KAAOrK,IAAOc,KAAKM,SAASC,OAAS,EAAK,GAAK,MAnBlDrB,EAAI,EAAGA,EAAIc,KAAKM,SAASC,SAAUrB,EHmQnCsK,MGnQAtK,EAuBb,OADAqK,IAAQ,IAIZ,KAAKvJ,KAED,IADAA,KAAOkE,KAAMQ,MAAMnE,OAAS,EAAK2D,KAAKQ,MAAM,GAAK,KAC1C1E,MAAwB,OAAhBA,KAAKQ,QAChBR,KAAOA,KAAKQ,MAIpB,OAAO8I,UAAStJ,SHwPfyC,IAAK,WACLf,MAAO,SGnPHkI,UACL,GAAMH,QAEN,IAAiB9F,SAAbiG,SAEA,IADAA,SAAW1F,KAAMQ,MAAMnE,OAAS,EAAK2D,KAAKQ,MAAM,GAAK,KAC9CkF,UAAgC,OAApBA,SAASpJ,QACxBoJ,SAAWA,SAASpJ,MAM5B,KAZe,GAWXR,MAAO4J,SAASC,gBACb7J,MAEH,GADAyJ,KAAKtK,KAAKa,MACNA,KAAK8J,cACL9J,KAAOA,KAAK6J,oBACT,CAEH,KAAkC,OAA3B7J,KAAM+J,kBAA+B/J,OAAS4J,UAEjD5J,KAAOA,KAAKgK,WAJbhK,MAQIA,KAAK+J,iBAIpB,MAAON,SH0PNhH,IAAK,aACLf,MAAO,SGtPD1B,KAAMhB,MHuPR,GGtPGY,aAAgBsE,KAAKD,QAArBrE,YAGFmI,UAAY7D,KAAKQ,MAAMY,QAAQtF,KACrC,IAAgB,EAAZ+H,UACA,KAAM,IAAIlC,OAAM,mCAAqCzG,KAAKgB,UAAUJ,KAAK9B,IAN1D,IAAA+L,OAUiBjK,KAA5BM,SAAA2J,MAAA3J,SAAUE,OAAAyJ,MAAAzJ,OAAQC,MAAAwJ,MAAAxJ,KAC1BT,MAAOqD,OAAOrD,KAAMhB,MAAQsB,kBAAUE,cAAQC,cAE9CyD,KAAKS,KAAKoD,WAAanI,YAAYI,MAbhBkE,KAgBd+C,aAtlBPlD,cAAqBlB,SAAA,WAAOqH,aA0lBlCjM,QAAOD,QAAU+F,cHkQX,SAAS9F,OAAQD,SIl2BvB,QAAAkM,gBACAhG,KAAAtB,QAAAsB,KAAAtB,YACAsB,KAAAiG,cAAAjG,KAAAiG,eAAAxG,OAoQA,QAAAyG,YAAAC,KACA,wBAAAA,KAGA,QAAAC,UAAAD,KACA,sBAAAA,KAGA,QAAAE,UAAAF,KACA,sBAAAA,MAAA,OAAAA,IAGA,QAAAG,aAAAH,KACA,gBAAAA,IA/QApM,OAAAD,QAAAkM,aAGAA,uCAEAA,aAAA5I,UAAAsB,QAAAe,OACAuG,aAAA5I,UAAA6I,cAAAxG,OAIAuG,aAAAO,oBAAA,GAIAP,aAAA5I,UAAAoJ,gBAAA,SAAAC,GACA,IAAAL,SAAAK,IAAA,EAAAA,GAAAC,MAAAD,GACA,KAAA5J,WAAA,8BAEA,OADAmD,MAAAiG,cAAAQ,EACAzG,MAGAgG,aAAA5I,UAAAmF,KAAA,SAAAoE,MACA,GAAAC,IAAAC,QAAAC,IAAAC,KAAA/L,EAAAgM,SAMA,IAJAhH,KAAAtB,UACAsB,KAAAtB,YAGA,UAAAiI,QACA3G,KAAAtB,QAAA+C,OACA4E,SAAArG,KAAAtB,QAAA+C,SAAAzB,KAAAtB,QAAA+C,MAAApF,QAAA,CAEA,GADAuK,GAAAvH,UAAA,GACAuH,aAAAjF,OACA,KAAAiF,GAEA,MAAA/J,WAAA,wCAMA,GAFAgK,QAAA7G,KAAAtB,QAAAiI,MAEAL,YAAAO,SACA,QAEA,IAAAX,WAAAW,SACA,OAAAxH,UAAAhD,QAEA,OACAwK,QAAA3M,KAAA8F,KACA,MACA,QACA6G,QAAA3M,KAAA8F,KAAAX,UAAA,GACA,MACA,QACAwH,QAAA3M,KAAA8F,KAAAX,UAAA,GAAAA,UAAA,GACA,MAEA,SACA0H,KAAAxH,MAAAnC,UAAAgG,MAAAlJ,KAAAmF,UAAA,GACAwH,QAAArD,MAAAxD,KAAA+G,UAEG,IAAAV,SAAAQ,SAIH,IAHAE,KAAAxH,MAAAnC,UAAAgG,MAAAlJ,KAAAmF,UAAA,GACA2H,UAAAH,QAAAzD,QACA0D,IAAAE,UAAA3K,OACArB,EAAA,EAAe8L,IAAA9L,EAASA,IACxBgM,UAAAhM,GAAAwI,MAAAxD,KAAA+G,KAGA,WAGAf,aAAA5I,UAAA6J,YAAA,SAAAN,KAAAO,UACA,GAAA/M,EAEA,KAAA+L,WAAAgB,UACA,KAAArK,WAAA,8BA2CA,OAzCAmD,MAAAtB,UACAsB,KAAAtB,YAIAsB,KAAAtB,QAAAyI,aACAnH,KAAAuC,KAAA,cAAAoE,KACAT,WAAAgB,mBACAA,4BAEAlH,KAAAtB,QAAAiI,MAGAN,SAAArG,KAAAtB,QAAAiI,OAEA3G,KAAAtB,QAAAiI,MAAA1L,KAAAiM,UAGAlH,KAAAtB,QAAAiI,OAAA3G,KAAAtB,QAAAiI,MAAAO,UANAlH,KAAAtB,QAAAiI,MAAAO,SASAb,SAAArG,KAAAtB,QAAAiI,SAAA3G,KAAAtB,QAAAiI,MAAAS,SAIAjN,EAHAmM,YAAAtG,KAAAiG,eAGAD,aAAAO,oBAFAvG,KAAAiG,cAKA9L,KAAA,GAAA6F,KAAAtB,QAAAiI,MAAAtK,OAAAlC,IACA6F,KAAAtB,QAAAiI,MAAAS,QAAA,EACArL,QAAA0F,MAAA,mIAGAzB,KAAAtB,QAAAiI,MAAAtK,QACA,kBAAAN,SAAAsL,OAEAtL,QAAAsL,UAKArH,MAGAgG,aAAA5I,UAAAzB,GAAAqK,aAAA5I,UAAA6J,YAEAjB,aAAA5I,UAAAkK,KAAA,SAAAX,KAAAO,UAMA,QAAAK,KACAvH,KAAAwH,eAAAb,KAAAY,GAEAE,QACAA,OAAA,EACAP,SAAA1D,MAAAxD,KAAAX,YAVA,IAAA6G,WAAAgB,UACA,KAAArK,WAAA,8BAEA,IAAA4K,QAAA,CAcA,OAHAF,GAAAL,kBACAlH,KAAArE,GAAAgL,KAAAY,GAEAvH,MAIAgG,aAAA5I,UAAAoK,eAAA,SAAAb,KAAAO,UACA,GAAA3B,MAAAmC,SAAArL,OAAArB,CAEA,KAAAkL,WAAAgB,UACA,KAAArK,WAAA,8BAEA,KAAAmD,KAAAtB,UAAAsB,KAAAtB,QAAAiI,MACA,MAAA3G,KAMA,IAJAuF,KAAAvF,KAAAtB,QAAAiI,MACAtK,OAAAkJ,KAAAlJ,OACAqL,SAAA,GAEAnC,OAAA2B,UACAhB,WAAAX,KAAA2B,WAAA3B,KAAA2B,0BACAlH,MAAAtB,QAAAiI,MACA3G,KAAAtB,QAAA8I,gBACAxH,KAAAuC,KAAA,iBAAAoE,KAAAO,cAEG,IAAAb,SAAAd,MAAA,CACH,IAAAvK,EAAAqB,OAAoBrB,KAAA,GACpB,GAAAuK,KAAAvK,KAAAkM,UACA3B,KAAAvK,GAAAkM,UAAA3B,KAAAvK,GAAAkM,oBAAA,CACAQ,SAAA1M,CACA,OAIA,KAAA0M,SACA,MAAA1H,KAEA,KAAAuF,KAAAlJ,QACAkJ,KAAAlJ,OAAA,QACA2D,MAAAtB,QAAAiI,OAEApB,KAAAhC,OAAAmE,SAAA,GAGA1H,KAAAtB,QAAA8I,gBACAxH,KAAAuC,KAAA,iBAAAoE,KAAAO,UAGA,MAAAlH,OAGAgG,aAAA5I,UAAAuK,mBAAA,SAAAhB,MACA,GAAApI,KAAAyI,SAEA,KAAAhH,KAAAtB,QACA,MAAAsB,KAGA,KAAAA,KAAAtB,QAAA8I,eAKA,MAJA,KAAAnI,UAAAhD,OACA2D,KAAAtB,WACAsB,KAAAtB,QAAAiI,aACA3G,MAAAtB,QAAAiI,MACA3G,IAIA,QAAAX,UAAAhD,OAAA,CACA,IAAAkC,MAAAyB,MAAAtB,QACA,mBAAAH,KACAyB,KAAA2H,mBAAApJ,IAIA,OAFAyB,MAAA2H,mBAAA,kBACA3H,KAAAtB,WACAsB,KAKA,GAFAgH,UAAAhH,KAAAtB,QAAAiI,MAEAT,WAAAc,WACAhH,KAAAwH,eAAAb,KAAAK,eACG,IAAAA,UAEH,KAAAA,UAAA3K,QACA2D,KAAAwH,eAAAb,KAAAK,oBAAA3K,OAAA,GAIA,cAFA2D,MAAAtB,QAAAiI,MAEA3G,MAGAgG,aAAA5I,UAAA4J,UAAA,SAAAL,MACA,GAAAiB,IAOA,OAHAA,KAHA5H,KAAAtB,SAAAsB,KAAAtB,QAAAiI,MAEAT,WAAAlG,KAAAtB,QAAAiI,QACA3G,KAAAtB,QAAAiI,OAEA3G,KAAAtB,QAAAiI,MAAAvD,YAIA4C,aAAA5I,UAAAyK,cAAA,SAAAlB,MACA,GAAA3G,KAAAtB,QAAA,CACA,GAAAoJ,YAAA9H,KAAAtB,QAAAiI,KAEA,IAAAT,WAAA4B,YACA,QACA,IAAAA,WACA,MAAAA,YAAAzL,OAEA,UAGA2J,aAAA6B,cAAA,SAAAE,QAAApB,MACA,MAAAoB,SAAAF,cAAAlB,QJ+4BM,SAAS5M,OAAQD,QAASH,sBKnqC/B,SAAAqO,KAAAC,YACDlO,OAAAD,QAAAmO,cAGC,wBACD,YA+SA,SAAAtM,IAAAkF,IAAAqH,QAAAC,KACA,MAAAD,SAAA1F,iBAAA0F,QAAA1F,iBAAA3B,IAAAsH,KAAA,GAAAD,QAAAE,YAAA,KAAAvH,IAAAsH,KAEA,QAAAE,KAAAxH,IAAAqH,QAAAC,KACA,MAAAD,SAAAxF,oBAAAwF,QAAAxF,oBAAA7B,IAAAsH,KAAA,GAAAD,QAAAI,YAAA,KAAAzH,IAAAsH,KAEA,QAAAI,SAAAC,KACA,yBAAAnL,OAAAD,UAAAqL,SAAAvO,KAAAsO,KAEA,QAAAE,UAAAC,KAAAC,MACA,MAAAnM,QAAAoM,iBAAApM,OAAAoM,iBAAAD,MAAAD,MAAAC,KAAAE,aAAAH,MArTA,GAAAI,IAAA,WACA,OAAAC,GAAA,EACAzN,GAAAC,SAAAoG,cAAA,KACAqH,IAAA1N,GAAA0N,QACA1N,GAAAU,UAAA,oBAAA+M,EAAA,oBACAC,IAAA,KAEA,MAAAD,GAAA,EAAAA,EAAAxN,SAAA0N,gBAEAC,OAAAC,UAAAC,SAAAC,cAAAlI,QAAA,SACAmI,WAAA,SAAAzO,MACA,KAAAkF,eAAAuJ,aACA,UAAAA,YAAAzO,KACA,IAAAiC,MAAAiD,KAEAwJ,UACAC,YAAA,EACAC,aAAA,EACAC,cAAA,GACAC,gBAAA,EACAC,eAAA,EACAC,kBAAA,EACA/H,IAAA,KACAgI,YAAA,KACAC,kBAAA,EACA9H,cAAA,qBACA+H,aAAA,UACAC,aAAA,EACA/H,aACAgI,WAAA,EAIApN,MAAAgD,UAEA,QAAAqK,QADArK,SAAA,uHACA/E,EAAA,EAA0BoP,OAAArK,QAAA/E,GAAqBA,IAC/C+B,KAAAgD,QAAAqK,QAAA,mBAAAtP,MAAAsP,SAAA,MAAAtP,KAAAsP,QACAtP,KAAAsP,QACAZ,SAAAY,OAIA,QAAAxB,MADAyB,OAAA,oBACArP,EAAA,EAAwB4N,KAAAyB,MAAArP,GAAiBA,IAIzC,GAHA+B,KAAA6L,KAAA,SAAA9N,KAAA8N,KAAA,MACApN,SAAA8O,eAAAxP,KAAA8N,KAAA,OACA9N,KAAA8N,KAAA,SACA7L,KAAA6L,KAAA,SACA,SAAAjH,OAAA,yBAAAiH,KAAA,WAIA7L,MAAAwN,aAAAC,aAAA,aACAzN,KAAAwN,aAAAE,aAAA,aAGA,IAAAhK,MAAA8H,QAAAzN,KAAA2F,MACA3F,KAAA2F,KACA1D,KAAA2N,cACAC,OAAe7P,KAAA,GAAA8P,OAAA,GACfT,WAAApN,KAAA8N,YAAAhG,SAGA9H,MAAA+N,mBAAArK,MAGA1D,KAAAgO,YAAAtK,KAAAkK,OAGA5N,KAAA8N,YAAAhG,UAAAsF,UAGA,IAAAa,eAAA,EACAC,gBAAA,EACAC,oBAAA,EACAC,SAAA,WAEAhC,SACA+B,qBAAAnO,KAAAwN,aAAA1O,MAAAuP,cAAA,QACAF,oBAAA,EACAG,aAAAJ,iBACAA,gBAAAK,WAAA,WACAvO,KAAAwN,aAAA1O,MAAAuP,cAAA,OACAF,oBAAA,GACW,KAEXF,4BAAAjO,KAAAwO,kBACAxO,KAAAgO,YAAAtK,KAAAkK,OACA5N,KAAAgD,QAAAoC,UAAAG,mBACAvF,KAAAgD,QAAAoC,UAAAG,kBAAAvF,KAAAyO,sBAEAC,gBAAA,EACAC,SAAA,WACAL,aAAAI,iBACAA,gBAAAH,WAAAvO,KAAA4O,QAAA,KAEAhQ,IAAA,SAAAoB,KAAA8N,YAAAM,UACAxP,GAAA,SAAAc,OAAAiP,UAGA3O,KAAA4F,QAAA,SAAAiJ,OACAvD,IAAA,SAAAtL,KAAA8N,YAAAM,UACA9C,IAAA,SAAA5L,OAAAiP,UACA3O,KAAA8O,MAAAD,MAAA7O,KAAA+O,mBAAArL,MAAAgF,KAAA,MAEA1I,KAAA4O,QAAA,WACA5O,KAAAgP,cAAAtL,OAAA1D,KAAAgG,OAAAtC,OAEA1D,KAAAgG,OAAA,SAAAiJ,UACAvL,KAAA8H,QAAAyD,UACAA,WAEA,IAAA7B,YAAApN,KAAA8N,YAAAhG,SAEApE,MAAApE,OAAAU,KAAAgD,QAAA0J,YAAAU,aACApN,KAAA8N,YAAAhG,UAAA,EACAmG,aAAA,GAEAjO,KAAAgO,YAAAtK,KAAAkK,OACA5N,KAAA8N,YAAAhG,UAAAsF,YAEApN,KAAA0F,MAAA,WACA1F,KAAAgG,YAEAhG,KAAAkP,cAAA,WACA,MAAAxL,MAAApE,QAEAU,KAAAyO,kBAAA,WACA,MAAAxL,MAAAD,QAAAoK,YAAA1J,KAAApE,OAAA2D,KAAAD,QAAA0J,aAAA,OAGA,IAAAyC,KAAA,SAAAC,MAAAC,WACA,GAAAJ,UAAAzD,QAAA6D,WACAA,YAEAJ,UAAA3P,SACAoE,KAAA,UAAA0L,MACA1L,KAAAgD,OAAAuI,UACAA,SAAAvI,OAAAhD,MACA1D,KAAAgO,YAAAtK,KAAAkK,QAEA5N,MAAAsP,OAAA,SAAA5L,MACAyL,IAAA,SAAAzL,OAEA1D,KAAAuP,QAAA,SAAA7L,MACAyL,IAAA,UAAAzL,OAwKA,OApKA8I,YAAAnM,WACAG,YAAAgM,WAEAmB,YAAA,WAEA,IADA,GAAAjK,SAAA8L,WAAAvM,KAAAwM,cAAAxM,KAAAuK,cACAgC,WAAAlQ,QACAoE,KAAAxF,KAAAsR,WAAAE,QAAAC,UAEA,OAAAjM,OAGAqK,mBAAA,SAAArK,MACA,GAAAkM,MAAA3M,KAAAD,OACA4M,MAAA5C,YAAA/J,KAAAuK,aAAAqC,QAAAtD,cACA7I,KAAApE,SACA0M,IAAA,GAAAA,KAAA4D,KAAA5K,MAAA4K,KAAA5K,IAAAtB,KAAA,GAAAoM,MAAA,mBAAAvD,eACAtJ,KAAAuK,aAAAnO,SAAAC,QAAA,GAAA2D,KAAA6L,KAAApL,KAAA,GAAAA,KAAA,GAAAA,KAAA,IACAkM,KAAA5K,MAAA4K,KAAA5K,IAAA/B,KAAAuK,aAAAnO,SAAA,GAAAwQ,QAAAtD,eACAtJ,KAAA+L,cAAAtL,QAEAsL,cAAA,SAAAtL,MACA,GAAAkM,MAAA3M,KAAAD,QACA+M,iBAAAH,KAAAlD,WAEA,IADAkD,KAAA9C,eAAA,EACApJ,KAAApE,OAAA,CACA,GAAAmE,OAAAR,KAAAuK,aAAAnO,QAQA,OAPAuQ,MAAAlD,YAAAjJ,MAAAuM,KAAAC,MAAAxM,MAAAnE,OAAA,IAAAuI,aAEA,MAAA+H,KAAA5K,KAAA,YAAA2G,SAAA,iBAAA1I,KAAAuK,gBACAoC,KAAAlD,aAAAwD,SAAAvE,SAAA,gBAAA1I,KAAAuK,gBAAA,GACAoC,KAAAjD,aAAAiD,KAAAlD,YAAAkD,KAAAhD,cACAgD,KAAA/C,gBAAA+C,KAAA7C,kBAAA6C,KAAAhD,cACAgD,KAAA9C,eAAA8C,KAAA7C,kBAAA6C,KAAAjD,aACAoD,kBAAAH,KAAAlD,cAGA8B,cAAA,WAEA,MADAvL,MAAAD,QAAAoK,WAAAnK,KAAA6K,YAAAhG,UACAkI,KAAAC,MAAAhN,KAAAD,QAAAoK,YAAAnK,KAAAD,QAAA8J,eAAA7J,KAAAD,QAAA2J,gBAAA,GAGAoC,iBAAA,WACA,GAAAa,MAAA3M,KAAAD,OACA,KAAA4M,KAAA5K,MAAA4K,KAAA3C,iBAAA,QACA,IACAkD,IADAC,UAAA3R,SAAAoG,cAAA+K,KAAA5K,KACAqL,gBAAA5R,SAAA6R,eAAAV,KAAA1C,aAOA,OANAkD,WAAAhM,UAAAwL,KAAAzK,cACA,MAAAyK,KAAA5K,MACAmL,GAAA1R,SAAAoG,cAAA,MACAsL,GAAApL,YAAAsL,kBAEAD,UAAArL,YAAAoL,IAAAE,kBACAD,UAAAT,YAGAY,SAAA,SAAA7M,KAAA8M,aACA,GAAAZ,MAAA3M,KAAAD,QACAyN,SAAA/M,KAAApE,MACA,IAAAmR,SAAAb,KAAAhD,cACA,OACA8D,WAAA,EACAC,cAAA,EACAC,WAAA,EACAlN,KAAA+M,SAAA/M,KAAAT,KAAA8L,mBAGAa,MAAA9C,gBACA7J,KAAA8K,mBAAArK,KAEA,IAAAmN,aAAAb,KAAAc,KAAAlB,KAAA/C,gBAAA+C,KAAAhD,eAAA4D,YAAA,GACAO,UAAAF,YAAAjB,KAAA/C,gBACA6D,WAAAV,KAAAc,IAAAD,YAAAjB,KAAAlD,YAAA,GACAiE,cAAAX,KAAAc,KAAAL,SAAAM,WAAAnB,KAAAlD,YAAA,GACAsE,qBACAJ,WAAAC,WACA,GAAAH,YACAE,YAEA,QAAA3S,GAAA4S,YAA+BE,UAAA9S,EAAeA,IAC9CyF,KAAAzF,IAAA+S,kBAAA9S,KAAAwF,KAAAzF,GAEA,QACAyS,sBACAC,4BACAC,sBACAlN,KAAAsN,oBAGAC,eAAA,SAAAC,WAAAC,QACA,GAAAnM,KAAAvG,SAAAoG,cAAA5B,KAAAD,QAAAgC,KACAoM,kBAAA,aAGA,OAFApM,KAAAZ,WAAAgN,kBAAA,YAAAA,kBAAAF,YAAAxI,KAAA,KACAyI,SAAAnM,IAAAlG,MAAAqS,cAAA,MACAnM,IAAA2K,WAGA3B,YAAA,SAAAtK,KAAAkK,OACA,GAAA7P,MAAAkF,KAAAsN,SAAA7M,KAAAT,KAAAuL,iBACAwC,kBAAAjT,KAAA2F,KAAAgF,KAAA,IACA2I,6BAAApO,KAAAqO,aAAA,OAAAN,kBAAApD,OACA2D,2BAAAtO,KAAAqO,aAAA,SAAAvT,KAAA4S,cAAA/C,OACAxI,UAAAnC,KAAAD,QAAAoC,UACAoM,SAEAH,+BACAtT,KAAA2S,aACAzN,KAAAD,QAAAmK,aAAAqE,OAAAtT,KAAA+E,KAAAgO,eAAA,gBACAO,OAAAtT,KAAA+E,KAAAgO,eAAA,YAAAlT,KAAA2S,cAEAc,OAAAtT,KAAA8S,mBACAjT,KAAA4S,eAAAa,OAAAtT,KAAA+E,KAAAgO,eAAA,eAAAlT,KAAA4S,gBACAvL,UAAAC,mBAAAD,UAAAC,oBACApC,KAAA6L,KAAA0C,OAAA9I,KAAA,KACA,MAAAzF,KAAAD,QAAAgK,aAAA/J,KAAAuK,aAAAE,aAAA,QAAA3P,KAAA6S,YACAxL,UAAAE,gBAAAF,UAAAE,kBACOiM,6BACPtO,KAAAuK,aAAAiE,UAAA3S,MAAAqS,OAAApT,KAAA4S,cAAA,OAIA7B,KAAA,SAAA/Q,MACA,GAAAyP,cAAAvK,KAAAuK,YACA,IAAAxB,IAAA,GAAAA,IAAA,MAAA/I,KAAAD,QAAAgC,IAAA,CACA,GAAA0M,MAAAC,IAAAlT,SAAAoG,cAAA,MAEA,KADA8M,IAAAzS,UAAA,iBAAAnB,KAAA,mBACA2T,KAAAlE,aAAAiE,WACAjE,aAAA1H,YAAA4L,KAGA,KADA,GAAAlC,YAAAvM,KAAAwM,cAAAkC,IAAA9L,uBACA2J,WAAAlQ,QACAkO,aAAAzI,YAAAyK,WAAAE,aAGAlC,cAAAtO,UAAAnB,MAGA0R,cAAA,SAAAzK,KAEA,OADA4M,aAAA5M,IAAA3F,SAAAoE,SACAxF,EAAA,EAAA4T,GAAAD,YAAAtS,OAAgDuS,GAAA5T,EAAQA,IACxDwF,MAAAvF,KAAA0T,YAAA3T,GAEA,OAAAwF,QAEA6N,aAAA,SAAA1H,KAAAnJ,MAAAmN,OACA,GAAAkE,SAAArR,OAAAmN,MAAAhE,KAEA,OADAgE,OAAAhE,MAAAnJ,MACAqR,UAkBAtF,cL8qCM,SAASxP,OAAQD,QAASH,qBMn/ChC,YAMA,SAAAW,wBAAAC,KAAsC,MAAAA,UAAAC,WAAAD,KAAuCE,UAAAF,KAJ7E,GAAAuU,UAAAnV,oBAAA,GAEAoV,UAAAzU,uBAAAwU,SAKA/U,QAAAD,SACAqJ,QAAA4L,UAAA,aN0/CM,SAAShV,OAAQD,QAASH,qBOpgDhC,YAYA,SAAAW,wBAAAC,KAAsC,MAAAA,UAAAC,WAAAD,KAAuCE,UAAAF,KAV7E,GAAAyU,gBAAA,WAAkC,QAAAC,eAAAzG,IAAAxN,GAAiC,GAAAkU,SAAeC,IAAA,EAAeC,IAAA,EAAgBC,GAAA5P,MAAoB,KAAM,OAAA6P,IAAAC,GAAA/G,IAAAzK,OAAAC,cAA0CmR,IAAAG,GAAAC,GAAAC,QAAAC,QAA4CP,KAAAjU,KAAAqU,GAAA9R,QAAqBxC,GAAAkU,KAAA7S,SAAArB,GAAlCmU,IAAA,IAAyE,MAAAO,KAAcN,IAAA,EAAWC,GAAAK,IAAY,QAAU,KAAMP,IAAAI,GAAA,WAAAA,GAAA,YAA2C,QAAU,GAAAH,GAAA,KAAAC,KAAsB,MAAAH,MAAe,gBAAA1G,IAAAxN,GAA2B,GAAAuE,MAAAgJ,QAAAC,KAA0B,MAAAA,IAAc,IAAAzK,OAAAC,WAAAX,QAAAmL,KAA2C,MAAAyG,eAAAzG,IAAAxN,EAAuC,UAAA6B,WAAA,4DAEjkB8S,QAAAhW,oBAAA,GAEAiW,SAAAtV,uBAAAqV,SAEA5J,MAAApM,oBAAA,GAEAkW,OAAAvV,uBAAAyL,OASA5C,QAAA,QAAAA,WACA,GAAA3C,OAAAnB,UAAAhD,QAAA,GAAAoD,SAAAJ,UAAA,MAAAA,UAAA,GACAU,QAAAV,UAAAhD,QAAA,GAAAoD,SAAAJ,UAAA,MAA0EA,UAAA,EAE1EmB,UAAAiD,OAAAjD,MAEA,IAAA2C,YACA2M,SACAC,MACAvB,aAGAzO,SAAAyE,eAAAzE,QAAAyE,aACAzE,QAAAK,UAAAL,QAAAK,cACAL,QAAAiQ,eAAAjQ,QAAAiQ,YAIA,IAAAC,WAAAzP,MAAAnE,OAAA,EAAAmE,MAAA,QACA0P,WAAAD,oBAAA3T,OAAA,MACA4T,iCAAAL,QAAA,aACAK,WAAA,GAAAL,QAAA,WAAAK,YAEA,IAAAxK,UAAAwK,YAAA,GAAAL,QAAA,YACA1T,MAAA,GACAG,OAAA,KACAF,SAAAoE,MACAjE,OACA4T,MAAA,GACA3B,WAAA,EACArK,KAAA3D,MAAAnE,OAAA,EACA4H,KAAAzD,MAAAnE,OAAA,EACA+T,KAAA,GACAC,WAAA,GACAnN,MAAA,IAIA,IAAAwC,WAAAwK,WAKA,IAJA,GAAAI,UAAA5K,SAAAnJ,MAAA2G,OAAA,EAGA7I,EAAAqL,SACArL,GAAA,CACA,GAAAkW,UAAAlW,EAAAkC,MACA6T,KAAAG,SAAAH,KACA5B,UAAA+B,SAAA/B,UACAgC,eAAAD,SAAArN,MACAA,MAAAzD,SAAA+Q,eAAA,EAAAA,cAUA,IANAJ,MAAA5B,YACAuB,KAAAvB,UAAA4B,OAAA,GAIA/V,EAAAkC,MAAA2G,YAAAoN,SACAjW,EAAAkC,MAAA2G,MAAA,GACA,GAAAnD,QAAAiQ,aACA,SAAArO,OAAA,0CAAAzG,KAAAgB,UAAA7B,EAAAL,IAAA,WAAAkB,KAAAgB,UAAA7B,EAAAkC,OAEAR,kBAAAC,IAAA,+FAAAd,KAAAgB,UAAA7B,EAAAL,IAAAkB,KAAAgB,UAAA7B,EAAA8B,OAAA9B,EAAAiC,OAAAjC,EAAA+B,SAAAlB,KAAAgB,UAAA7B,EAAAkC,QAIAlC,IAAAiC,OAOA,IAHAwT,MAAA7U,MAAAyK,kBAAAnJ,MAAA4T,MAAA,IAGAL,MAAAzT,OAAA,GA4GA,IA3GA,GAAAoU,YAAAX,MAAAY,MAEAC,YAAA3B,eAAAyB,WAAA,GAEAG,QAAAD,YAAA,GACAR,MAAAQ,YAAA,GACAhR,MAAAgR,YAAA,GAEArL,MAAA,WACA,GAAAxJ,MAAA8U,QAAAxU,SAAAuD,MACA7D,gBAAA+T,QAAA,aACA/T,KAAA,GAAA+T,QAAA,WAAA/T,OAEAA,KAAAQ,OAAAsU,QACA9U,KAAAM,SAAAN,KAAAM,aAGAN,KAAAQ,OAAAF,SAAAuD,OAAA7D,IAEA,IAAAsU,MAAAQ,QAAArU,MAAA6T,KAAA,IAAAzQ,MACAwE,KAAA9G,OAAAmI,KAAA1J,KAAAM,UAAAC,OAAA,EACA4H,KAAAE,MAAA,WACA,GAAAK,cAAAzE,QAAAyE,aACApE,UAAAL,QAAAK,SAEA,OAAAoE,eACA,EAGApE,UAAAgB,QAAAtF,OAAA,GACA,EAGAsE,UAAAgB,QAAAtF,KAAA9B,KAAA,KAKAwU,UAAA7O,QAAAiR,QAAAxU,SAAAC,OAAA,EACAgU,WAAA,SAAAQ,QAEA,IADA,GAAAC,MAAA,GACAD,OAAAxU,OAAA,GACAwU,cAAAzV,QAAA,aAEA0V,MADAD,QAAAd,KAAAvB,UAAAqC,QACA,IAAAC,KAEA,IAAAA,IAGA,OAAAA,OACaV,KAEb5B,aACAuB,KAAAvB,UAAA4B,OAAA,GAIAtU,KAAAS,OAAA,EAAAqT,SAAA,eAAoD9T,KAAAS,OACpD4T,YAAA,EACA3B,oBACArK,UACAF,UACAmM,UACAC,sBACAnN,MAAA,GAQA,KADA,GAJA6N,gBAAA,EAIAC,GAAAlV,KACA,OAAAkV,GAAA1U,QAAA,CACA,GAAA0U,GAAA1U,OAAAC,MAAA0H,QAAA,GACA8M,eAAA,CACA,OAEAC,MAAA1U,OAIA,GAAAyU,cAAA,CAEA5N,QAAAlI,KAAAa,KAIA,KADA,GAAAmV,KAAAnV,KACA,OAAAmV,IAAA3U,QACA2U,IAAA3U,OAAAC,MAAA2G,QACA+N,QAAA3U,SAIAqD,MAEAwE,OAIA2L,MAAA7U,MAAA2V,QAAAT,MAAAxQ,QAEAA,MAAA,EACAwQ,OAAA,EACAS,QAAA9U,OAIA6D,MAAAiR,QAAAxU,SAAAC,QACAiJ,OAIA,OAAAnC,SAIApJ,QAAAD,QAAAqJ,SP0gDM,SAASpJ,OAAQD,SQ3tDvB,YAEA,IAAAqF,QAAA,SAAAhB,QACA,OAAAiB,MAAAC,UAAAhD,OAAAiD,QAAAC,MAAAH,KAAA,EAAAA,KAAA,KAAAI,KAAA,EAAyFJ,KAAAI,KAAaA,OACtGF,QAAAE,KAAA,GAAAH,UAAAG,KAGA,IAAAC,SAAAtB,QAAA,OAAAA,OACA,SAAAtB,WAAA,6CAIA,QADA6C,QAAArC,OAAAc,QACAwB,MAAA,EAAuBA,MAAAL,QAAAjD,OAAwBsD,QAAA;AAC/C,GAAA5E,QAAAuE,QAAAK,MACA,IAAAF,SAAA1E,QAAA,OAAAA,OACA,OAAAwD,OAAAxD,QACAA,OAAA6E,eAAArB,OACAmB,OAAAnB,KAAAxD,OAAAwD,MAKA,MAAAmB,QAIA3F,QAAAD,QAAAqF,QRiuDM,SAASpF,OAAQD,QAASH,qBS3vDhC,YAQA,SAAAW,wBAAAC,KAAsC,MAAAA,UAAAC,WAAAD,KAAuCE,UAAAF,KAE7E,QAAAmC,iBAAAC,SAAAC,aAAiD,KAAAD,mBAAAC,cAA0C,SAAAC,WAAA,qCAR3F,GAAAoB,cAAA,WAAgC,QAAAC,kBAAAC,OAAAC,OAA2C,OAAApD,GAAA,EAAgBA,EAAAoD,MAAA/B,OAAkBrB,IAAA,CAAO,GAAAqD,YAAAD,MAAApD,EAA2BqD,YAAAZ,WAAAY,WAAAZ,aAAA,EAAwDY,WAAAV,cAAA,EAAgC,SAAAU,yBAAAX,UAAA,GAAuDL,OAAAiB,eAAAH,OAAAE,WAAAE,IAAAF,aAA+D,gBAAAzB,YAAA4B,WAAAC,aAA2L,MAAlID,aAAAN,iBAAAtB,YAAAQ,UAAAoB,YAAqEC,aAAAP,iBAAAtB,YAAA6B,aAA6D7B,gBAExhB+S,QAAAhW,oBAAA,GAEAiW,SAAAtV,uBAAAqV,SAMAuB,KAAA,WACA,QAAAA,MAAApV,MACAY,gBAAAsD,KAAAkR,MAEAlR,KAAAhG,GAAA,KACAgG,KAAA7D,MAAA,GACA6D,KAAA1D,OAAA,KACA0D,KAAA5D,YACA4D,KAAAzD,UAEA,EAAAqT,SAAA,YAAA5P,KAAAlE,MAEAkE,KAAA5D,SAAA4D,KAAA5D,aAuEA,MAjEA6B,cAAAiT,OACA3S,IAAA,cACAf,MAAA,WACA,MAAAwC,MAAA5D,YAMAmC,IAAA,gBACAf,MAAA,WACA,GAAA1B,MAAA,IAIA,OAHAkE,MAAA5D,SAAAC,OAAA,IACAP,KAAAkE,KAAA5D,SAAA,IAEAN,QAMAyC,IAAA,iBACAf,MAAA,WACA,GAAA1B,MAAA,IACA,IAAAkE,KAAA1D,OAAA,CACA,GAAAqD,OAAAK,KAAA1D,OAAAF,SAAAgF,QAAApB,KACAL,QAAA,GAAAA,MAAAK,KAAA1D,OAAAF,SAAAC,OAAA,IACAP,KAAAkE,KAAA1D,OAAAF,SAAAuD,MAAA,IAGA,MAAA7D,SAMAyC,IAAA,YACAf,MAAA,WACA,MAAAwC,MAAA1D,UAMAiC,IAAA,qBACAf,MAAA,WACA,GAAA1B,MAAA,IACA,IAAAkE,KAAA1D,OAAA,CACA,GAAAqD,OAAAK,KAAA1D,OAAAF,SAAAgF,QAAApB,KACAL,OAAA,GAAAA,MAAAK,KAAA1D,OAAAF,SAAAC,SACAP,KAAAkE,KAAA1D,OAAAF,SAAAuD,MAAA,IAGA,MAAA7D,SAMAyC,IAAA,cACAf,MAAA,WACA,MAAAwC,MAAA5D,SAAAC,OAAA,MAIA6U,OAMAnX,QAAAD,QAAAoX,MTiwDM,SAASnX,OAAQD,SAEtB,YAQA,SAAS4C,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCANhHQ,OAAOiB,eAAexE,QAAS,cAC3B0D,OAAO,GAGX,IAAIS,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIpD,GAAI,EAAGA,EAAIoD,MAAM/B,OAAQrB,IAAK,CAAE,GAAIqD,YAAaD,MAAMpD,EAAIqD,YAAWZ,WAAaY,WAAWZ,aAAc,EAAOY,WAAWV,cAAe,EAAU,SAAWU,cAAYA,WAAWX,UAAW,GAAML,OAAOiB,eAAeH,OAAQE,WAAWE,IAAKF,aAAiB,MAAO,UAAUzB,YAAa4B,WAAYC,aAAiJ,MAA9HD,aAAYN,iBAAiBtB,YAAYQ,UAAWoB,YAAiBC,aAAaP,iBAAiBtB,YAAa6B,aAAqB7B,gBU92D3hBuU,YAAA,WVm3DD,QAASA,eACLzU,gBAAgBsD,KAAMmR,aAEtBnR,KUr3DLlF,QV04DC,MAlBAmD,cUz3DCkT,cV03DG5S,IAAK,QACLf,MAAO,WUv3DRwC,KAAKlF,WV23DJyD,IAAK,MACLf,MAAO,SU13DRe,IAAKf,OAEL,MADAwC,MAAKlF,KAAKyD,KAAOf,MACVA,SV63DNe,IAAK,MACLf,MAAO,SU53DRe,KACA,MAAOyB,MAAKlF,KAAKyD,SAXnB4S,cV84DLrX,SAAQ,WU/3DMqX,aVm4DT,SAASpX,OAAQD,QAASH,qBAE/B,YAEA0D,QAAOiB,eAAexE,QAAS,cAC3B0D,OAAO,IAEX1D,QAAQqG,mBAAqBV,MWz5D9B,IAAAP,QAAAvF,oBAAA,IAEMwG,mBAAqB,SAACrE,MX45DvB,GW35DO9B,IAA+B8B,KAA/B9B,GAAImC,MAA2BL,KAA3BK,MAAOC,SAAoBN,KAApBM,SAAUG,MAAUT,KAAVS,MACrB4T,MAAqD5T,MAArD4T,MAAOhM,KAA8C5H,MAA9C4H,KAAMF,KAAwC1H,MAAxC0H,KAAMmM,KAAkC7T,MAAlC6T,KAAMlN,MAA4B3G,MAA5B2G,MXm6D5BkO,gBWn6DwD7U,MAArBwI,kBAAAtF,SAAA2R,iBAAW,EAAAA,gBAC7CC,eAAiBhU,OAAOmI,KAAKpJ,UAAUC,OAEzCiV,eAAiB,EACjBnN,OAAQF,OACRqN,eAAiB,KAEjBnN,OAASF,OACTqN,eAAiB,IAErB,IAAMC,UAAU,EAAArS,OAAAsS,WAAU,IAAKF,gBAC3BG,QAAS,WACL,MAAItN,OAAQF,MACD,EAAA/E,OAAA2C,YACH,gBAGJsC,OAASF,MACF,EAAA/E,OAAA2C,YACH,eACA,eAGD,QAGT6P,OAAQ,EAAAxS,OAAAsS,WAAU,QAAQ,EAAAtS,OAAAyS,WAAUxV,QACtCsV,SAAS,EAAAvS,OAAA2C,YAAW,gBAElB+P,UAAW,EAAA1S,OAAAsS,WAAU,MAAOD,QAAUG,OACxCD,QAAS,YACT5V,MAAS,gBAA0B,GAARsU,MAAa,OAEtC0B,UAAW,EAAA3S,OAAAsS,WAAU,MAAOI,UAC9BE,UAAW9X,GACX+X,gBAAiB5N,MAAQF,KACzB+N,aAAc7B,MACd8B,YAAa7B,KACb8B,gBAAiBnN,SACjBoN,gBAAiBd,eACjBe,aAAclP,MACduO,SAAS,EAAAvS,OAAA2C,YACL,aACEwQ,gBAAiBtN,YAI3B,OAAO8M,UXg6DV/X,SW55DGqG,uCXg6DE,SAASpG,OAAQD,SAEtB,YAEAuD,QAAOiB,eAAexE,QAAS,cAC3B0D,OAAO,GAGX,IAAIM,SAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUzD,KAAO,aAAcA,MAAS,SAAUA,KAAO,MAAOA,MAAyB,kBAAXwD,SAAyBxD,IAAIgD,cAAgBQ,OAAS,eAAkBxD,MY18DrOiX,UAAY,QAAZA,WAAazP,IAAK8J,KAAMyG,OAC1B,OAAQvQ,KACR,IAAK,SACD,GAAqB,YAAV,mBAAA8J,MAAA,YAAA/N,QAAA+N,OAAoB,CAC3B,GAAI9L,SAAU8L,QACdA,MAAO,EACP,KAAK,GAAIrO,SAASuC,SACTA,QAAQH,eAAepC,SAG5BqO,MAAQ2F,UAAU,SAAUzR,QAAQvC,QAAU,IAAMA,MAAOA,SAGnE,KAZJ,SAeyB,YAAV,mBAAAqO,MAAA,YAAA/N,QAAA+N,SACPyG,MAAQzG,KACRA,KAAOpM,QAKf,GAAI8S,GAAI,IAAMxQ,GACd,KAAK,GAAIyQ,QAAQF,OACRA,MAAM1S,eAAe4S,OAGC,mBAAhBF,OAAME,QACbD,GAAK,IAAMC,KAAO,KAAOb,UAAUW,MAAME,OAAS,IAK1D,OAFAD,IAAuB,mBAAV1G,MAAyB,IAAMA,KAAO,KAAO9J,IAAM,IAAM,MAKpEF,WAAa,QAAAA,cZk+Dd,IAAK,GAAIzC,MAAOC,UAAUhD,OYl+DR0K,KAAAxH,MAAAH,MAAAI,KAAA,EAAAJ,KAAAI,YZm+DduH,KAAKvH,MAAQH,UAAUG,KYl+D5B,IAAIqC,cAeJ,OAdAkF,MAAKrD,QAAQ,SAACyC,KACN5G,MAAMgJ,QAAQpC,KACdtE,WAAaA,WAAW4B,OAAO0C,KACT,YAAR,mBAAAA,KAAA,YAAArI,QAAAqI,MACd9I,OAAOmI,KAAKW,KAAKzC,QAAQ,SAACvC,WACtB,GAAMsR,IAAKtM,IAAIhF,UACTsR,KACF5Q,WAAW5G,KAAKkG,aAIxBU,WAAW5G,KAAKkL,OAGjBtE,WAAW4D,KAAK,MAMrBkM,UAAY,SAACtM,EAAGqN,YAElB,MADAA,YAAaA,WAAa,QAAU,MAC5B,GAAKrN,GACRjK,QAAQ,KAAM,SACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAMdA,QAAQ,QAASsX,YACjBtX,QAAQ,UAAWsX,YZs+D3B5Y,SYl+DG0X,oBZm+DH1X,QYl+DG+H,sBZm+DH/H,QYl+DG6X,qBZs+DE,SAAS5X,OAAQD,SAEtB,YAEAuD,QAAOiB,eAAexE,QAAS,cAC3B0D,OAAO,Ga/kEZ,IAAMmV,gBAAiB,SAACC,GACY,mBAArBA,GAAED,eACTC,EAAED,iBAEFC,EAAEC,aAAc,GAIlB9R,gBAAkB,SAAC6R,GACY,mBAAtBA,GAAE7R,gBACT6R,EAAE7R,kBAEF6R,EAAEE,cAAe,GAKnBtQ,iBAAmB,SAACrE,OAAQwI,KAAMO,UAChC/I,OAAOqE,iBACPrE,OAAOqE,iBAAiBmE,KAAMO,UAAU,GACjC/I,OAAOiK,aAEdjK,OAAOiK,YAAY,KAAOzB,KAAMO,WAKlCxE,oBAAsB,SAACvE,OAAQwI,KAAMO,UACnC/I,OAAOuE,oBACPvE,OAAOuE,oBAAoBiE,KAAMO,UAAU,GACpC/I,OAAOmK,aAEdnK,OAAOmK,YAAY,KAAO3B,KAAMO,UbylEvCpN,SaplEG6Y,8BbqlEH7Y,QaplEGiH,gCbqlEHjH,QaplEG0I,kCbqlEH1I,QaplEG4I,yCbwlEE,SAAS3I,OAAQD,QAASH,qBAE/B,YAEA0D,QAAOiB,eAAexE,QAAS,cAC3B0D,OAAO,GcroEZ,IAAA0B,QAAAvF,oBAAA,IAEM+B,YAAc,SAACI,MdyoEhB,GcxoEO9B,IAA+B8B,KAA/B9B,GAAImC,MAA2BL,KAA3BK,MAAOC,SAAoBN,KAApBM,SAAUG,MAAUT,KAAVS,MACrB4T,MAAqD5T,MAArD4T,MAAOhM,KAA8C5H,MAA9C4H,KAAMF,KAAwC1H,MAAxC0H,KAAMmM,KAAkC7T,MAAlC6T,KAAMlN,MAA4B3G,MAA5B2G,MdgpE5BkO,gBchpEwD7U,MAArBwI,kBAAAtF,SAAA2R,iBAAW,EAAAA,gBAC7CC,eAAiBhU,OAAOmI,KAAKpJ,UAAUC,OAEzCkV,QAAU,EACd,IAAIpN,KAAM,CACN,GAAImN,gBAAiB,EACjBrN,QACAqN,eAAiB,uDAEhBrN,OACDqN,eAAiB,sDAErBC,SAAU,EAAArS,OAAAsS,WAAU,IAAKF,gBACrBG,QAAS,WACL,MAAItN,OAAQF,MACD,EAAA/E,OAAA2C,YACH,gBAGJsC,OAASF,MACF,EAAA/E,OAAA2C,YACH,eACA,eAGD,QAKnB,GAAMkR,OAAO,EAAA7T,OAAAsS,WAAU,IAAK,IACxBC,SAAS,EAAAvS,OAAA2C,YACL,mBACA,aACEmR,wBAAyB7O,MAAQF,OACjCgP,yBAA0B9O,OAASF,OACnCiP,kBAAmB/O,SAGvBuN,OAAQ,EAAAxS,OAAAsS,WAAU,QAAQ,EAAAtS,OAAAyS,WAAUxV,QACtCsV,SAAS,EAAAvS,OAAA2C,YAAW,gBAElBsR,OAAQ,EAAAjU,OAAAsS,WAAU,OAAQH,gBAC5BI,QAAS,UAEPG,UAAW,EAAA1S,OAAAsS,WAAU,MAAOD,QAAUwB,KAAOrB,MAAQyB,OACvD1B,QAAS,YACT5V,MAAS,gBAA0B,GAARsU,MAAa,OAEtC0B,UAAW,EAAA3S,OAAAsS,WAAU,MAAOI,UAC9BE,UAAW9X,GACX+X,gBAAiB5N,MAAQF,KACzB+N,aAAc7B,MACd8B,YAAa7B,KACb8B,gBAAiBnN,SACjBoN,gBAAiBd,eACjBe,aAAclP,MACduO,SAAS,EAAAvS,OAAA2C,YACL,aACEwQ,gBAAiBtN,YAI3B,OAAO8M,UduoEV/X,SAAQ,WcpoEM4B,adwoET,SAAS3B,OAAQD,QAASH,qBe3sEhC,GAAAyZ,SAAAzZ,oBAAA,GACA,iBAAAyZ,qBAAArZ,OAAAC,GAAAoZ,QAAA,KAEAzZ,qBAAA,IAAAyZ,WACAA,SAAAC,SAAAtZ,OAAAD,QAAAsZ,QAAAC,SfiuEM,SAAStZ,OAAQD,QAASH,qBgBxuEhCG,QAAAC,OAAAD,QAAAH,oBAAA,MAKAG,QAAAmB,MAAAlB,OAAAC,GAAA,oxBAA2yB,MhBivEryB,SAASD,OAAQD,SiBjvEvBC,OAAAD,QAAA,WACA,GAAAyL,QA0CA,OAvCAA,MAAAkD,SAAA,WAEA,OADA6K,WACAtY,EAAA,EAAgBA,EAAAgF,KAAA3D,OAAiBrB,IAAA,CACjC,GAAAuY,MAAAvT,KAAAhF,EACAuY,MAAA,GACAD,OAAArY,KAAA,UAAAsY,KAAA,OAAwCA,KAAA,QAExCD,OAAArY,KAAAsY,KAAA,IAGA,MAAAD,QAAA7N,KAAA,KAIAF,KAAAvK,EAAA,SAAAtB,QAAA8Z,YACA,gBAAA9Z,WACAA,UAAA,KAAAA,QAAA,KAEA,QADA+Z,2BACAzY,EAAA,EAAgBA,EAAAgF,KAAA3D,OAAiBrB,IAAA,CACjC,GAAAhB,IAAAgG,KAAAhF,GAAA,EACA,iBAAAhB,MACAyZ,uBAAAzZ,KAAA,GAEA,IAAAgB,EAAA,EAAYA,EAAAtB,QAAA2C,OAAoBrB,IAAA,CAChC,GAAAuY,MAAA7Z,QAAAsB,EAKA,iBAAAuY,MAAA,IAAAE,uBAAAF,KAAA,MACAC,aAAAD,KAAA,GACAA,KAAA,GAAAC,WACKA,aACLD,KAAA,OAAAA,KAAA,aAAAC,WAAA,KAEAjO,KAAAtK,KAAAsY,SAIAhO,OjB8vEM,SAASxL,OAAQD,QAASH,qBkBjvEhC,QAAA+Z,gBAAAC,OAAA5T,SACA,OAAA/E,GAAA,EAAeA,EAAA2Y,OAAAtX,OAAmBrB,IAAA,CAClC,GAAAuY,MAAAI,OAAA3Y,GACA4Y,SAAAC,YAAAN,KAAAvZ,GACA,IAAA4Z,SAAA,CACAA,SAAAE,MACA,QAAAC,GAAA,EAAiBA,EAAAH,SAAAI,MAAA3X,OAA2B0X,IAC5CH,SAAAI,MAAAD,GAAAR,KAAAS,MAAAD,GAEA,MAAQA,EAAAR,KAAAS,MAAA3X,OAAuB0X,IAC/BH,SAAAI,MAAA/Y,KAAAgZ,SAAAV,KAAAS,MAAAD,GAAAhU,cAEG,CAEH,OADAiU,UACAD,EAAA,EAAiBA,EAAAR,KAAAS,MAAA3X,OAAuB0X,IACxCC,MAAA/Y,KAAAgZ,SAAAV,KAAAS,MAAAD,GAAAhU,SAEA8T,aAAAN,KAAAvZ,KAA2BA,GAAAuZ,KAAAvZ,GAAA8Z,KAAA,EAAAE,eAK3B,QAAAE,cAAA3O,MAGA,OAFAoO,WACAQ,aACAnZ,EAAA,EAAeA,EAAAuK,KAAAlJ,OAAiBrB,IAAA,CAChC,GAAAuY,MAAAhO,KAAAvK,GACAhB,GAAAuZ,KAAA,GACAa,IAAAb,KAAA,GACAc,MAAAd,KAAA,GACAe,UAAAf,KAAA,GACAgB,MAAcH,QAAAC,YAAAC,oBACdH,WAAAna,IAGAma,UAAAna,IAAAga,MAAA/Y,KAAAsZ,MAFAZ,OAAA1Y,KAAAkZ,UAAAna,KAAgCA,MAAAga,OAAAO,QAIhC,MAAAZ,QAGA,QAAAa,oBAAAzU,QAAA0U,cACA,GAAAC,MAAAC,iBACAC,8BAAAC,sDAAAxY,OAAA,EACA,YAAA0D,QAAA+U,SACAF,8BAEGA,8BAAAG,YACHL,KAAAM,aAAAP,aAAAG,8BAAAG,aAEAL,KAAA5S,YAAA2S,cAJAC,KAAAM,aAAAP,aAAAC,KAAA9R,YAMAiS,2BAAA5Z,KAAAwZ,kBACE,eAAA1U,QAAA+U,SAGF,SAAAnT,OAAA,qEAFA+S,MAAA5S,YAAA2S,eAMA,QAAAQ,oBAAAR,cACAA,aAAAvE,WAAArN,YAAA4R,aACA,IAAAS,KAAAL,2BAAAzT,QAAAqT,aACAS,MAAA,GACAL,2BAAAtR,OAAA2R,IAAA,GAIA,QAAAC,oBAAApV,SACA,GAAA0U,cAAAjZ,SAAAoG,cAAA,QAGA,OAFA6S,cAAA9N,KAAA,WACA6N,mBAAAzU,QAAA0U,cACAA,aAGA,QAAAW,mBAAArV,SACA,GAAAsV,aAAA7Z,SAAAoG,cAAA,OAGA,OAFAyT,aAAAC,IAAA,aACAd,mBAAAzU,QAAAsV,aACAA,YAGA,QAAApB,UAAA1Z,IAAAwF,SACA,GAAA0U,cAAA1R,OAAAwS,MAEA,IAAAxV,QAAAyV,UAAA,CACA,GAAAC,YAAAC,kBACAjB,cAAAkB,oCAAAR,mBAAApV,UACAgD,OAAA6S,oBAAAC,KAAA,KAAApB,aAAAgB,YAAA,GACAF,OAAAK,oBAAAC,KAAA,KAAApB,aAAAgB,YAAA,OACElb,KAAA+Z,WACF,kBAAAwB,MACA,kBAAAA,KAAAC,iBACA,kBAAAD,KAAAE,iBACA,kBAAAC,OACA,kBAAAC,OACAzB,aAAAW,kBAAArV,SACAgD,OAAAoT,WAAAN,KAAA,KAAApB,cACAc,OAAA,WACAN,mBAAAR,cACAA,aAAA2B,MACAN,IAAAE,gBAAAvB,aAAA2B,SAGA3B,aAAAU,mBAAApV,SACAgD,OAAAsT,WAAAR,KAAA,KAAApB,cACAc,OAAA,WACAN,mBAAAR,eAMA,OAFA1R,QAAAxI,KAEA,SAAA+b,QACA,GAAAA,OAAA,CACA,GAAAA,OAAAlC,MAAA7Z,IAAA6Z,KAAAkC,OAAAjC,QAAA9Z,IAAA8Z,OAAAiC,OAAAhC,YAAA/Z,IAAA+Z,UACA,MACAvR,QAAAxI,IAAA+b,YAEAf,WAcA,QAAAK,qBAAAnB,aAAA9U,MAAA4V,OAAAhb,KACA,GAAA6Z,KAAAmB,OAAA,GAAAhb,IAAA6Z,GAEA,IAAAK,aAAA8B,WACA9B,aAAA8B,WAAAC,QAAAC,YAAA9W,MAAAyU,SACE,CACF,GAAAsC,SAAAlb,SAAA6R,eAAA+G,KACAuC,WAAAlC,aAAAkC,UACAA,YAAAhX,QAAA8U,aAAA5R,YAAA8T,WAAAhX,QACAgX,WAAAta,OACAoY,aAAAO,aAAA0B,QAAAC,WAAAhX,QAEA8U,aAAA3S,YAAA4U,UAKA,QAAAL,YAAA5B,aAAAla,KACA,GAAA6Z,KAAA7Z,IAAA6Z,IACAC,MAAA9Z,IAAA8Z,KAMA,IAJAA,OACAI,aAAAhK,aAAA,QAAA4J,OAGAI,aAAA8B,WACA9B,aAAA8B,WAAAC,QAAApC,QACE,CACF,KAAAK,aAAA7R,YACA6R,aAAA5R,YAAA4R,aAAA7R,WAEA6R,cAAA3S,YAAAtG,SAAA6R,eAAA+G,OAIA,QAAA+B,YAAAd,YAAA9a,KACA,GAAA6Z,KAAA7Z,IAAA6Z,IACAE,UAAA/Z,IAAA+Z,SAEAA,aAEAF,KAAA,uDAAuD8B,KAAAU,SAAAC,mBAAA3b,KAAAgB,UAAAoY,cAAA,MAGvD,IAAAwC,MAAA,GAAAb,OAAA7B,MAA6BzN,KAAA,aAE7BoQ,OAAA1B,YAAAe,IAEAf,aAAAe,KAAAN,IAAAC,gBAAAe,MAEAC,QACAjB,IAAAE,gBAAAe,QAhPA,GAAAlD,gBACAmD,QAAA,SAAAC,IACA,GAAAC,KACA,mBAEA,MADA,mBAAAA,aAAAD,GAAAzT,MAAAxD,KAAAX,YACA6X,OAGAC,QAAAH,QAAA,WACA,qBAAAI,KAAA3a,OAAA2M,UAAAiO,UAAA/N,iBAEAqL,eAAAqC,QAAA,WACA,MAAAxb,UAAAkZ,MAAAlZ,SAAA8b,qBAAA,aAEA3B,iBAAA,KACAD,iBAAA,EACAb,6BAEA9a,QAAAD,QAAA,SAAAyL,KAAAxF,SAEA,mBAAAvE,UAAA,SAAAmG,OAAA,+DAGA5B,qBAGA,mBAAAA,SAAAyV,YAAAzV,QAAAyV,UAAA2B,WAGA,mBAAApX,SAAA+U,WAAA/U,QAAA+U,SAAA,SAEA,IAAAnB,QAAAO,aAAA3O,KAGA,OAFAmO,gBAAAC,OAAA5T,SAEA,SAAAwX,SAEA,OADAC,cACAxc,EAAA,EAAgBA,EAAA2Y,OAAAtX,OAAmBrB,IAAA,CACnC,GAAAuY,MAAAI,OAAA3Y,GACA4Y,SAAAC,YAAAN,KAAAvZ,GACA4Z,UAAAE,OACA0D,UAAAvc,KAAA2Y,UAEA,GAAA2D,QAAA,CACA,GAAApD,WAAAD,aAAAqD,QACA7D,gBAAAS,UAAApU,SAEA,OAAA/E,GAAA,EAAgBA,EAAAwc,UAAAnb,OAAsBrB,IAAA,CACtC,GAAA4Y,UAAA4D,UAAAxc,EACA,QAAA4Y,SAAAE,KAAA,CACA,OAAAC,GAAA,EAAkBA,EAAAH,SAAAI,MAAA3X,OAA2B0X,IAC7CH,SAAAI,MAAAD,WACAF,aAAAD,SAAA5Z,OAiIA,IAAAyc,aAAA,WACA,GAAAgB,aAEA,iBAAA9X,MAAA+X,aAEA,MADAD,WAAA9X,OAAA+X,YACAD,UAAAvT,OAAAyT,SAAAlS,KAAA","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _src = __webpack_require__(1);\n\t\n\tvar _src2 = _interopRequireDefault(_src);\n\t\n\tvar _renderer = __webpack_require__(12);\n\t\n\tvar _renderer2 = _interopRequireDefault(_renderer);\n\t\n\t__webpack_require__(13);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar data = [];\n\tvar source = '{\"id\":\"<root>\",\"label\":\"<root>\",\"children\":[{\"id\":\"alpha\",\"label\":\"Alpha\"},{\"id\":\"bravo\",\"label\":\"Bravo\",\"children\":[{\"id\":\"charlie\",\"label\":\"Charlie\",\"children\":[{\"id\":\"delta\",\"label\":\"Delta\",\"children\":[{\"id\":\"echo\",\"label\":\"Echo\"},{\"id\":\"foxtrot\",\"label\":\"Foxtrot\"}]},{\"id\":\"golf\",\"label\":\"Golf\"}]},{\"id\":\"hotel\",\"label\":\"Hotel\",\"children\":[{\"id\":\"india\",\"label\":\"India\",\"children\":[{\"id\":\"juliet\",\"label\":\"Juliet\"}]}]},{\"id\":\"kilo\",\"label\":\"Kilo\"}]}]}';\n\t\n\tfor (var i = 0; i < 1000; ++i) {\n\t    data.push(JSON.parse(source.replace(/\"(id|label)\":\"([^\"]*)\"/g, '\"$1\": \"$2.' + i + '\"')));\n\t}\n\t\n\tvar tree = new _src2['default']({\n\t    autoOpen: true,\n\t    el: document.querySelector('#tree'),\n\t    rowRenderer: _renderer2['default']\n\t});\n\t\n\ttree.on('scrollProgress', function (progress) {\n\t    document.querySelector('#scrolling-progress').style = 'width: ' + progress + '%';\n\t});\n\t\n\ttree.on('openNode', function (node) {\n\t    console.log('openNode', node);\n\t});\n\ttree.on('closeNode', function (node) {\n\t    console.log('closeNode', node);\n\t});\n\ttree.on('selectNode', function (node) {\n\t    var el = document.querySelector('#preview');\n\t\n\t    if (node) {\n\t        el.innerHTML = JSON.stringify({\n\t            id: node.id,\n\t            label: node.label,\n\t            children: node.children ? node.children.length : 0,\n\t            parent: node.parent ? node.parent.id : null,\n\t            state: node.state\n\t        }, null, 2);\n\t    } else {\n\t        el.innerHTML = '';\n\t    }\n\t});\n\t\n\ttree.loadData(data);\n\t\n\twindow.tree = tree;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _events = __webpack_require__(2);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _clusterize = __webpack_require__(3);\n\t\n\tvar _clusterize2 = _interopRequireDefault(_clusterize);\n\t\n\tvar _flattree = __webpack_require__(4);\n\t\n\tvar _lookupTable = __webpack_require__(8);\n\t\n\tvar _lookupTable2 = _interopRequireDefault(_lookupTable);\n\t\n\tvar _renderer = __webpack_require__(9);\n\t\n\tvar _polyfill = __webpack_require__(11);\n\t\n\tvar _utils = __webpack_require__(10);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar extend = function extend(target) {\n\t    for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        sources[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    if (target === undefined || target === null) {\n\t        throw new TypeError('Cannot convert undefined or null to object');\n\t    }\n\t\n\t    var output = Object(target);\n\t    for (var index = 0; index < sources.length; index++) {\n\t        var source = sources[index];\n\t        if (source !== undefined && source !== null) {\n\t            for (var key in source) {\n\t                if (source.hasOwnProperty(key)) {\n\t                    output[key] = source[key];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return output;\n\t};\n\t\n\tvar InfiniteTree = function (_events$EventEmitter) {\n\t    _inherits(InfiniteTree, _events$EventEmitter);\n\t\n\t    function InfiniteTree() {\n\t        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t        _classCallCheck(this, InfiniteTree);\n\t\n\t        // Assign options\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(InfiniteTree).call(this));\n\t\n\t        _this.options = {\n\t            autoOpen: false,\n\t            el: null,\n\t            rowRenderer: _renderer.defaultRowRenderer\n\t        };\n\t        _this.state = {\n\t            openNodes: [],\n\t            selectedNode: null\n\t        };\n\t        _this.clusterize = null;\n\t        _this.tbl = new _lookupTable2['default']();\n\t        _this.nodes = [];\n\t        _this.rows = [];\n\t        _this.scrollElement = null;\n\t        _this.contentElement = null;\n\t\n\t        _this.contentListener = function (evt) {\n\t            var target = evt.target;\n\t            var currentTarget = evt.currentTarget;\n\t\n\t\n\t            (0, _polyfill.stopPropagation)(evt);\n\t\n\t            if (target !== currentTarget) {\n\t                var itemTarget = target;\n\t                var handleToggler = false;\n\t\n\t                while (itemTarget && itemTarget.parentElement !== currentTarget) {\n\t                    if (itemTarget.className.indexOf('tree-toggler') >= 0) {\n\t                        handleToggler = true;\n\t                    }\n\t                    itemTarget = itemTarget.parentElement;\n\t                }\n\t\n\t                var id = itemTarget.getAttribute('aria-id');\n\t                var node = _this.getNodeById(id);\n\t\n\t                if (!node) {\n\t                    return;\n\t                }\n\t\n\t                // Click on the toggler to open/close a tree node\n\t                if (handleToggler) {\n\t                    _this.toggleNode(node);\n\t                } else {\n\t                    _this.selectNode(node);\n\t                }\n\t            }\n\t        };\n\t\n\t        _this.options = extend({}, _this.options, options);\n\t\n\t        if (!_this.options.el) {\n\t            console.error('Failed to initialize infinite-tree: el is not specified.', options);\n\t            return _possibleConstructorReturn(_this);\n\t        }\n\t\n\t        _this.create();\n\t\n\t        // Load tree data if it's provided\n\t        if (options.data) {\n\t            _this.loadData(options.data);\n\t        }\n\t        return _this;\n\t    }\n\t\n\t    _createClass(InfiniteTree, [{\n\t        key: 'create',\n\t        value: function create() {\n\t            var _this2 = this;\n\t\n\t            if (!this.options.el) {\n\t                throw new Error('The element option is not specified.');\n\t            }\n\t\n\t            var scrollElement = document.createElement('div');\n\t            scrollElement.className = (0, _utils.classNames)('infinite-tree', 'infinite-tree-scroll');\n\t            var contentElement = document.createElement('div');\n\t            contentElement.className = (0, _utils.classNames)('infinite-tree', 'infinite-tree-content');\n\t\n\t            scrollElement.appendChild(contentElement);\n\t            this.options.el.appendChild(scrollElement);\n\t\n\t            this.clusterize = new _clusterize2['default']({\n\t                tag: 'div',\n\t                rows: [],\n\t                scrollElem: scrollElement,\n\t                contentElem: contentElement,\n\t                no_data_class: 'infinite-tree-no-data',\n\t                callbacks: {\n\t                    // Will be called right before replacing previous cluster with new one.\n\t                    clusterWillChange: function clusterWillChange() {},\n\t                    // Will be called right after replacing previous cluster with new one.\n\t                    clusterChanged: function clusterChanged() {},\n\t                    // Will be called on scrolling. Returns progress position.\n\t                    scrollingProgress: function scrollingProgress(progress) {\n\t                        _this2.emit('scrollProgress', progress);\n\t                    }\n\t                }\n\t            });\n\t\n\t            this.scrollElement = scrollElement;\n\t            this.contentElement = contentElement;\n\t\n\t            (0, _polyfill.addEventListener)(this.contentElement, 'click', this.contentListener);\n\t        }\n\t    }, {\n\t        key: 'clear',\n\t        value: function clear() {\n\t            this.clusterize.clear();\n\t            this.tbl.clear();\n\t            this.nodes = [];\n\t            this.rows = [];\n\t            this.state.openNodes = [];\n\t            this.state.selectedNode = null;\n\t        }\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            (0, _polyfill.removeEventListener)(this.contentElement, 'click', this.contentListener);\n\t\n\t            this.clear();\n\t\n\t            if (this.clusterize) {\n\t                this.clusterize.destroy(true); // True to remove all data from the list\n\t                this.clusterize = null;\n\t            }\n\t\n\t            // Remove all child nodes\n\t            while (this.contentElement.firstChild) {\n\t                this.contentElement.removeChild(this.contentElement.firstChild);\n\t            }\n\t            while (this.scrollElement.firstChild) {\n\t                this.scrollElement.removeChild(this.scrollElement.firstChild);\n\t            }\n\t            if (this.options.el) {\n\t                var containerElement = this.options.el;\n\t                while (containerElement.firstChild) {\n\t                    containerElement.removeChild(containerElement.firstChild);\n\t                }\n\t            }\n\t            this.contentElement = null;\n\t            this.scrollElement = null;\n\t        }\n\t        // Updates list with new data\n\t\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            this.clusterize.update(this.rows);\n\t        }\n\t        // Adds a child node to a node.\n\t        // @param {object} parent The object that defines the parent node.\n\t        // @param {object} newChild The object that defines the new child node.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'addChildNode',\n\t        value: function addChildNode() {\n\t            var _this3 = this;\n\t\n\t            var parent = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t            var newChild = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n\t            var rowRenderer = this.options.rowRenderer;\n\t\n\t\n\t            if (!newChild) {\n\t                return false;\n\t            }\n\t            if (!parent) {\n\t                // Traversing up through ancestors to find the root node.\n\t                parent = this.nodes.length > 0 ? this.nodes[0] : null;\n\t                while (parent && parent.parent !== null) {\n\t                    parent = parent.parent;\n\t                }\n\t            }\n\t            if (!newChild.parent) {\n\t                parent.children = parent.children || [];\n\t                parent.children.push(newChild);\n\t                newChild.parent = parent;\n\t            }\n\t\n\t            var total = parent.state.total;\n\t            var nodes = (0, _flattree.flatten)(parent.children, { openNodes: this.state.openNodes }).slice(total);\n\t            var rows = nodes.map(function (node) {\n\t                return rowRenderer(node);\n\t            });\n\t\n\t            // The newChildIndex will be equal to total if the parent node is the root.\n\t            // i.e. newChildIndex = -1 + total + 1 = total\n\t            var newChildIndex = this.nodes.indexOf(parent) + total + 1;\n\t\n\t            // Insert an array inside another array\n\t            this.nodes.splice.apply(this.nodes, [newChildIndex, 0].concat(nodes));\n\t            this.rows.splice.apply(this.rows, [newChildIndex, 0].concat(rows));\n\t            this.rows[newChildIndex] = rowRenderer(newChild);\n\t\n\t            // Add nodes to the lookup table\n\t            nodes.forEach(function (node) {\n\t                if (node.id !== undefined) {\n\t                    _this3.tbl.set(node.id, node);\n\t                }\n\t            });\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t\n\t            return true;\n\t        }\n\t        // Adds a child node to a node at the specified index.\n\t        //   * If the parent is null or undefined, inserts the child at the specified index in the top-level.\n\t        //   * If the parent has children, the method adds the child to it at the specified index.\n\t        //   * If the parent does not have children, the method adds the child to the parent.\n\t        //   * If the index value is greater than or equal to the number of children in the parent, the method adds the child at the end of the children.\n\t        // @param {object} parent The object that defines the parent node.\n\t        // @param {object} newChild The object that defines the new child node.\n\t        // @param {number} index The 0-based index of where to insert the child node.\n\t\n\t    }, {\n\t        key: 'addChildNodeAt',\n\t        value: function addChildNodeAt(parent, newChild, index) {}\n\t        // Adds a new sibling node after the current node.\n\t        // @param {object} node The object that defines the current node.\n\t        // @param {object} newSibling The object that defines the new sibling node.\n\t\n\t    }, {\n\t        key: 'addSiblingNodeAfter',\n\t        value: function addSiblingNodeAfter(node, newSibling) {}\n\t        // TODO\n\t\n\t        // Adds a new sibling node before the current node.\n\t        // @param {object} node The object that defines the current node.\n\t        // @param {object} newSibling The object that defines the new sibling node.\n\t\n\t    }, {\n\t        key: 'addSiblingNodeBefore',\n\t        value: function addSiblingNodeBefore(node, newSibling) {}\n\t        // TODO\n\t\n\t        // Closes a node to hide its children.\n\t        // @param {object} node The object that defines the node.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'closeNode',\n\t        value: function closeNode(node) {\n\t            var rowRenderer = this.options.rowRenderer;\n\t\n\t            // Retrieve node index\n\t\n\t            var nodeIndex = this.nodes.indexOf(node);\n\t            if (nodeIndex < 0) {\n\t                throw new Error('Invalid node specified: node.id=' + JSON.stringify(node.id));\n\t            }\n\t\n\t            // Check if the closeNode action can be performed\n\t            if (this.state.openNodes.indexOf(node) < 0) {\n\t                return false;\n\t            }\n\t\n\t            // Keep selected node unchanged if \"node\" is equal to \"this.state.selectedNode\"\n\t            if (this.state.selectedNode && this.state.selectedNode !== node) {\n\t                // Action:\n\t                //   close \"node.0.0\"\n\t                //\n\t                // Tree:\n\t                // [0] - node.0\n\t                // [1]  - node.0.0      => next selected node (index=1, total=2)\n\t                // [2]      node.0.0.0  => last selected node (index=2, total=0)\n\t                // [3]      node.0.0.1\n\t                // [4]    node.0.1\n\t                var selectedIndex = this.nodes.indexOf(this.state.selectedNode);\n\t                var rangeFrom = nodeIndex + 1;\n\t                var rangeTo = nodeIndex + node.state.total;\n\t\n\t                if (rangeFrom <= selectedIndex && selectedIndex <= rangeTo) {\n\t                    this.selectNode(node);\n\t                }\n\t            }\n\t\n\t            node.state.open = false; // Set node.state.open to false\n\t            var openNodes = this.state.openNodes.filter(function (node) {\n\t                return node.state.more && node.state.open;\n\t            });\n\t            this.state.openNodes = openNodes;\n\t\n\t            var deleteCount = node.state.total;\n\t\n\t            {\n\t                // Traversing up through ancestors to subtract node.state.total.\n\t                var p = node;\n\t                while (p) {\n\t                    p.state.total = p.state.total - deleteCount;\n\t                    p = p.parent;\n\t                }\n\t            }\n\t\n\t            // Remove elements from an array\n\t            this.nodes.splice(nodeIndex + 1, deleteCount);\n\t            this.rows.splice(nodeIndex + 1, deleteCount);\n\t            this.rows[nodeIndex] = rowRenderer(node);\n\t\n\t            // Emit the 'closeNode' event\n\t            this.emit('closeNode', node);\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t\n\t            return true;\n\t        }\n\t        // Gets a list of child nodes.\n\t        // @param {object} [node] The object that defines the node. If null or undefined, returns a list of top level nodes.\n\t        // @return {array} Returns an array of child nodes.\n\t\n\t    }, {\n\t        key: 'getChildNodes',\n\t        value: function getChildNodes() {\n\t            var node = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t            if (node) {\n\t                return node.children || [];\n\t            }\n\t            node = this.nodes.length > 0 ? this.nodes[0] : null;\n\t            while (node && node.parent !== null) {\n\t                node = node.parent;\n\t            }\n\t            return node && node.children || [];\n\t        }\n\t        // Gets a node by its unique id. This assumes that you have given the nodes in the data a unique id.\n\t        // @param {string|number} id An unique node id. A null value will be returned if the id doesn't match.\n\t        // @return {object} Returns the node the matches the id, null otherwise.\n\t\n\t    }, {\n\t        key: 'getNodeById',\n\t        value: function getNodeById(id) {\n\t            var node = this.tbl.get(id);\n\t            if (!node) {\n\t                // Find the first node that matches the id\n\t                node = this.nodes.filter(function (node) {\n\t                    return node.id === id;\n\t                })[0];\n\t                if (!node) {\n\t                    return null;\n\t                }\n\t                this.tbl.set(node.id, node);\n\t            }\n\t            return node;\n\t        }\n\t        // Gets the selected node.\n\t        // @return {object} Returns the selected node, or null if not selected.\n\t\n\t    }, {\n\t        key: 'getSelectedNode',\n\t        value: function getSelectedNode() {\n\t            return this.state.selectedNode;\n\t        }\n\t        // Gets an array of open nodes.\n\t        // @return {array} Returns an array of open nodes.\n\t\n\t    }, {\n\t        key: 'getOpenNodes',\n\t        value: function getOpenNodes() {\n\t            // returns a shallow copy of an array into a new array object.\n\t            return this.state.openNodes.slice();\n\t        }\n\t        // Loads data in the tree.\n\t        // @param {object|array} data The data is an object or array of objects that defines the node.\n\t\n\t    }, {\n\t        key: 'loadData',\n\t        value: function loadData() {\n\t            var _this4 = this;\n\t\n\t            var data = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\t            var _options = this.options;\n\t            var autoOpen = _options.autoOpen;\n\t            var rowRenderer = _options.rowRenderer;\n\t\n\t\n\t            this.nodes = (0, _flattree.flatten)(data, { openAllNodes: autoOpen });\n\t\n\t            // Clear lookup table\n\t            this.tbl.clear();\n\t\n\t            // Add nodes to the lookup table\n\t            this.nodes.forEach(function (node) {\n\t                if (node.id !== undefined) {\n\t                    _this4.tbl.set(node.id, node);\n\t                }\n\t            });\n\t\n\t            var openNodes = this.nodes.filter(function (node) {\n\t                return node.state.more && node.state.open;\n\t            });\n\t            this.state.openNodes = openNodes;\n\t            this.state.selectedNode = null;\n\t\n\t            this.rows = this.nodes.map(function (node) {\n\t                return rowRenderer(node);\n\t            });\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t        }\n\t        // Opens a node to display its children.\n\t        // @param {object} node The object that defines the node.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'openNode',\n\t        value: function openNode(node) {\n\t            var _this5 = this;\n\t\n\t            var rowRenderer = this.options.rowRenderer;\n\t\n\t            // Retrieve node index\n\t\n\t            var nodeIndex = this.nodes.indexOf(node);\n\t            if (nodeIndex < 0) {\n\t                throw new Error('Invalid node specified: node.id=' + JSON.stringify(node.id));\n\t            }\n\t\n\t            // Check if the openNode action can be performed\n\t            if (this.state.openNodes.indexOf(node) >= 0) {\n\t                return false;\n\t            }\n\t\n\t            node.state.open = true; // Set node.state.open to true\n\t            var openNodes = [node].concat(this.state.openNodes); // the most recently used items first\n\t            this.state.openNodes = openNodes;\n\t\n\t            var nodes = (0, _flattree.flatten)(node.children, { openNodes: this.state.openNodes });\n\t            var rows = nodes.map(function (node) {\n\t                return rowRenderer(node);\n\t            });\n\t\n\t            // Insert an array inside another array\n\t            this.nodes.splice.apply(this.nodes, [nodeIndex + 1, 0].concat(nodes));\n\t            this.rows.splice.apply(this.rows, [nodeIndex + 1, 0].concat(rows));\n\t            this.rows[nodeIndex] = rowRenderer(node);\n\t\n\t            // Add all child nodes to the lookup table if the first child does not exist in the lookup table\n\t            if (nodes.length > 0 && !this.tbl.get(nodes[0])) {\n\t                nodes.forEach(function (node) {\n\t                    if (node.id !== undefined) {\n\t                        _this5.tbl.set(node.id, node);\n\t                    }\n\t                });\n\t            }\n\t\n\t            // Emit the 'openNode' event\n\t            this.emit('openNode', node);\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t\n\t            return true;\n\t        }\n\t        // Removes a node.\n\t        // @param {object} node The object that defines the node.\n\t\n\t    }, {\n\t        key: 'removeNode',\n\t        value: function removeNode(node) {}\n\t        // TODO\n\t\n\t        // Sets the current scroll position to this node.\n\t        // @param {object} node The object that defines the node.\n\t        // @return {number} Returns the vertical scroll position, or -1 on error.\n\t\n\t    }, {\n\t        key: 'scrollToNode',\n\t        value: function scrollToNode(node) {\n\t            // Retrieve node index\n\t            var nodeIndex = this.nodes.indexOf(node);\n\t            if (nodeIndex < 0) {\n\t                return -1;\n\t            }\n\t            if (!this.contentElement) {\n\t                return -1;\n\t            }\n\t            // Get the offset height of the first child element that contains the \"tree-item\" class.\n\t            var firstChild = this.contentElement.querySelectorAll('.tree-item')[0];\n\t            var rowHeight = firstChild && firstChild.offsetHeight || 0;\n\t            return this.scrollTop(nodeIndex * rowHeight);\n\t        }\n\t        // Gets (or sets) the current vertical position of the scroll bar.\n\t        // @param {number} [value] An integer that indicates the new position to set the scroll bar to.\n\t        // @return {number} Returns the vertical scroll position.\n\t\n\t    }, {\n\t        key: 'scrollTop',\n\t        value: function scrollTop(value) {\n\t            if (!this.scrollElement) {\n\t                return 0;\n\t            }\n\t            if (value !== undefined) {\n\t                this.scrollElement.scrollTop = Number(value);\n\t            }\n\t            return this.scrollElement.scrollTop;\n\t        }\n\t        // Selects a node.\n\t        // @param {object} node The object that defines the node. If null or undefined, deselects the current node.\n\t        // @return {boolean} Returns true on success, false otherwise.\n\t\n\t    }, {\n\t        key: 'selectNode',\n\t        value: function selectNode() {\n\t            var node = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t            var rowRenderer = this.options.rowRenderer;\n\t\n\t\n\t            if (node === null) {\n\t                // Deselect the current node\n\t                if (this.state.selectedNode) {\n\t                    var selectedNode = this.state.selectedNode;\n\t                    var selectedIndex = this.nodes.indexOf(selectedNode);\n\t\n\t                    selectedNode.state.selected = false;\n\t                    this.rows[selectedIndex] = rowRenderer(selectedNode);\n\t                    this.state.selectedNode = null;\n\t\n\t                    // Emit the 'selectNode' event\n\t                    this.emit('selectNode', null);\n\t\n\t                    // Updates list with new data\n\t                    this.update();\n\t\n\t                    return true;\n\t                }\n\t\n\t                return false;\n\t            }\n\t\n\t            // Retrieve node index\n\t            var nodeIndex = this.nodes.indexOf(node);\n\t            if (nodeIndex < 0) {\n\t                throw new Error('Invalid node specified: node.id=' + JSON.stringify(node.id));\n\t            }\n\t\n\t            // Select this node\n\t            if (this.state.selectedNode !== node) {\n\t                node.state.selected = true;\n\t                this.rows[nodeIndex] = rowRenderer(node);\n\t            }\n\t\n\t            // Deselect the current node\n\t            if (this.state.selectedNode) {\n\t                var _selectedNode = this.state.selectedNode;\n\t                var _selectedIndex = this.nodes.indexOf(_selectedNode);\n\t                _selectedNode.state.selected = false;\n\t                this.rows[_selectedIndex] = rowRenderer(_selectedNode);\n\t            }\n\t\n\t            if (this.state.selectedNode !== node) {\n\t                this.state.selectedNode = node;\n\t\n\t                // Emit the 'selectNode' event\n\t                this.emit('selectNode', node);\n\t            } else {\n\t                this.state.selectedNode = null;\n\t\n\t                // Emit the 'selectNode' event\n\t                this.emit('selectNode', null);\n\t            }\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t\n\t            return true;\n\t        }\n\t        // Toggles a node to display or hide its children.\n\t        // @param {object} node The object that defines the node.\n\t\n\t    }, {\n\t        key: 'toggleNode',\n\t        value: function toggleNode(node) {\n\t            if (this.state.openNodes.indexOf(node) >= 0) {\n\t                // close node\n\t                this.closeNode(node);\n\t            } else {\n\t                // open node\n\t                this.openNode(node);\n\t            }\n\t        }\n\t        // Serializes the current state of a node to a JSON string.\n\t        // @param {object} node The object that defines the node. If null, returns the whole tree.\n\t\n\t    }, {\n\t        key: 'toString',\n\t        value: function toString(node) {\n\t            var traverse = function traverse(node) {\n\t                var s = '[';\n\t                if (node && node.children) {\n\t                    var _loop = function _loop(i) {\n\t                        var list = [];\n\t                        s = s + '{';\n\t                        Object.keys(node).forEach(function (key) {\n\t                            var value = node[key];\n\t                            if (key === 'parent') {\n\t                                // ignore parent\n\t                                return;\n\t                            }\n\t                            if (key === 'children') {\n\t                                // traverse child nodes\n\t                                list.push('\"' + key + '\":' + traverse(node.children[i]));\n\t                                return;\n\t                            }\n\t                            if (typeof value === 'string' || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t                                list.push('\"' + key + '\":' + JSON.stringify(value));\n\t                            } else {\n\t                                // primitive types\n\t                                list.push('\"' + key + '\":' + value);\n\t                            }\n\t                        });\n\t                        s = s + list.join(',');\n\t                        s = s + '}' + (i === node.children.length - 1 ? '' : ',');\n\t                    };\n\t\n\t                    for (var i = 0; i < node.children.length; ++i) {\n\t                        _loop(i);\n\t                    }\n\t                }\n\t                s = s + ']';\n\t                return s;\n\t            };\n\t\n\t            if (!node) {\n\t                node = this.nodes.length > 0 ? this.nodes[0] : null;\n\t                while (node && node.parent !== null) {\n\t                    node = node.parent;\n\t                }\n\t            }\n\t\n\t            return traverse(node);\n\t        }\n\t        // Performs full tree traversal using child-parent link, and returns an array of nodes.\n\t        // This is the most elegant way of traversing a tree — no recursion or stack is involved.\n\t        // @param {object} rootNode The object that defines the root node.\n\t        // @return {array} Returns an array of nodes, not including the root node.\n\t\n\t    }, {\n\t        key: 'traverse',\n\t        value: function traverse(rootNode) {\n\t            var list = [];\n\t\n\t            if (rootNode === undefined) {\n\t                rootNode = this.nodes.length > 0 ? this.nodes[0] : null;\n\t                while (rootNode && rootNode.parent !== null) {\n\t                    rootNode = rootNode.parent;\n\t                }\n\t            }\n\t\n\t            // Ignore root node\n\t            var node = rootNode.getFirstChild();\n\t            while (node) {\n\t                list.push(node);\n\t                if (node.hasChildren()) {\n\t                    node = node.getFirstChild();\n\t                } else {\n\t                    // find the parent level\n\t                    while (node.getNextSibling() === null && node !== rootNode) {\n\t                        // use child-parent link to get to the parent level\n\t                        node = node.getParent();\n\t                    }\n\t\n\t                    // Get next sibling\n\t                    node = node.getNextSibling();\n\t                }\n\t            }\n\t\n\t            return list;\n\t        }\n\t        // Updates the data of a node.\n\t        // @param {object} node\n\t        // @param {object} data The data object.\n\t\n\t    }, {\n\t        key: 'updateNode',\n\t        value: function updateNode(node, data) {\n\t            var rowRenderer = this.options.rowRenderer;\n\t\n\t            // Retrieve node index\n\t\n\t            var nodeIndex = this.nodes.indexOf(node);\n\t            if (nodeIndex < 0) {\n\t                throw new Error('Invalid node specified: node.id=' + JSON.stringify(node.id));\n\t            }\n\t\n\t            // The static attributes (i.e. children, parent, and state) are being protected\n\t            var _node = node;\n\t            var children = _node.children;\n\t            var parent = _node.parent;\n\t            var state = _node.state;\n\t\n\t            node = extend(node, data, { children: children, parent: parent, state: state });\n\t\n\t            this.rows[nodeIndex] = rowRenderer(node);\n\t\n\t            // Updates list with new data\n\t            this.update();\n\t        }\n\t    }]);\n\t\n\t    return InfiniteTree;\n\t}(_events2['default'].EventEmitter);\n\t\n\tmodule.exports = InfiniteTree;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      }\n\t      throw TypeError('Uncaught, unspecified \"error\" event.');\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*! Clusterize.js - v0.16.0 - 2016-03-12\r\n\t* http://NeXTs.github.com/Clusterize.js/\r\n\t* Copyright (c) 2015 Denis Lukov; Licensed GPLv3 */\r\n\t\r\n\t;(function(name, definition) {\r\n\t    if (true) module.exports = definition();\r\n\t    else if (typeof define == 'function' && typeof define.amd == 'object') define(definition);\r\n\t    else this[name] = definition();\r\n\t}('Clusterize', function() {\r\n\t  \"use strict\"\r\n\t\r\n\t  // detect ie9 and lower\r\n\t  // https://gist.github.com/padolsey/527683#comment-786682\r\n\t  var ie = (function(){\r\n\t    for( var v = 3,\r\n\t             el = document.createElement('b'),\r\n\t             all = el.all || [];\r\n\t         el.innerHTML = '<!--[if gt IE ' + (++v) + ']><i><![endif]-->',\r\n\t         all[0];\r\n\t       ){}\r\n\t    return v > 4 ? v : document.documentMode;\r\n\t  }()),\r\n\t  is_mac = navigator.platform.toLowerCase().indexOf('mac') + 1;\r\n\t  var Clusterize = function(data) {\r\n\t    if( ! (this instanceof Clusterize))\r\n\t      return new Clusterize(data);\r\n\t    var self = this;\r\n\t\r\n\t    var defaults = {\r\n\t      item_height: 0,\r\n\t      block_height: 0,\r\n\t      rows_in_block: 50,\r\n\t      rows_in_cluster: 0,\r\n\t      cluster_height: 0,\r\n\t      blocks_in_cluster: 4,\r\n\t      tag: null,\r\n\t      content_tag: null,\r\n\t      show_no_data_row: true,\r\n\t      no_data_class: 'clusterize-no-data',\r\n\t      no_data_text: 'No data',\r\n\t      keep_parity: true,\r\n\t      callbacks: {},\r\n\t      scroll_top: 0\r\n\t    }\r\n\t\r\n\t    // public parameters\r\n\t    self.options = {};\r\n\t    var options = ['rows_in_block', 'blocks_in_cluster', 'show_no_data_row', 'no_data_class', 'no_data_text', 'keep_parity', 'tag', 'callbacks'];\r\n\t    for(var i = 0, option; option = options[i]; i++) {\r\n\t      self.options[option] = typeof data[option] != 'undefined' && data[option] != null\r\n\t        ? data[option]\r\n\t        : defaults[option];\r\n\t    }\r\n\t\r\n\t    var elems = ['scroll', 'content'];\r\n\t    for(var i = 0, elem; elem = elems[i]; i++) {\r\n\t      self[elem + '_elem'] = data[elem + 'Id']\r\n\t        ? document.getElementById(data[elem + 'Id'])\r\n\t        : data[elem + 'Elem'];\r\n\t      if( ! self[elem + '_elem'])\r\n\t        throw new Error(\"Error! Could not find \" + elem + \" element\");\r\n\t    }\r\n\t\r\n\t    // tabindex forces the browser to keep focus on the scrolling list, fixes #11\r\n\t    if( ! self.content_elem.hasAttribute('tabindex'))\r\n\t      self.content_elem.setAttribute('tabindex', 0);\r\n\t\r\n\t    // private parameters\r\n\t    var rows = isArray(data.rows)\r\n\t        ? data.rows\r\n\t        : self.fetchMarkup(),\r\n\t      cache = {data: '', bottom: 0},\r\n\t      scroll_top = self.scroll_elem.scrollTop;\r\n\t\r\n\t    // get row height\r\n\t    self.exploreEnvironment(rows);\r\n\t\r\n\t    // append initial data\r\n\t    self.insertToDOM(rows, cache);\r\n\t\r\n\t    // restore the scroll position\r\n\t    self.scroll_elem.scrollTop = scroll_top;\r\n\t\r\n\t    // adding scroll handler\r\n\t    var last_cluster = false,\r\n\t    scroll_debounce = 0,\r\n\t    pointer_events_set = false,\r\n\t    scrollEv = function() {\r\n\t      // fixes scrolling issue on Mac #3\r\n\t      if (is_mac) {\r\n\t          if( ! pointer_events_set) self.content_elem.style.pointerEvents = 'none';\r\n\t          pointer_events_set = true;\r\n\t          clearTimeout(scroll_debounce);\r\n\t          scroll_debounce = setTimeout(function () {\r\n\t              self.content_elem.style.pointerEvents = 'auto';\r\n\t              pointer_events_set = false;\r\n\t          }, 50);\r\n\t      }\r\n\t      if (last_cluster != (last_cluster = self.getClusterNum()))\r\n\t        self.insertToDOM(rows, cache);\r\n\t      if (self.options.callbacks.scrollingProgress)\r\n\t        self.options.callbacks.scrollingProgress(self.getScrollProgress());\r\n\t    },\r\n\t    resize_debounce = 0,\r\n\t    resizeEv = function() {\r\n\t      clearTimeout(resize_debounce);\r\n\t      resize_debounce = setTimeout(self.refresh, 100);\r\n\t    }\r\n\t    on('scroll', self.scroll_elem, scrollEv);\r\n\t    on('resize', window, resizeEv);\r\n\t\r\n\t    // public methods\r\n\t    self.destroy = function(clean) {\r\n\t      off('scroll', self.scroll_elem, scrollEv);\r\n\t      off('resize', window, resizeEv);\r\n\t      self.html((clean ? self.generateEmptyRow() : rows).join(''));\r\n\t    }\r\n\t    self.refresh = function() {\r\n\t      self.getRowsHeight(rows) && self.update(rows);\r\n\t    }\r\n\t    self.update = function(new_rows) {\r\n\t      rows = isArray(new_rows)\r\n\t        ? new_rows\r\n\t        : [];\r\n\t      var scroll_top = self.scroll_elem.scrollTop;\r\n\t      // fixes #39\r\n\t      if(rows.length * self.options.item_height < scroll_top) {\r\n\t        self.scroll_elem.scrollTop = 0;\r\n\t        last_cluster = 0;\r\n\t      }\r\n\t      self.insertToDOM(rows, cache);\r\n\t      self.scroll_elem.scrollTop = scroll_top;\r\n\t    }\r\n\t    self.clear = function() {\r\n\t      self.update([]);\r\n\t    }\r\n\t    self.getRowsAmount = function() {\r\n\t      return rows.length;\r\n\t    }\r\n\t    self.getScrollProgress = function() {\r\n\t      return this.options.scroll_top / (rows.length * this.options.item_height) * 100 || 0;\r\n\t    }\r\n\t\r\n\t    var add = function(where, _new_rows) {\r\n\t      var new_rows = isArray(_new_rows)\r\n\t        ? _new_rows\r\n\t        : [];\r\n\t      if( ! new_rows.length) return;\r\n\t      rows = where == 'append'\r\n\t        ? rows.concat(new_rows)\r\n\t        : new_rows.concat(rows);\r\n\t      self.insertToDOM(rows, cache);\r\n\t    }\r\n\t    self.append = function(rows) {\r\n\t      add('append', rows);\r\n\t    }\r\n\t    self.prepend = function(rows) {\r\n\t      add('prepend', rows);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  Clusterize.prototype = {\r\n\t    constructor: Clusterize,\r\n\t    // fetch existing markup\r\n\t    fetchMarkup: function() {\r\n\t      var rows = [], rows_nodes = this.getChildNodes(this.content_elem);\r\n\t      while (rows_nodes.length) {\r\n\t        rows.push(rows_nodes.shift().outerHTML);\r\n\t      }\r\n\t      return rows;\r\n\t    },\r\n\t    // get tag name, content tag name, tag height, calc cluster height\r\n\t    exploreEnvironment: function(rows) {\r\n\t      var opts = this.options;\r\n\t      opts.content_tag = this.content_elem.tagName.toLowerCase();\r\n\t      if( ! rows.length) return;\r\n\t      if(ie && ie <= 9 && ! opts.tag) opts.tag = rows[0].match(/<([^>\\s/]*)/)[1].toLowerCase();\r\n\t      if(this.content_elem.children.length <= 1) this.html(rows[0] + rows[0] + rows[0]);\r\n\t      if( ! opts.tag) opts.tag = this.content_elem.children[0].tagName.toLowerCase();\r\n\t      this.getRowsHeight(rows);\r\n\t    },\r\n\t    getRowsHeight: function(rows) {\r\n\t      var opts = this.options,\r\n\t        prev_item_height = opts.item_height;\r\n\t      opts.cluster_height = 0\r\n\t      if( ! rows.length) return;\r\n\t      var nodes = this.content_elem.children;\r\n\t      opts.item_height = nodes[Math.floor(nodes.length / 2)].offsetHeight;\r\n\t      // consider table's border-spacing\r\n\t      if(opts.tag == 'tr' && getStyle('borderCollapse', this.content_elem) != 'collapse')\r\n\t        opts.item_height += parseInt(getStyle('borderSpacing', this.content_elem)) || 0;\r\n\t      opts.block_height = opts.item_height * opts.rows_in_block;\r\n\t      opts.rows_in_cluster = opts.blocks_in_cluster * opts.rows_in_block;\r\n\t      opts.cluster_height = opts.blocks_in_cluster * opts.block_height;\r\n\t      return prev_item_height != opts.item_height;\r\n\t    },\r\n\t    // get current cluster number\r\n\t    getClusterNum: function () {\r\n\t      this.options.scroll_top = this.scroll_elem.scrollTop;\r\n\t      return Math.floor(this.options.scroll_top / (this.options.cluster_height - this.options.block_height)) || 0;\r\n\t    },\r\n\t    // generate empty row if no data provided\r\n\t    generateEmptyRow: function() {\r\n\t      var opts = this.options;\r\n\t      if( ! opts.tag || ! opts.show_no_data_row) return [];\r\n\t      var empty_row = document.createElement(opts.tag),\r\n\t        no_data_content = document.createTextNode(opts.no_data_text), td;\r\n\t      empty_row.className = opts.no_data_class;\r\n\t      if(opts.tag == 'tr') {\r\n\t        td = document.createElement('td');\r\n\t        td.appendChild(no_data_content);\r\n\t      }\r\n\t      empty_row.appendChild(td || no_data_content);\r\n\t      return [empty_row.outerHTML];\r\n\t    },\r\n\t    // generate cluster for current scroll position\r\n\t    generate: function (rows, cluster_num) {\r\n\t      var opts = this.options,\r\n\t        rows_len = rows.length;\r\n\t      if (rows_len < opts.rows_in_block) {\r\n\t        return {\r\n\t          top_offset: 0,\r\n\t          bottom_offset: 0,\r\n\t          rows_above: 0,\r\n\t          rows: rows_len ? rows : this.generateEmptyRow()\r\n\t        }\r\n\t      }\r\n\t      if( ! opts.cluster_height) {\r\n\t        this.exploreEnvironment(rows);\r\n\t      }\r\n\t      var items_start = Math.max((opts.rows_in_cluster - opts.rows_in_block) * cluster_num, 0),\r\n\t        items_end = items_start + opts.rows_in_cluster,\r\n\t        top_offset = Math.max(items_start * opts.item_height, 0),\r\n\t        bottom_offset = Math.max((rows_len - items_end) * opts.item_height, 0),\r\n\t        this_cluster_rows = [],\r\n\t        rows_above = items_start;\r\n\t      if(top_offset < 1) {\r\n\t        rows_above++;\r\n\t      }\r\n\t      for (var i = items_start; i < items_end; i++) {\r\n\t        rows[i] && this_cluster_rows.push(rows[i]);\r\n\t      }\r\n\t      return {\r\n\t        top_offset: top_offset,\r\n\t        bottom_offset: bottom_offset,\r\n\t        rows_above: rows_above,\r\n\t        rows: this_cluster_rows\r\n\t      }\r\n\t    },\r\n\t    renderExtraTag: function(class_name, height) {\r\n\t      var tag = document.createElement(this.options.tag),\r\n\t        clusterize_prefix = 'clusterize-';\r\n\t      tag.className = [clusterize_prefix + 'extra-row', clusterize_prefix + class_name].join(' ');\r\n\t      height && (tag.style.height = height + 'px');\r\n\t      return tag.outerHTML;\r\n\t    },\r\n\t    // if necessary verify data changed and insert to DOM\r\n\t    insertToDOM: function(rows, cache) {\r\n\t      var data = this.generate(rows, this.getClusterNum()),\r\n\t        this_cluster_rows = data.rows.join(''),\r\n\t        this_cluster_content_changed = this.checkChanges('data', this_cluster_rows, cache),\r\n\t        only_bottom_offset_changed = this.checkChanges('bottom', data.bottom_offset, cache),\r\n\t        callbacks = this.options.callbacks,\r\n\t        layout = [];\r\n\t\r\n\t      if(this_cluster_content_changed) {\r\n\t        if(data.top_offset) {\r\n\t          this.options.keep_parity && layout.push(this.renderExtraTag('keep-parity'));\r\n\t          layout.push(this.renderExtraTag('top-space', data.top_offset));\r\n\t        }\r\n\t        layout.push(this_cluster_rows);\r\n\t        data.bottom_offset && layout.push(this.renderExtraTag('bottom-space', data.bottom_offset));\r\n\t        callbacks.clusterWillChange && callbacks.clusterWillChange();\r\n\t        this.html(layout.join(''));\r\n\t        this.options.content_tag == 'ol' && this.content_elem.setAttribute('start', data.rows_above);\r\n\t        callbacks.clusterChanged && callbacks.clusterChanged();\r\n\t      } else if(only_bottom_offset_changed) {\r\n\t        this.content_elem.lastChild.style.height = data.bottom_offset + 'px';\r\n\t      }\r\n\t    },\r\n\t    // unfortunately ie <= 9 does not allow to use innerHTML for table elements, so make a workaround\r\n\t    html: function(data) {\r\n\t      var content_elem = this.content_elem;\r\n\t      if(ie && ie <= 9 && this.options.tag == 'tr') {\r\n\t        var div = document.createElement('div'), last;\r\n\t        div.innerHTML = '<table><tbody>' + data + '</tbody></table>';\r\n\t        while((last = content_elem.lastChild)) {\r\n\t          content_elem.removeChild(last);\r\n\t        }\r\n\t        var rows_nodes = this.getChildNodes(div.firstChild.firstChild);\r\n\t        while (rows_nodes.length) {\r\n\t          content_elem.appendChild(rows_nodes.shift());\r\n\t        }\r\n\t      } else {\r\n\t        content_elem.innerHTML = data;\r\n\t      }\r\n\t    },\r\n\t    getChildNodes: function(tag) {\r\n\t        var child_nodes = tag.children, nodes = [];\r\n\t        for (var i = 0, ii = child_nodes.length; i < ii; i++) {\r\n\t            nodes.push(child_nodes[i]);\r\n\t        }\r\n\t        return nodes;\r\n\t    },\r\n\t    checkChanges: function(type, value, cache) {\r\n\t      var changed = value != cache[type];\r\n\t      cache[type] = value;\r\n\t      return changed;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // support functions\r\n\t  function on(evt, element, fnc) {\r\n\t    return element.addEventListener ? element.addEventListener(evt, fnc, false) : element.attachEvent(\"on\" + evt, fnc);\r\n\t  }\r\n\t  function off(evt, element, fnc) {\r\n\t    return element.removeEventListener ? element.removeEventListener(evt, fnc, false) : element.detachEvent(\"on\" + evt, fnc);\r\n\t  }\r\n\t  function isArray(arr) {\r\n\t    return Object.prototype.toString.call(arr) === '[object Array]';\r\n\t  }\r\n\t  function getStyle(prop, elem) {\r\n\t    return window.getComputedStyle ? window.getComputedStyle(elem)[prop] : elem.currentStyle[prop];\r\n\t  }\r\n\t\r\n\t  return Clusterize;\r\n\t}));\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _flatten = __webpack_require__(5);\n\t\n\tvar _flatten2 = _interopRequireDefault(_flatten);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t// IE8 compatibility output\n\tmodule.exports = {\n\t    flatten: _flatten2['default']\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _extend = __webpack_require__(6);\n\t\n\tvar _extend2 = _interopRequireDefault(_extend);\n\t\n\tvar _node = __webpack_require__(7);\n\t\n\tvar _node2 = _interopRequireDefault(_node);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t// @param {object|array} nodes The tree nodes\n\t// @param {object} [options] The options object\n\t// @param {boolean} [options.openAllNodes] True to open all nodes. Defaults to false.\n\t// @param {array} [options.openNodes] An array that contains the ids of open nodes\n\t// @return {array}\n\tvar flatten = function flatten() {\n\t    var nodes = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t    nodes = [].concat(nodes);\n\t\n\t    var flatten = [];\n\t    var stack = [];\n\t    var pool = {\n\t        lastChild: {}\n\t    };\n\t\n\t    options.openAllNodes = !!options.openAllNodes;\n\t    options.openNodes = options.openNodes || [];\n\t    options.throwOnError = !!options.throwOnError;\n\t\n\t    {\n\t        // root node\n\t        var firstNode = nodes.length > 0 ? nodes[0] : null;\n\t        var parentNode = firstNode ? firstNode.parent : null;\n\t        if (parentNode && !(parentNode instanceof _node2['default'])) {\n\t            parentNode = new _node2['default'](parentNode);\n\t        }\n\t        var rootNode = parentNode || new _node2['default']({ // defaults\n\t            label: '',\n\t            parent: null,\n\t            children: nodes,\n\t            state: {\n\t                depth: -1,\n\t                lastChild: true,\n\t                more: nodes.length > 0,\n\t                open: nodes.length > 0,\n\t                path: '',\n\t                prefixMask: '',\n\t                total: 0\n\t            }\n\t        });\n\t\n\t        if (rootNode === parentNode) {\n\t            var subtotal = rootNode.state.total || 0;\n\t\n\t            // Traversing up through its ancestors\n\t            var p = rootNode;\n\t            while (p) {\n\t                var _p$state = p.state;\n\t                var path = _p$state.path;\n\t                var lastChild = _p$state.lastChild;\n\t                var _p$state$total = _p$state.total;\n\t                var total = _p$state$total === undefined ? 0 : _p$state$total;\n\t\n\t                // Rebuild the lastChild pool\n\t\n\t                if (path && lastChild) {\n\t                    pool.lastChild[path] = true;\n\t                }\n\t\n\t                // Subtract the number 'subtotal' from the total of the root node and all its ancestors\n\t                p.state.total = total - subtotal;\n\t                if (p.state.total < 0) {\n\t                    if (options.throwOnError) {\n\t                        throw new Error('The node might have been corrupted: id=' + JSON.stringify(p.id) + ', state=' + JSON.stringify(p.state));\n\t                    } else {\n\t                        console && console.log('Error: The node might have been corrupted: id=%s, label=%s, parent=%s, children=%s, state=%s', JSON.stringify(p.id), JSON.stringify(p.label), p.parent, p.children, JSON.stringify(p.state));\n\t                    }\n\t                }\n\t\n\t                p = p.parent;\n\t            }\n\t        }\n\t\n\t        stack.push([rootNode, rootNode.state.depth, 0]);\n\t    }\n\t\n\t    while (stack.length > 0) {\n\t        var _stack$pop = stack.pop();\n\t\n\t        var _stack$pop2 = _slicedToArray(_stack$pop, 3);\n\t\n\t        var current = _stack$pop2[0];\n\t        var depth = _stack$pop2[1];\n\t        var index = _stack$pop2[2];\n\t\n\t        var _loop = function _loop() {\n\t            var node = current.children[index];\n\t            if (!(node instanceof _node2['default'])) {\n\t                node = new _node2['default'](node);\n\t            }\n\t            node.parent = current;\n\t            node.children = node.children || [];\n\t\n\t            // Ensure parent.children[index] is equal to the current node\n\t            node.parent.children[index] = node;\n\t\n\t            var path = current.state.path + '.' + index;\n\t            var more = Object.keys(node.children).length > 0;\n\t            var open = more && function () {\n\t                var openAllNodes = options.openAllNodes;\n\t                var openNodes = options.openNodes;\n\t\n\t                if (openAllNodes) {\n\t                    return true;\n\t                }\n\t                // determine by node object\n\t                if (openNodes.indexOf(node) >= 0) {\n\t                    return true;\n\t                }\n\t                // determine by node id\n\t                if (openNodes.indexOf(node.id) >= 0) {\n\t                    return true;\n\t                }\n\t                return false;\n\t            }();\n\t            var lastChild = index === current.children.length - 1;\n\t            var prefixMask = function (prefix) {\n\t                var mask = '';\n\t                while (prefix.length > 0) {\n\t                    prefix = prefix.replace(/\\.\\d+$/, '');\n\t                    if (!prefix || pool.lastChild[prefix]) {\n\t                        mask = '0' + mask;\n\t                    } else {\n\t                        mask = '1' + mask;\n\t                    }\n\t                }\n\t                return mask;\n\t            }(path);\n\t\n\t            if (lastChild) {\n\t                pool.lastChild[path] = true;\n\t            }\n\t\n\t            // This allows you to put extra information to node.state\n\t            node.state = (0, _extend2['default'])({}, node.state, {\n\t                depth: depth + 1,\n\t                lastChild: lastChild,\n\t                more: more,\n\t                open: open,\n\t                path: path,\n\t                prefixMask: prefixMask,\n\t                total: 0\n\t            });\n\t\n\t            var parentDidOpen = true;\n\t\n\t            {\n\t                // Check the open state from its ancestors\n\t                var _p = node;\n\t                while (_p.parent !== null) {\n\t                    if (_p.parent.state.open === false) {\n\t                        parentDidOpen = false;\n\t                        break;\n\t                    }\n\t                    _p = _p.parent;\n\t                }\n\t            }\n\t\n\t            if (parentDidOpen) {\n\t                // Push the node to flatten list only if all of its parent nodes have the open state set to true\n\t                flatten.push(node);\n\t\n\t                // Update the total number of visible child nodes\n\t                var _p2 = node;\n\t                while (_p2.parent !== null) {\n\t                    _p2.parent.state.total++;\n\t                    _p2 = _p2.parent;\n\t                }\n\t            }\n\t\n\t            ++index;\n\t\n\t            if (more) {\n\t                // Push back parent node to the stack that will be able to continue\n\t                // the next iteration once all the child nodes of the current node\n\t                // have been completely explored.\n\t                stack.push([current, depth, index]);\n\t\n\t                index = 0;\n\t                depth = depth + 1;\n\t                current = node;\n\t            }\n\t        };\n\t\n\t        while (index < current.children.length) {\n\t            _loop();\n\t        }\n\t    }\n\t\n\t    return flatten;\n\t};\n\t\n\t// IE8 compatibility output\n\tmodule.exports = flatten;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar extend = function extend(target) {\n\t    for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        sources[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    if (target === undefined || target === null) {\n\t        throw new TypeError('Cannot convert undefined or null to object');\n\t    }\n\t\n\t    var output = Object(target);\n\t    for (var index = 0; index < sources.length; index++) {\n\t        var source = sources[index];\n\t        if (source !== undefined && source !== null) {\n\t            for (var key in source) {\n\t                if (source.hasOwnProperty(key)) {\n\t                    output[key] = source[key];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return output;\n\t};\n\t\n\t// IE8 compatibility output\n\tmodule.exports = extend;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _extend = __webpack_require__(6);\n\t\n\tvar _extend2 = _interopRequireDefault(_extend);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Node = function () {\n\t    function Node(node) {\n\t        _classCallCheck(this, Node);\n\t\n\t        this.id = null;\n\t        this.label = '';\n\t        this.parent = null;\n\t        this.children = [];\n\t        this.state = {};\n\t\n\t        (0, _extend2['default'])(this, node);\n\t\n\t        this.children = this.children || [];\n\t    }\n\t    // Gets the child nodes.\n\t    // @return {array} Returns an array of child nodes.\n\t\n\t\n\t    _createClass(Node, [{\n\t        key: 'getChildren',\n\t        value: function getChildren() {\n\t            return this.children;\n\t        }\n\t        // Gets the first child node.\n\t        // @return {object} Returns the first child node on success, null otherwise.\n\t\n\t    }, {\n\t        key: 'getFirstChild',\n\t        value: function getFirstChild() {\n\t            var node = null;\n\t            if (this.children.length > 0) {\n\t                node = this.children[0];\n\t            }\n\t            return node;\n\t        }\n\t        // Gets the next sibling node.\n\t        // @return {object} Returns the next sibling node on success, null otherwise.\n\t\n\t    }, {\n\t        key: 'getNextSibling',\n\t        value: function getNextSibling() {\n\t            var node = null;\n\t            if (this.parent) {\n\t                var index = this.parent.children.indexOf(this);\n\t                if (index >= 0 && index < this.parent.children.length - 1) {\n\t                    node = this.parent.children[index + 1];\n\t                }\n\t            }\n\t            return node;\n\t        }\n\t        // Gets the parent node.\n\t        // @return {object} Returns the parent node.\n\t\n\t    }, {\n\t        key: 'getParent',\n\t        value: function getParent() {\n\t            return this.parent;\n\t        }\n\t        // Gets previous sibling node.\n\t        // @return {object} Returns the previous sibling node on success, null otherwise.\n\t\n\t    }, {\n\t        key: 'getPreviousSibling',\n\t        value: function getPreviousSibling() {\n\t            var node = null;\n\t            if (this.parent) {\n\t                var index = this.parent.children.indexOf(this);\n\t                if (index > 0 && index < this.parent.children.length) {\n\t                    node = this.parent.children[index - 1];\n\t                }\n\t            }\n\t            return node;\n\t        }\n\t        // Checks whether this node has children.\n\t        // @return {boolean} Returns true if the node has children, false otherwise.\n\t\n\t    }, {\n\t        key: 'hasChildren',\n\t        value: function hasChildren() {\n\t            return this.children.length > 0;\n\t        }\n\t    }]);\n\t\n\t    return Node;\n\t}();\n\t\n\t// IE8 compatibility output\n\t\n\t\n\tmodule.exports = Node;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar LookupTable = function () {\n\t    function LookupTable() {\n\t        _classCallCheck(this, LookupTable);\n\t\n\t        this.data = {};\n\t    }\n\t\n\t    _createClass(LookupTable, [{\n\t        key: \"clear\",\n\t        value: function clear() {\n\t            this.data = {};\n\t        }\n\t    }, {\n\t        key: \"set\",\n\t        value: function set(key, value) {\n\t            this.data[key] = value;\n\t            return value;\n\t        }\n\t    }, {\n\t        key: \"get\",\n\t        value: function get(key) {\n\t            return this.data[key];\n\t        }\n\t    }]);\n\t\n\t    return LookupTable;\n\t}();\n\t\n\texports[\"default\"] = LookupTable;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.defaultRowRenderer = undefined;\n\t\n\tvar _utils = __webpack_require__(10);\n\t\n\tvar defaultRowRenderer = function defaultRowRenderer(node) {\n\t    var id = node.id;\n\t    var label = node.label;\n\t    var children = node.children;\n\t    var state = node.state;\n\t    var depth = state.depth;\n\t    var more = state.more;\n\t    var open = state.open;\n\t    var path = state.path;\n\t    var total = state.total;\n\t    var _state$selected = state.selected;\n\t    var selected = _state$selected === undefined ? false : _state$selected;\n\t\n\t    var childrenLength = Object.keys(children).length;\n\t\n\t    var togglerContent = '';\n\t    if (more && open) {\n\t        togglerContent = '▼';\n\t    }\n\t    if (more && !open) {\n\t        togglerContent = '►';\n\t    }\n\t    var toggler = (0, _utils.buildHTML)('a', togglerContent, {\n\t        'class': function () {\n\t            if (more && open) {\n\t                return (0, _utils.classNames)('tree-toggler');\n\t            }\n\t            if (more && !open) {\n\t                return (0, _utils.classNames)('tree-toggler', 'tree-closed');\n\t            }\n\t            return '';\n\t        }()\n\t    });\n\t    var title = (0, _utils.buildHTML)('span', (0, _utils.quoteattr)(label), {\n\t        'class': (0, _utils.classNames)('tree-title')\n\t    });\n\t    var treeNode = (0, _utils.buildHTML)('div', toggler + title, {\n\t        'class': 'tree-node',\n\t        'style': 'margin-left: ' + depth * 12 + 'px'\n\t    });\n\t    var treeItem = (0, _utils.buildHTML)('div', treeNode, {\n\t        'aria-id': id,\n\t        'aria-expanded': more && open,\n\t        'aria-depth': depth,\n\t        'aria-path': path,\n\t        'aria-selected': selected,\n\t        'aria-children': childrenLength,\n\t        'aria-total': total,\n\t        'class': (0, _utils.classNames)('tree-item', { 'tree-selected': selected })\n\t    });\n\t\n\t    return treeItem;\n\t};\n\t\n\texports.defaultRowRenderer = defaultRowRenderer;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t/**\n\t * Example #1:\n\t * =========================================================================\n\t * <a id=\"mymail href=\"http://mymail.example.com\">My Mail</a>\n\t *\n\t * buildHTML('a', 'My Mail', {\n\t *     id: 'mymail',\n\t *     href: 'http://mymail.example.com'\n\t * });\n\t *\n\t * Example #2:\n\t * =========================================================================\n\t * <input id=\"myinput\" type=\"text\" value=\"myvalue\" />\n\t *\n\t * buildHTML('input', {\n\t *   id: 'myinput',\n\t *   type: 'text',\n\t *   value: 'myvalue'\n\t * });\n\t *\n\t */\n\tvar buildHTML = function buildHTML(tag, html, attrs) {\n\t    switch (tag) {\n\t        case 'select':\n\t            if ((typeof html === 'undefined' ? 'undefined' : _typeof(html)) === 'object') {\n\t                var options = html || {};\n\t                html = '';\n\t                for (var value in options) {\n\t                    if (!options.hasOwnProperty(value)) {\n\t                        continue;\n\t                    }\n\t                    html += buildHTML('option', options[value] || '', { value: value });\n\t                }\n\t            }\n\t            break;\n\t\n\t        default:\n\t            if ((typeof html === 'undefined' ? 'undefined' : _typeof(html)) === 'object') {\n\t                attrs = html;\n\t                html = undefined;\n\t            }\n\t            break;\n\t    }\n\t\n\t    var h = '<' + tag;\n\t    for (var attr in attrs) {\n\t        if (!attrs.hasOwnProperty(attr)) {\n\t            continue;\n\t        }\n\t        if (typeof attrs[attr] !== 'undefined') {\n\t            h += ' ' + attr + '=\"' + quoteattr(attrs[attr]) + '\"';\n\t        }\n\t    }\n\t    h += typeof html !== 'undefined' ? '>' + html + '</' + tag + '>' : '/>';\n\t\n\t    return h;\n\t};\n\t\n\tvar classNames = function classNames() {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t    }\n\t\n\t    var classNames = [];\n\t    args.forEach(function (arg) {\n\t        if (Array.isArray(arg)) {\n\t            classNames = classNames.concat(arg);\n\t        } else if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {\n\t            Object.keys(arg).forEach(function (className) {\n\t                var ok = arg[className];\n\t                if (!!ok) {\n\t                    classNames.push(className);\n\t                }\n\t            });\n\t        } else {\n\t            classNames.push(arg);\n\t        }\n\t    });\n\t    return classNames.join(' ');\n\t};\n\t\n\t/**\n\t * The quoteattr() function is used in a context, where the result will not be evaluated by javascript but must be interpreted by an XML or HTML parser, and it must absolutely avoid breaking the syntax of an element attribute.\n\t */\n\tvar quoteattr = function quoteattr(s, preserveCR) {\n\t    preserveCR = preserveCR ? '&#13;' : '\\n';\n\t    return ('' + s). /* Forces the conversion to string. */\n\t    replace(/&/g, '&amp;') /* This MUST be the 1st replacement. */\n\t    .replace(/'/g, '&apos;') /* The 4 other predefined entities, required. */\n\t    .replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;')\n\t    /*\n\t     * You may add other replacements here for HTML only\n\t     * (but it's not necessary).\n\t     * Or for XML, only if the named entities are defined in its DTD.\n\t     */\n\t    .replace(/\\r\\n/g, preserveCR) /* Must be before the next replacement. */\n\t    .replace(/[\\r\\n]/g, preserveCR);\n\t};\n\t\n\texports.buildHTML = buildHTML;\n\texports.classNames = classNames;\n\texports.quoteattr = quoteattr;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar preventDefault = function preventDefault(e) {\n\t    if (typeof e.preventDefault !== 'undefined') {\n\t        e.preventDefault();\n\t    } else {\n\t        e.returnValue = false;\n\t    }\n\t};\n\t\n\tvar stopPropagation = function stopPropagation(e) {\n\t    if (typeof e.stopPropagation !== 'undefined') {\n\t        e.stopPropagation();\n\t    } else {\n\t        e.cancelBubble = true;\n\t    }\n\t};\n\t\n\t// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Compatibility\n\tvar addEventListener = function addEventListener(target, type, listener) {\n\t    if (target.addEventListener) {\n\t        // Standard\n\t        target.addEventListener(type, listener, false);\n\t    } else if (target.attachEvent) {\n\t        // IE8\n\t        // In Internet Explorer versions before IE 9, you have to use attachEvent rather than the standard addEventListener.\n\t        target.attachEvent('on' + type, listener);\n\t    }\n\t};\n\t\n\t// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n\tvar removeEventListener = function removeEventListener(target, type, listener) {\n\t    if (target.removeEventListener) {\n\t        // Standard\n\t        target.removeEventListener(type, listener, false);\n\t    } else if (target.detachEvent) {\n\t        // IE8\n\t        // In Internet Explorer versions before IE 9, you have to use detachEvent rather than the standard removeEventListener.\n\t        target.detachEvent('on' + type, listener);\n\t    }\n\t};\n\t\n\texports.preventDefault = preventDefault;\n\texports.stopPropagation = stopPropagation;\n\texports.addEventListener = addEventListener;\n\texports.removeEventListener = removeEventListener;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _utils = __webpack_require__(10);\n\t\n\tvar rowRenderer = function rowRenderer(node) {\n\t    var id = node.id;\n\t    var label = node.label;\n\t    var children = node.children;\n\t    var state = node.state;\n\t    var depth = state.depth;\n\t    var more = state.more;\n\t    var open = state.open;\n\t    var path = state.path;\n\t    var total = state.total;\n\t    var _state$selected = state.selected;\n\t    var selected = _state$selected === undefined ? false : _state$selected;\n\t\n\t    var childrenLength = Object.keys(children).length;\n\t\n\t    var toggler = '';\n\t    if (more) {\n\t        var togglerContent = '';\n\t        if (open) {\n\t            togglerContent = '<i class=\"glyphicon glyphicon-triangle-bottom\"></i>';\n\t        }\n\t        if (!open) {\n\t            togglerContent = '<i class=\"glyphicon glyphicon-triangle-right\"></i>';\n\t        }\n\t        toggler = (0, _utils.buildHTML)('a', togglerContent, {\n\t            'class': function () {\n\t                if (more && open) {\n\t                    return (0, _utils.classNames)('tree-toggler');\n\t                }\n\t                if (more && !open) {\n\t                    return (0, _utils.classNames)('tree-toggler', 'tree-closed');\n\t                }\n\t                return '';\n\t            }()\n\t        });\n\t    }\n\t\n\t    var icon = (0, _utils.buildHTML)('i', '', {\n\t        'class': (0, _utils.classNames)('tree-folder-icon', 'glyphicon', { 'glyphicon-folder-open': more && open }, { 'glyphicon-folder-close': more && !open }, { 'glyphicon-file': !more })\n\t    });\n\t    var title = (0, _utils.buildHTML)('span', (0, _utils.quoteattr)(label), {\n\t        'class': (0, _utils.classNames)('tree-title')\n\t    });\n\t    var count = (0, _utils.buildHTML)('span', childrenLength, {\n\t        'class': 'count'\n\t    });\n\t    var treeNode = (0, _utils.buildHTML)('div', toggler + icon + title + count, {\n\t        'class': 'tree-node',\n\t        'style': 'margin-left: ' + depth * 18 + 'px'\n\t    });\n\t    var treeItem = (0, _utils.buildHTML)('div', treeNode, {\n\t        'aria-id': id,\n\t        'aria-expanded': more && open,\n\t        'aria-depth': depth,\n\t        'aria-path': path,\n\t        'aria-selected': selected,\n\t        'aria-children': childrenLength,\n\t        'aria-total': total,\n\t        'class': (0, _utils.classNames)('tree-item', { 'tree-selected': selected })\n\t    });\n\t\n\t    return treeItem;\n\t};\n\t\n\texports['default'] = rowRenderer;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(14);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(16)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/stylus-loader/index.js!./index.styl\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/stylus-loader/index.js!./index.styl\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(15)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".infinite-tree-scroll{overflow:auto}.infinite-tree-content{outline:0}.infinite-tree-content .tree-selected.tree-item,.infinite-tree-content .tree-selected.tree-item:hover{background:#deecfd;border:1px solid #06c}.infinite-tree-content .tree-item{border:1px solid transparent;cursor:default}.infinite-tree-content .tree-item:hover{background:#f2fdff}.infinite-tree-content .tree-node{position:relative}.infinite-tree-content .tree-toggler{color:#666;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-tree-content .tree-toggler:hover{color:#333;text-decoration:none}.infinite-tree-content .tree-title{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-tree-no-data{text-align:center}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(true) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2b956fb53021583462e3\n **/","import InfiniteTree from '../src';\nimport rowRenderer from './renderer';\nimport '../src/index.styl';\n\nconst data = [];\nconst source = '{\"id\":\"<root>\",\"label\":\"<root>\",\"children\":[{\"id\":\"alpha\",\"label\":\"Alpha\"},{\"id\":\"bravo\",\"label\":\"Bravo\",\"children\":[{\"id\":\"charlie\",\"label\":\"Charlie\",\"children\":[{\"id\":\"delta\",\"label\":\"Delta\",\"children\":[{\"id\":\"echo\",\"label\":\"Echo\"},{\"id\":\"foxtrot\",\"label\":\"Foxtrot\"}]},{\"id\":\"golf\",\"label\":\"Golf\"}]},{\"id\":\"hotel\",\"label\":\"Hotel\",\"children\":[{\"id\":\"india\",\"label\":\"India\",\"children\":[{\"id\":\"juliet\",\"label\":\"Juliet\"}]}]},{\"id\":\"kilo\",\"label\":\"Kilo\"}]}]}';\n\nfor (let i = 0; i < 1000; ++i) {\n    data.push(JSON.parse(source.replace(/\"(id|label)\":\"([^\"]*)\"/g, '\"$1\": \"$2.' + i + '\"')));\n}\n\nconst tree = new InfiniteTree({\n    autoOpen: true,\n    el: document.querySelector('#tree'),\n    rowRenderer: rowRenderer\n});\n\ntree.on('scrollProgress', (progress) => {\n    document.querySelector('#scrolling-progress').style = 'width: ' + progress + '%';\n});\n\ntree.on('openNode', (node) => {\n    console.log('openNode', node);\n});\ntree.on('closeNode', (node) => {\n    console.log('closeNode', node);\n});\ntree.on('selectNode', (node) => {\n    const el = document.querySelector('#preview');\n\n    if (node) {\n        el.innerHTML = JSON.stringify({\n            id: node.id,\n            label: node.label,\n            children: node.children ? node.children.length : 0,\n            parent: node.parent ? node.parent.id : null,\n            state: node.state\n        }, null, 2);\n    } else {\n        el.innerHTML = '';\n    }\n});\n\ntree.loadData(data);\n\nwindow.tree = tree;\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","import events from 'events';\nimport Clusterize from 'clusterize.js';\nimport { flatten } from 'flattree';\nimport LookupTable from './lookup-table';\nimport { defaultRowRenderer } from './renderer';\nimport { stopPropagation, addEventListener, removeEventListener } from './polyfill';\nimport { classNames } from './utils';\n\nconst extend = (target, ...sources) => {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    const output = Object(target);\n    for (let index = 0; index < sources.length; index++) {\n        const source = sources[index];\n        if (source !== undefined && source !== null) {\n            for (let key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n\nclass InfiniteTree extends events.EventEmitter {\n    options = {\n        autoOpen: false,\n        el: null,\n        rowRenderer: defaultRowRenderer\n    };\n    state = {\n        openNodes: [],\n        selectedNode: null\n    };\n    clusterize = null;\n    tbl = new LookupTable();\n    nodes = [];\n    rows = [];\n    scrollElement = null;\n    contentElement = null;\n\n    contentListener = (evt) => {\n        let { target, currentTarget } = evt;\n\n        stopPropagation(evt);\n\n        if (target !== currentTarget) {\n            let itemTarget = target;\n            let handleToggler = false;\n\n            while (itemTarget && itemTarget.parentElement !== currentTarget) {\n                if (itemTarget.className.indexOf('tree-toggler') >= 0) {\n                    handleToggler = true;\n                }\n                itemTarget = itemTarget.parentElement;\n            }\n\n            const id = itemTarget.getAttribute('aria-id');\n            const node = this.getNodeById(id);\n\n            if (!node) {\n                return;\n            }\n\n            // Click on the toggler to open/close a tree node\n            if (handleToggler) {\n                this.toggleNode(node);\n            } else {\n                this.selectNode(node);\n            }\n        }\n    };\n\n    constructor(options = {}) {\n        super();\n\n        // Assign options\n        this.options = extend({}, this.options, options);\n\n        if (!this.options.el) {\n            console.error('Failed to initialize infinite-tree: el is not specified.', options);\n            return;\n        }\n\n        this.create();\n\n        // Load tree data if it's provided\n        if (options.data) {\n            this.loadData(options.data);\n        }\n    }\n    create() {\n        if (!this.options.el) {\n            throw new Error('The element option is not specified.');\n        }\n\n        const scrollElement = document.createElement('div');\n        scrollElement.className = classNames(\n            'infinite-tree',\n            'infinite-tree-scroll'\n        );\n        const contentElement = document.createElement('div');\n        contentElement.className = classNames(\n            'infinite-tree',\n            'infinite-tree-content'\n        );\n\n        scrollElement.appendChild(contentElement);\n        this.options.el.appendChild(scrollElement);\n\n        this.clusterize = new Clusterize({\n            tag: 'div',\n            rows: [],\n            scrollElem: scrollElement,\n            contentElem: contentElement,\n            no_data_class: 'infinite-tree-no-data',\n            callbacks: {\n                // Will be called right before replacing previous cluster with new one.\n                clusterWillChange: () => {\n                },\n                // Will be called right after replacing previous cluster with new one.\n                clusterChanged: () => {\n                },\n                // Will be called on scrolling. Returns progress position.\n                scrollingProgress: (progress) => {\n                    this.emit('scrollProgress', progress);\n                }\n            }\n        });\n\n        this.scrollElement = scrollElement;\n        this.contentElement = contentElement;\n\n        addEventListener(this.contentElement, 'click', this.contentListener);\n    }\n    clear() {\n        this.clusterize.clear();\n        this.tbl.clear();\n        this.nodes = [];\n        this.rows = [];\n        this.state.openNodes = [];\n        this.state.selectedNode = null;\n    }\n    destroy() {\n        removeEventListener(this.contentElement, 'click', this.contentListener);\n\n        this.clear();\n\n        if (this.clusterize) {\n            this.clusterize.destroy(true); // True to remove all data from the list\n            this.clusterize = null;\n        }\n\n        // Remove all child nodes\n        while (this.contentElement.firstChild) {\n            this.contentElement.removeChild(this.contentElement.firstChild);\n        }\n        while (this.scrollElement.firstChild) {\n            this.scrollElement.removeChild(this.scrollElement.firstChild);\n        }\n        if (this.options.el) {\n            const containerElement = this.options.el;\n            while (containerElement.firstChild) {\n                containerElement.removeChild(containerElement.firstChild);\n            }\n        }\n        this.contentElement = null;\n        this.scrollElement = null;\n    }\n    // Updates list with new data\n    update() {\n        this.clusterize.update(this.rows);\n    }\n    // Adds a child node to a node.\n    // @param {object} parent The object that defines the parent node.\n    // @param {object} newChild The object that defines the new child node.\n    // @return {boolean} Returns true on success, false otherwise.\n    addChildNode(parent = null, newChild = null) {\n        const { rowRenderer } = this.options;\n\n        if (!newChild) {\n            return false;\n        }\n        if (!parent) {\n            // Traversing up through ancestors to find the root node.\n            parent = (this.nodes.length > 0) ? this.nodes[0] : null;\n            while (parent && parent.parent !== null) {\n                parent = parent.parent;\n            }\n        }\n        if (!newChild.parent) {\n            parent.children = parent.children || [];\n            parent.children.push(newChild);\n            newChild.parent = parent;\n        }\n\n        const total = parent.state.total;\n        const nodes = flatten(parent.children, { openNodes: this.state.openNodes }).slice(total);\n        const rows = nodes.map(node => rowRenderer(node));\n\n        // The newChildIndex will be equal to total if the parent node is the root.\n        // i.e. newChildIndex = -1 + total + 1 = total\n        const newChildIndex = (this.nodes.indexOf(parent) + total + 1);\n\n        // Insert an array inside another array\n        this.nodes.splice.apply(this.nodes, [newChildIndex, 0].concat(nodes));\n        this.rows.splice.apply(this.rows, [newChildIndex, 0].concat(rows));\n        this.rows[newChildIndex] = rowRenderer(newChild);\n\n        // Add nodes to the lookup table\n        nodes.forEach((node) => {\n            if (node.id !== undefined) {\n                this.tbl.set(node.id, node);\n            }\n        });\n\n        // Updates list with new data\n        this.update();\n\n        return true;\n    }\n    // Adds a child node to a node at the specified index.\n    //   * If the parent is null or undefined, inserts the child at the specified index in the top-level.\n    //   * If the parent has children, the method adds the child to it at the specified index.\n    //   * If the parent does not have children, the method adds the child to the parent.\n    //   * If the index value is greater than or equal to the number of children in the parent, the method adds the child at the end of the children.\n    // @param {object} parent The object that defines the parent node.\n    // @param {object} newChild The object that defines the new child node.\n    // @param {number} index The 0-based index of where to insert the child node.\n    addChildNodeAt(parent, newChild, index) {\n    }\n    // Adds a new sibling node after the current node.\n    // @param {object} node The object that defines the current node.\n    // @param {object} newSibling The object that defines the new sibling node.\n    addSiblingNodeAfter(node, newSibling) {\n        // TODO\n    }\n    // Adds a new sibling node before the current node.\n    // @param {object} node The object that defines the current node.\n    // @param {object} newSibling The object that defines the new sibling node.\n    addSiblingNodeBefore(node, newSibling) {\n        // TODO\n    }\n    // Closes a node to hide its children.\n    // @param {object} node The object that defines the node.\n    // @return {boolean} Returns true on success, false otherwise.\n    closeNode(node) {\n        const { rowRenderer } = this.options;\n\n        // Retrieve node index\n        const nodeIndex = this.nodes.indexOf(node);\n        if (nodeIndex < 0) {\n            throw new Error('Invalid node specified: node.id=' + JSON.stringify(node.id));\n        }\n\n        // Check if the closeNode action can be performed\n        if (this.state.openNodes.indexOf(node) < 0) {\n            return false;\n        }\n\n        // Keep selected node unchanged if \"node\" is equal to \"this.state.selectedNode\"\n        if (this.state.selectedNode && (this.state.selectedNode !== node)) {\n            // Action:\n            //   close \"node.0.0\"\n            //\n            // Tree:\n            // [0] - node.0\n            // [1]  - node.0.0      => next selected node (index=1, total=2)\n            // [2]      node.0.0.0  => last selected node (index=2, total=0)\n            // [3]      node.0.0.1\n            // [4]    node.0.1\n            const selectedIndex = this.nodes.indexOf(this.state.selectedNode);\n            const rangeFrom = nodeIndex + 1;\n            const rangeTo = nodeIndex + node.state.total;\n\n            if ((rangeFrom <= selectedIndex) && (selectedIndex <= rangeTo)) {\n                this.selectNode(node);\n            }\n        }\n\n        node.state.open = false; // Set node.state.open to false\n        const openNodes = this.state.openNodes.filter((node) => (node.state.more && node.state.open));\n        this.state.openNodes = openNodes;\n\n        const deleteCount = node.state.total;\n\n        { // Traversing up through ancestors to subtract node.state.total.\n            let p = node;\n            while (p) {\n                p.state.total = (p.state.total - deleteCount);\n                p = p.parent;\n            }\n        }\n\n        // Remove elements from an array\n        this.nodes.splice(nodeIndex + 1, deleteCount);\n        this.rows.splice(nodeIndex + 1, deleteCount);\n        this.rows[nodeIndex] = rowRenderer(node);\n\n        // Emit the 'closeNode' event\n        this.emit('closeNode', node);\n\n        // Updates list with new data\n        this.update();\n\n        return true;\n    }\n    // Gets a list of child nodes.\n    // @param {object} [node] The object that defines the node. If null or undefined, returns a list of top level nodes.\n    // @return {array} Returns an array of child nodes.\n    getChildNodes(node = null) {\n        if (node) {\n            return node.children || [];\n        }\n        node = (this.nodes.length > 0) ? this.nodes[0] : null;\n        while (node && node.parent !== null) {\n            node = node.parent;\n        }\n        return (node && node.children) || [];\n    }\n    // Gets a node by its unique id. This assumes that you have given the nodes in the data a unique id.\n    // @param {string|number} id An unique node id. A null value will be returned if the id doesn't match.\n    // @return {object} Returns the node the matches the id, null otherwise.\n    getNodeById(id) {\n        let node = this.tbl.get(id);\n        if (!node) {\n            // Find the first node that matches the id\n            node = this.nodes.filter((node) => (node.id === id))[0];\n            if (!node) {\n                return null;\n            }\n            this.tbl.set(node.id, node);\n        }\n        return node;\n    }\n    // Gets the selected node.\n    // @return {object} Returns the selected node, or null if not selected.\n    getSelectedNode() {\n        return this.state.selectedNode;\n    }\n    // Gets an array of open nodes.\n    // @return {array} Returns an array of open nodes.\n    getOpenNodes() {\n        // returns a shallow copy of an array into a new array object.\n        return this.state.openNodes.slice();\n    }\n    // Loads data in the tree.\n    // @param {object|array} data The data is an object or array of objects that defines the node.\n    loadData(data = []) {\n        const { autoOpen, rowRenderer } = this.options;\n\n        this.nodes = flatten(data, { openAllNodes: autoOpen });\n\n        // Clear lookup table\n        this.tbl.clear();\n\n        // Add nodes to the lookup table\n        this.nodes.forEach((node) => {\n            if (node.id !== undefined) {\n                this.tbl.set(node.id, node);\n            }\n        });\n\n        const openNodes = this.nodes.filter((node) => (node.state.more && node.state.open));\n        this.state.openNodes = openNodes;\n        this.state.selectedNode = null;\n\n        this.rows = this.nodes.map(node => rowRenderer(node));\n\n        // Updates list with new data\n        this.update();\n    }\n    // Opens a node to display its children.\n    // @param {object} node The object that defines the node.\n    // @return {boolean} Returns true on success, false otherwise.\n    openNode(node) {\n        const { rowRenderer } = this.options;\n\n        // Retrieve node index\n        const nodeIndex = this.nodes.indexOf(node);\n        if (nodeIndex < 0) {\n            throw new Error('Invalid node specified: node.id=' + JSON.stringify(node.id));\n        }\n\n        // Check if the openNode action can be performed\n        if (this.state.openNodes.indexOf(node) >= 0) {\n            return false;\n        }\n\n        node.state.open = true; // Set node.state.open to true\n        const openNodes = [node].concat(this.state.openNodes); // the most recently used items first\n        this.state.openNodes = openNodes;\n\n        const nodes = flatten(node.children, { openNodes: this.state.openNodes });\n        const rows = nodes.map(node => rowRenderer(node));\n\n        // Insert an array inside another array\n        this.nodes.splice.apply(this.nodes, [nodeIndex + 1, 0].concat(nodes));\n        this.rows.splice.apply(this.rows, [nodeIndex + 1, 0].concat(rows));\n        this.rows[nodeIndex] = rowRenderer(node);\n\n        // Add all child nodes to the lookup table if the first child does not exist in the lookup table\n        if ((nodes.length > 0) && !(this.tbl.get(nodes[0]))) {\n            nodes.forEach((node) => {\n                if (node.id !== undefined) {\n                    this.tbl.set(node.id, node);\n                }\n            });\n        }\n\n        // Emit the 'openNode' event\n        this.emit('openNode', node);\n\n        // Updates list with new data\n        this.update();\n\n        return true;\n    }\n    // Removes a node.\n    // @param {object} node The object that defines the node.\n    removeNode(node) {\n        // TODO\n    }\n    // Sets the current scroll position to this node.\n    // @param {object} node The object that defines the node.\n    // @return {number} Returns the vertical scroll position, or -1 on error.\n    scrollToNode(node) {\n        // Retrieve node index\n        const nodeIndex = this.nodes.indexOf(node);\n        if (nodeIndex < 0) {\n            return -1;\n        }\n        if (!this.contentElement) {\n            return -1;\n        }\n        // Get the offset height of the first child element that contains the \"tree-item\" class.\n        const firstChild = this.contentElement.querySelectorAll('.tree-item')[0];\n        const rowHeight = (firstChild && firstChild.offsetHeight) || 0;\n        return this.scrollTop(nodeIndex * rowHeight);\n    }\n    // Gets (or sets) the current vertical position of the scroll bar.\n    // @param {number} [value] An integer that indicates the new position to set the scroll bar to.\n    // @return {number} Returns the vertical scroll position.\n    scrollTop(value) {\n        if (!this.scrollElement) {\n            return 0;\n        }\n        if (value !== undefined) {\n            this.scrollElement.scrollTop = Number(value);\n        }\n        return this.scrollElement.scrollTop;\n    }\n    // Selects a node.\n    // @param {object} node The object that defines the node. If null or undefined, deselects the current node.\n    // @return {boolean} Returns true on success, false otherwise.\n    selectNode(node = null) {\n        const { rowRenderer } = this.options;\n\n        if (node === null) {\n            // Deselect the current node\n            if (this.state.selectedNode) {\n                const selectedNode = this.state.selectedNode;\n                const selectedIndex = this.nodes.indexOf(selectedNode);\n\n                selectedNode.state.selected = false;\n                this.rows[selectedIndex] = rowRenderer(selectedNode);\n                this.state.selectedNode = null;\n\n                // Emit the 'selectNode' event\n                this.emit('selectNode', null);\n\n                // Updates list with new data\n                this.update();\n\n                return true;\n            }\n\n            return false;\n        }\n\n        // Retrieve node index\n        const nodeIndex = this.nodes.indexOf(node);\n        if (nodeIndex < 0) {\n            throw new Error('Invalid node specified: node.id=' + JSON.stringify(node.id));\n        }\n\n        // Select this node\n        if (this.state.selectedNode !== node) {\n            node.state.selected = true;\n            this.rows[nodeIndex] = rowRenderer(node);\n        }\n\n        // Deselect the current node\n        if (this.state.selectedNode) {\n            const selectedNode = this.state.selectedNode;\n            const selectedIndex = this.nodes.indexOf(selectedNode);\n            selectedNode.state.selected = false;\n            this.rows[selectedIndex] = rowRenderer(selectedNode);\n        }\n\n        if (this.state.selectedNode !== node) {\n            this.state.selectedNode = node;\n\n            // Emit the 'selectNode' event\n            this.emit('selectNode', node);\n        } else {\n            this.state.selectedNode = null;\n\n            // Emit the 'selectNode' event\n            this.emit('selectNode', null);\n        }\n\n        // Updates list with new data\n        this.update();\n\n        return true;\n    }\n    // Toggles a node to display or hide its children.\n    // @param {object} node The object that defines the node.\n    toggleNode(node) {\n        if (this.state.openNodes.indexOf(node) >= 0) {\n            // close node\n            this.closeNode(node);\n        } else {\n            // open node\n            this.openNode(node);\n        }\n    }\n    // Serializes the current state of a node to a JSON string.\n    // @param {object} node The object that defines the node. If null, returns the whole tree.\n    toString(node) {\n        const traverse = (node) => {\n            let s = '[';\n            if (node && node.children) {\n                for (let i = 0; i < node.children.length; ++i) {\n                    let list = [];\n                    s = s + '{';\n                    Object.keys(node).forEach((key) => {\n                        let value = node[key];\n                        if (key === 'parent') { // ignore parent\n                            return;\n                        }\n                        if (key === 'children') { // traverse child nodes\n                            list.push('\"' + key + '\":' + traverse(node.children[i]));\n                            return;\n                        }\n                        if (typeof value === 'string' || typeof value === 'object') {\n                            list.push('\"' + key + '\":' + JSON.stringify(value));\n                        } else { // primitive types\n                            list.push('\"' + key + '\":' + value);\n                        }\n                    });\n                    s = s + list.join(',');\n                    s = s + '}' + ((i === node.children.length - 1) ? '' : ',');\n                }\n            }\n            s = s + ']';\n            return s;\n        };\n\n        if (!node) {\n            node = (this.nodes.length > 0) ? this.nodes[0] : null;\n            while (node && node.parent !== null) {\n                node = node.parent;\n            }\n        }\n\n        return traverse(node);\n    }\n    // Performs full tree traversal using child-parent link, and returns an array of nodes.\n    // This is the most elegant way of traversing a tree — no recursion or stack is involved.\n    // @param {object} rootNode The object that defines the root node.\n    // @return {array} Returns an array of nodes, not including the root node.\n    traverse(rootNode) {\n        const list = [];\n\n        if (rootNode === undefined) {\n            rootNode = (this.nodes.length > 0) ? this.nodes[0] : null;\n            while (rootNode && rootNode.parent !== null) {\n                rootNode = rootNode.parent;\n            }\n        }\n\n        // Ignore root node\n        let node = rootNode.getFirstChild();\n        while (node) {\n            list.push(node);\n            if (node.hasChildren()) {\n                node = node.getFirstChild();\n            } else {\n                // find the parent level\n                while ((node.getNextSibling() === null) && (node !== rootNode)) {\n                    // use child-parent link to get to the parent level\n                    node = node.getParent();\n                }\n\n                // Get next sibling\n                node = node.getNextSibling();\n            }\n        }\n\n        return list;\n    }\n    // Updates the data of a node.\n    // @param {object} node\n    // @param {object} data The data object.\n    updateNode(node, data) {\n        const { rowRenderer } = this.options;\n\n        // Retrieve node index\n        const nodeIndex = this.nodes.indexOf(node);\n        if (nodeIndex < 0) {\n            throw new Error('Invalid node specified: node.id=' + JSON.stringify(node.id));\n        }\n\n        // The static attributes (i.e. children, parent, and state) are being protected\n        const { children, parent, state } = node;\n        node = extend(node, data, { children, parent, state });\n\n        this.rows[nodeIndex] = rowRenderer(node);\n\n        // Updates list with new data\n        this.update();\n    }\n}\n\nmodule.exports = InfiniteTree;\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/index.js\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/events/events.js\n ** module id = 2\n ** module chunks = 0\n **/","/*! Clusterize.js - v0.16.0 - 2016-03-12\r\n* http://NeXTs.github.com/Clusterize.js/\r\n* Copyright (c) 2015 Denis Lukov; Licensed GPLv3 */\r\n\r\n;(function(name, definition) {\r\n    if (typeof module != 'undefined') module.exports = definition();\r\n    else if (typeof define == 'function' && typeof define.amd == 'object') define(definition);\r\n    else this[name] = definition();\r\n}('Clusterize', function() {\r\n  \"use strict\"\r\n\r\n  // detect ie9 and lower\r\n  // https://gist.github.com/padolsey/527683#comment-786682\r\n  var ie = (function(){\r\n    for( var v = 3,\r\n             el = document.createElement('b'),\r\n             all = el.all || [];\r\n         el.innerHTML = '<!--[if gt IE ' + (++v) + ']><i><![endif]-->',\r\n         all[0];\r\n       ){}\r\n    return v > 4 ? v : document.documentMode;\r\n  }()),\r\n  is_mac = navigator.platform.toLowerCase().indexOf('mac') + 1;\r\n  var Clusterize = function(data) {\r\n    if( ! (this instanceof Clusterize))\r\n      return new Clusterize(data);\r\n    var self = this;\r\n\r\n    var defaults = {\r\n      item_height: 0,\r\n      block_height: 0,\r\n      rows_in_block: 50,\r\n      rows_in_cluster: 0,\r\n      cluster_height: 0,\r\n      blocks_in_cluster: 4,\r\n      tag: null,\r\n      content_tag: null,\r\n      show_no_data_row: true,\r\n      no_data_class: 'clusterize-no-data',\r\n      no_data_text: 'No data',\r\n      keep_parity: true,\r\n      callbacks: {},\r\n      scroll_top: 0\r\n    }\r\n\r\n    // public parameters\r\n    self.options = {};\r\n    var options = ['rows_in_block', 'blocks_in_cluster', 'show_no_data_row', 'no_data_class', 'no_data_text', 'keep_parity', 'tag', 'callbacks'];\r\n    for(var i = 0, option; option = options[i]; i++) {\r\n      self.options[option] = typeof data[option] != 'undefined' && data[option] != null\r\n        ? data[option]\r\n        : defaults[option];\r\n    }\r\n\r\n    var elems = ['scroll', 'content'];\r\n    for(var i = 0, elem; elem = elems[i]; i++) {\r\n      self[elem + '_elem'] = data[elem + 'Id']\r\n        ? document.getElementById(data[elem + 'Id'])\r\n        : data[elem + 'Elem'];\r\n      if( ! self[elem + '_elem'])\r\n        throw new Error(\"Error! Could not find \" + elem + \" element\");\r\n    }\r\n\r\n    // tabindex forces the browser to keep focus on the scrolling list, fixes #11\r\n    if( ! self.content_elem.hasAttribute('tabindex'))\r\n      self.content_elem.setAttribute('tabindex', 0);\r\n\r\n    // private parameters\r\n    var rows = isArray(data.rows)\r\n        ? data.rows\r\n        : self.fetchMarkup(),\r\n      cache = {data: '', bottom: 0},\r\n      scroll_top = self.scroll_elem.scrollTop;\r\n\r\n    // get row height\r\n    self.exploreEnvironment(rows);\r\n\r\n    // append initial data\r\n    self.insertToDOM(rows, cache);\r\n\r\n    // restore the scroll position\r\n    self.scroll_elem.scrollTop = scroll_top;\r\n\r\n    // adding scroll handler\r\n    var last_cluster = false,\r\n    scroll_debounce = 0,\r\n    pointer_events_set = false,\r\n    scrollEv = function() {\r\n      // fixes scrolling issue on Mac #3\r\n      if (is_mac) {\r\n          if( ! pointer_events_set) self.content_elem.style.pointerEvents = 'none';\r\n          pointer_events_set = true;\r\n          clearTimeout(scroll_debounce);\r\n          scroll_debounce = setTimeout(function () {\r\n              self.content_elem.style.pointerEvents = 'auto';\r\n              pointer_events_set = false;\r\n          }, 50);\r\n      }\r\n      if (last_cluster != (last_cluster = self.getClusterNum()))\r\n        self.insertToDOM(rows, cache);\r\n      if (self.options.callbacks.scrollingProgress)\r\n        self.options.callbacks.scrollingProgress(self.getScrollProgress());\r\n    },\r\n    resize_debounce = 0,\r\n    resizeEv = function() {\r\n      clearTimeout(resize_debounce);\r\n      resize_debounce = setTimeout(self.refresh, 100);\r\n    }\r\n    on('scroll', self.scroll_elem, scrollEv);\r\n    on('resize', window, resizeEv);\r\n\r\n    // public methods\r\n    self.destroy = function(clean) {\r\n      off('scroll', self.scroll_elem, scrollEv);\r\n      off('resize', window, resizeEv);\r\n      self.html((clean ? self.generateEmptyRow() : rows).join(''));\r\n    }\r\n    self.refresh = function() {\r\n      self.getRowsHeight(rows) && self.update(rows);\r\n    }\r\n    self.update = function(new_rows) {\r\n      rows = isArray(new_rows)\r\n        ? new_rows\r\n        : [];\r\n      var scroll_top = self.scroll_elem.scrollTop;\r\n      // fixes #39\r\n      if(rows.length * self.options.item_height < scroll_top) {\r\n        self.scroll_elem.scrollTop = 0;\r\n        last_cluster = 0;\r\n      }\r\n      self.insertToDOM(rows, cache);\r\n      self.scroll_elem.scrollTop = scroll_top;\r\n    }\r\n    self.clear = function() {\r\n      self.update([]);\r\n    }\r\n    self.getRowsAmount = function() {\r\n      return rows.length;\r\n    }\r\n    self.getScrollProgress = function() {\r\n      return this.options.scroll_top / (rows.length * this.options.item_height) * 100 || 0;\r\n    }\r\n\r\n    var add = function(where, _new_rows) {\r\n      var new_rows = isArray(_new_rows)\r\n        ? _new_rows\r\n        : [];\r\n      if( ! new_rows.length) return;\r\n      rows = where == 'append'\r\n        ? rows.concat(new_rows)\r\n        : new_rows.concat(rows);\r\n      self.insertToDOM(rows, cache);\r\n    }\r\n    self.append = function(rows) {\r\n      add('append', rows);\r\n    }\r\n    self.prepend = function(rows) {\r\n      add('prepend', rows);\r\n    }\r\n  }\r\n\r\n  Clusterize.prototype = {\r\n    constructor: Clusterize,\r\n    // fetch existing markup\r\n    fetchMarkup: function() {\r\n      var rows = [], rows_nodes = this.getChildNodes(this.content_elem);\r\n      while (rows_nodes.length) {\r\n        rows.push(rows_nodes.shift().outerHTML);\r\n      }\r\n      return rows;\r\n    },\r\n    // get tag name, content tag name, tag height, calc cluster height\r\n    exploreEnvironment: function(rows) {\r\n      var opts = this.options;\r\n      opts.content_tag = this.content_elem.tagName.toLowerCase();\r\n      if( ! rows.length) return;\r\n      if(ie && ie <= 9 && ! opts.tag) opts.tag = rows[0].match(/<([^>\\s/]*)/)[1].toLowerCase();\r\n      if(this.content_elem.children.length <= 1) this.html(rows[0] + rows[0] + rows[0]);\r\n      if( ! opts.tag) opts.tag = this.content_elem.children[0].tagName.toLowerCase();\r\n      this.getRowsHeight(rows);\r\n    },\r\n    getRowsHeight: function(rows) {\r\n      var opts = this.options,\r\n        prev_item_height = opts.item_height;\r\n      opts.cluster_height = 0\r\n      if( ! rows.length) return;\r\n      var nodes = this.content_elem.children;\r\n      opts.item_height = nodes[Math.floor(nodes.length / 2)].offsetHeight;\r\n      // consider table's border-spacing\r\n      if(opts.tag == 'tr' && getStyle('borderCollapse', this.content_elem) != 'collapse')\r\n        opts.item_height += parseInt(getStyle('borderSpacing', this.content_elem)) || 0;\r\n      opts.block_height = opts.item_height * opts.rows_in_block;\r\n      opts.rows_in_cluster = opts.blocks_in_cluster * opts.rows_in_block;\r\n      opts.cluster_height = opts.blocks_in_cluster * opts.block_height;\r\n      return prev_item_height != opts.item_height;\r\n    },\r\n    // get current cluster number\r\n    getClusterNum: function () {\r\n      this.options.scroll_top = this.scroll_elem.scrollTop;\r\n      return Math.floor(this.options.scroll_top / (this.options.cluster_height - this.options.block_height)) || 0;\r\n    },\r\n    // generate empty row if no data provided\r\n    generateEmptyRow: function() {\r\n      var opts = this.options;\r\n      if( ! opts.tag || ! opts.show_no_data_row) return [];\r\n      var empty_row = document.createElement(opts.tag),\r\n        no_data_content = document.createTextNode(opts.no_data_text), td;\r\n      empty_row.className = opts.no_data_class;\r\n      if(opts.tag == 'tr') {\r\n        td = document.createElement('td');\r\n        td.appendChild(no_data_content);\r\n      }\r\n      empty_row.appendChild(td || no_data_content);\r\n      return [empty_row.outerHTML];\r\n    },\r\n    // generate cluster for current scroll position\r\n    generate: function (rows, cluster_num) {\r\n      var opts = this.options,\r\n        rows_len = rows.length;\r\n      if (rows_len < opts.rows_in_block) {\r\n        return {\r\n          top_offset: 0,\r\n          bottom_offset: 0,\r\n          rows_above: 0,\r\n          rows: rows_len ? rows : this.generateEmptyRow()\r\n        }\r\n      }\r\n      if( ! opts.cluster_height) {\r\n        this.exploreEnvironment(rows);\r\n      }\r\n      var items_start = Math.max((opts.rows_in_cluster - opts.rows_in_block) * cluster_num, 0),\r\n        items_end = items_start + opts.rows_in_cluster,\r\n        top_offset = Math.max(items_start * opts.item_height, 0),\r\n        bottom_offset = Math.max((rows_len - items_end) * opts.item_height, 0),\r\n        this_cluster_rows = [],\r\n        rows_above = items_start;\r\n      if(top_offset < 1) {\r\n        rows_above++;\r\n      }\r\n      for (var i = items_start; i < items_end; i++) {\r\n        rows[i] && this_cluster_rows.push(rows[i]);\r\n      }\r\n      return {\r\n        top_offset: top_offset,\r\n        bottom_offset: bottom_offset,\r\n        rows_above: rows_above,\r\n        rows: this_cluster_rows\r\n      }\r\n    },\r\n    renderExtraTag: function(class_name, height) {\r\n      var tag = document.createElement(this.options.tag),\r\n        clusterize_prefix = 'clusterize-';\r\n      tag.className = [clusterize_prefix + 'extra-row', clusterize_prefix + class_name].join(' ');\r\n      height && (tag.style.height = height + 'px');\r\n      return tag.outerHTML;\r\n    },\r\n    // if necessary verify data changed and insert to DOM\r\n    insertToDOM: function(rows, cache) {\r\n      var data = this.generate(rows, this.getClusterNum()),\r\n        this_cluster_rows = data.rows.join(''),\r\n        this_cluster_content_changed = this.checkChanges('data', this_cluster_rows, cache),\r\n        only_bottom_offset_changed = this.checkChanges('bottom', data.bottom_offset, cache),\r\n        callbacks = this.options.callbacks,\r\n        layout = [];\r\n\r\n      if(this_cluster_content_changed) {\r\n        if(data.top_offset) {\r\n          this.options.keep_parity && layout.push(this.renderExtraTag('keep-parity'));\r\n          layout.push(this.renderExtraTag('top-space', data.top_offset));\r\n        }\r\n        layout.push(this_cluster_rows);\r\n        data.bottom_offset && layout.push(this.renderExtraTag('bottom-space', data.bottom_offset));\r\n        callbacks.clusterWillChange && callbacks.clusterWillChange();\r\n        this.html(layout.join(''));\r\n        this.options.content_tag == 'ol' && this.content_elem.setAttribute('start', data.rows_above);\r\n        callbacks.clusterChanged && callbacks.clusterChanged();\r\n      } else if(only_bottom_offset_changed) {\r\n        this.content_elem.lastChild.style.height = data.bottom_offset + 'px';\r\n      }\r\n    },\r\n    // unfortunately ie <= 9 does not allow to use innerHTML for table elements, so make a workaround\r\n    html: function(data) {\r\n      var content_elem = this.content_elem;\r\n      if(ie && ie <= 9 && this.options.tag == 'tr') {\r\n        var div = document.createElement('div'), last;\r\n        div.innerHTML = '<table><tbody>' + data + '</tbody></table>';\r\n        while((last = content_elem.lastChild)) {\r\n          content_elem.removeChild(last);\r\n        }\r\n        var rows_nodes = this.getChildNodes(div.firstChild.firstChild);\r\n        while (rows_nodes.length) {\r\n          content_elem.appendChild(rows_nodes.shift());\r\n        }\r\n      } else {\r\n        content_elem.innerHTML = data;\r\n      }\r\n    },\r\n    getChildNodes: function(tag) {\r\n        var child_nodes = tag.children, nodes = [];\r\n        for (var i = 0, ii = child_nodes.length; i < ii; i++) {\r\n            nodes.push(child_nodes[i]);\r\n        }\r\n        return nodes;\r\n    },\r\n    checkChanges: function(type, value, cache) {\r\n      var changed = value != cache[type];\r\n      cache[type] = value;\r\n      return changed;\r\n    }\r\n  }\r\n\r\n  // support functions\r\n  function on(evt, element, fnc) {\r\n    return element.addEventListener ? element.addEventListener(evt, fnc, false) : element.attachEvent(\"on\" + evt, fnc);\r\n  }\r\n  function off(evt, element, fnc) {\r\n    return element.removeEventListener ? element.removeEventListener(evt, fnc, false) : element.detachEvent(\"on\" + evt, fnc);\r\n  }\r\n  function isArray(arr) {\r\n    return Object.prototype.toString.call(arr) === '[object Array]';\r\n  }\r\n  function getStyle(prop, elem) {\r\n    return window.getComputedStyle ? window.getComputedStyle(elem)[prop] : elem.currentStyle[prop];\r\n  }\r\n\r\n  return Clusterize;\r\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/clusterize.js/clusterize.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nvar _flatten = require('./flatten');\n\nvar _flatten2 = _interopRequireDefault(_flatten);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// IE8 compatibility output\nmodule.exports = {\n    flatten: _flatten2['default']\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/flattree/lib/index.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extend = require('./extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// @param {object|array} nodes The tree nodes\n// @param {object} [options] The options object\n// @param {boolean} [options.openAllNodes] True to open all nodes. Defaults to false.\n// @param {array} [options.openNodes] An array that contains the ids of open nodes\n// @return {array}\nvar flatten = function flatten() {\n    var nodes = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    nodes = [].concat(nodes);\n\n    var flatten = [];\n    var stack = [];\n    var pool = {\n        lastChild: {}\n    };\n\n    options.openAllNodes = !!options.openAllNodes;\n    options.openNodes = options.openNodes || [];\n    options.throwOnError = !!options.throwOnError;\n\n    {\n        // root node\n        var firstNode = nodes.length > 0 ? nodes[0] : null;\n        var parentNode = firstNode ? firstNode.parent : null;\n        if (parentNode && !(parentNode instanceof _node2['default'])) {\n            parentNode = new _node2['default'](parentNode);\n        }\n        var rootNode = parentNode || new _node2['default']({ // defaults\n            label: '',\n            parent: null,\n            children: nodes,\n            state: {\n                depth: -1,\n                lastChild: true,\n                more: nodes.length > 0,\n                open: nodes.length > 0,\n                path: '',\n                prefixMask: '',\n                total: 0\n            }\n        });\n\n        if (rootNode === parentNode) {\n            var subtotal = rootNode.state.total || 0;\n\n            // Traversing up through its ancestors\n            var p = rootNode;\n            while (p) {\n                var _p$state = p.state;\n                var path = _p$state.path;\n                var lastChild = _p$state.lastChild;\n                var _p$state$total = _p$state.total;\n                var total = _p$state$total === undefined ? 0 : _p$state$total;\n\n                // Rebuild the lastChild pool\n\n                if (path && lastChild) {\n                    pool.lastChild[path] = true;\n                }\n\n                // Subtract the number 'subtotal' from the total of the root node and all its ancestors\n                p.state.total = total - subtotal;\n                if (p.state.total < 0) {\n                    if (options.throwOnError) {\n                        throw new Error('The node might have been corrupted: id=' + JSON.stringify(p.id) + ', state=' + JSON.stringify(p.state));\n                    } else {\n                        console && console.log('Error: The node might have been corrupted: id=%s, label=%s, parent=%s, children=%s, state=%s', JSON.stringify(p.id), JSON.stringify(p.label), p.parent, p.children, JSON.stringify(p.state));\n                    }\n                }\n\n                p = p.parent;\n            }\n        }\n\n        stack.push([rootNode, rootNode.state.depth, 0]);\n    }\n\n    while (stack.length > 0) {\n        var _stack$pop = stack.pop();\n\n        var _stack$pop2 = _slicedToArray(_stack$pop, 3);\n\n        var current = _stack$pop2[0];\n        var depth = _stack$pop2[1];\n        var index = _stack$pop2[2];\n\n        var _loop = function _loop() {\n            var node = current.children[index];\n            if (!(node instanceof _node2['default'])) {\n                node = new _node2['default'](node);\n            }\n            node.parent = current;\n            node.children = node.children || [];\n\n            // Ensure parent.children[index] is equal to the current node\n            node.parent.children[index] = node;\n\n            var path = current.state.path + '.' + index;\n            var more = Object.keys(node.children).length > 0;\n            var open = more && function () {\n                var openAllNodes = options.openAllNodes;\n                var openNodes = options.openNodes;\n\n                if (openAllNodes) {\n                    return true;\n                }\n                // determine by node object\n                if (openNodes.indexOf(node) >= 0) {\n                    return true;\n                }\n                // determine by node id\n                if (openNodes.indexOf(node.id) >= 0) {\n                    return true;\n                }\n                return false;\n            }();\n            var lastChild = index === current.children.length - 1;\n            var prefixMask = function (prefix) {\n                var mask = '';\n                while (prefix.length > 0) {\n                    prefix = prefix.replace(/\\.\\d+$/, '');\n                    if (!prefix || pool.lastChild[prefix]) {\n                        mask = '0' + mask;\n                    } else {\n                        mask = '1' + mask;\n                    }\n                }\n                return mask;\n            }(path);\n\n            if (lastChild) {\n                pool.lastChild[path] = true;\n            }\n\n            // This allows you to put extra information to node.state\n            node.state = (0, _extend2['default'])({}, node.state, {\n                depth: depth + 1,\n                lastChild: lastChild,\n                more: more,\n                open: open,\n                path: path,\n                prefixMask: prefixMask,\n                total: 0\n            });\n\n            var parentDidOpen = true;\n\n            {\n                // Check the open state from its ancestors\n                var _p = node;\n                while (_p.parent !== null) {\n                    if (_p.parent.state.open === false) {\n                        parentDidOpen = false;\n                        break;\n                    }\n                    _p = _p.parent;\n                }\n            }\n\n            if (parentDidOpen) {\n                // Push the node to flatten list only if all of its parent nodes have the open state set to true\n                flatten.push(node);\n\n                // Update the total number of visible child nodes\n                var _p2 = node;\n                while (_p2.parent !== null) {\n                    _p2.parent.state.total++;\n                    _p2 = _p2.parent;\n                }\n            }\n\n            ++index;\n\n            if (more) {\n                // Push back parent node to the stack that will be able to continue\n                // the next iteration once all the child nodes of the current node\n                // have been completely explored.\n                stack.push([current, depth, index]);\n\n                index = 0;\n                depth = depth + 1;\n                current = node;\n            }\n        };\n\n        while (index < current.children.length) {\n            _loop();\n        }\n    }\n\n    return flatten;\n};\n\n// IE8 compatibility output\nmodule.exports = flatten;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/flattree/lib/flatten.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\n\nvar extend = function extend(target) {\n    for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n    }\n\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var output = Object(target);\n    for (var index = 0; index < sources.length; index++) {\n        var source = sources[index];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n\n// IE8 compatibility output\nmodule.exports = extend;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/flattree/lib/extend.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extend = require('./extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Node = function () {\n    function Node(node) {\n        _classCallCheck(this, Node);\n\n        this.id = null;\n        this.label = '';\n        this.parent = null;\n        this.children = [];\n        this.state = {};\n\n        (0, _extend2['default'])(this, node);\n\n        this.children = this.children || [];\n    }\n    // Gets the child nodes.\n    // @return {array} Returns an array of child nodes.\n\n\n    _createClass(Node, [{\n        key: 'getChildren',\n        value: function getChildren() {\n            return this.children;\n        }\n        // Gets the first child node.\n        // @return {object} Returns the first child node on success, null otherwise.\n\n    }, {\n        key: 'getFirstChild',\n        value: function getFirstChild() {\n            var node = null;\n            if (this.children.length > 0) {\n                node = this.children[0];\n            }\n            return node;\n        }\n        // Gets the next sibling node.\n        // @return {object} Returns the next sibling node on success, null otherwise.\n\n    }, {\n        key: 'getNextSibling',\n        value: function getNextSibling() {\n            var node = null;\n            if (this.parent) {\n                var index = this.parent.children.indexOf(this);\n                if (index >= 0 && index < this.parent.children.length - 1) {\n                    node = this.parent.children[index + 1];\n                }\n            }\n            return node;\n        }\n        // Gets the parent node.\n        // @return {object} Returns the parent node.\n\n    }, {\n        key: 'getParent',\n        value: function getParent() {\n            return this.parent;\n        }\n        // Gets previous sibling node.\n        // @return {object} Returns the previous sibling node on success, null otherwise.\n\n    }, {\n        key: 'getPreviousSibling',\n        value: function getPreviousSibling() {\n            var node = null;\n            if (this.parent) {\n                var index = this.parent.children.indexOf(this);\n                if (index > 0 && index < this.parent.children.length) {\n                    node = this.parent.children[index - 1];\n                }\n            }\n            return node;\n        }\n        // Checks whether this node has children.\n        // @return {boolean} Returns true if the node has children, false otherwise.\n\n    }, {\n        key: 'hasChildren',\n        value: function hasChildren() {\n            return this.children.length > 0;\n        }\n    }]);\n\n    return Node;\n}();\n\n// IE8 compatibility output\n\n\nmodule.exports = Node;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/flattree/lib/node.js\n ** module id = 7\n ** module chunks = 0\n **/","class LookupTable {\n    data = {};\n\n    clear() {\n        this.data = {};\n    }\n    set(key, value) {\n        this.data[key] = value;\n        return value;\n    }\n    get(key) {\n        return this.data[key];\n    }\n}\n\nexport default LookupTable;\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lookup-table.js\n **/","import { buildHTML, classNames, quoteattr } from './utils';\n\nconst defaultRowRenderer = (node) => {\n    const { id, label, children, state } = node;\n    const { depth, more, open, path, total, selected = false } = state;\n    const childrenLength = Object.keys(children).length;\n\n    let togglerContent = '';\n    if (more && open) {\n        togglerContent = '▼';\n    }\n    if (more && !open) {\n        togglerContent = '►';\n    }\n    const toggler = buildHTML('a', togglerContent, {\n        'class': (() => {\n            if (more && open) {\n                return classNames(\n                    'tree-toggler'\n                );\n            }\n            if (more && !open) {\n                return classNames(\n                    'tree-toggler',\n                    'tree-closed'\n                );\n            }\n            return '';\n        })()\n    });\n    const title = buildHTML('span', quoteattr(label), {\n        'class': classNames('tree-title')\n    });\n    const treeNode = buildHTML('div', toggler + title, {\n        'class': 'tree-node',\n        'style': 'margin-left: ' + depth * 12 + 'px'\n    });\n    const treeItem = buildHTML('div', treeNode, {\n        'aria-id': id,\n        'aria-expanded': more && open,\n        'aria-depth': depth,\n        'aria-path': path,\n        'aria-selected': selected,\n        'aria-children': childrenLength,\n        'aria-total': total,\n        'class': classNames(\n            'tree-item',\n            { 'tree-selected': selected }\n        )\n    });\n\n    return treeItem;\n};\n\nexport {\n    defaultRowRenderer\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/renderer.js\n **/","/**\n * Example #1:\n * =========================================================================\n * <a id=\"mymail href=\"http://mymail.example.com\">My Mail</a>\n *\n * buildHTML('a', 'My Mail', {\n *     id: 'mymail',\n *     href: 'http://mymail.example.com'\n * });\n *\n * Example #2:\n * =========================================================================\n * <input id=\"myinput\" type=\"text\" value=\"myvalue\" />\n *\n * buildHTML('input', {\n *   id: 'myinput',\n *   type: 'text',\n *   value: 'myvalue'\n * });\n *\n */\nconst buildHTML = (tag, html, attrs) => {\n    switch (tag) {\n    case 'select':\n        if (typeof(html) === 'object') {\n            let options = html || {};\n            html = '';\n            for (let value in options) {\n                if (!options.hasOwnProperty(value)) {\n                    continue;\n                }\n                html += buildHTML('option', options[value] || '', { value: value });\n            }\n        }\n        break;\n\n    default:\n        if (typeof(html) === 'object') {\n            attrs = html;\n            html = undefined;\n        }\n        break;\n    }\n\n    let h = '<' + tag;\n    for (let attr in attrs) {\n        if (!attrs.hasOwnProperty(attr)) {\n            continue;\n        }\n        if (typeof attrs[attr] !== 'undefined') {\n            h += ' ' + attr + '=\"' + quoteattr(attrs[attr]) + '\"';\n        }\n    }\n    h += (typeof(html) !== 'undefined') ? '>' + html + '</' + tag + '>' : '/>';\n\n    return h;\n};\n\nconst classNames = (...args) => {\n    let classNames = [];\n    args.forEach((arg) => {\n        if (Array.isArray(arg)) {\n            classNames = classNames.concat(arg);\n        } else if (typeof arg === 'object') {\n            Object.keys(arg).forEach((className) => {\n                const ok = arg[className];\n                if (!!ok) {\n                    classNames.push(className);\n                }\n            });\n        } else {\n            classNames.push(arg);\n        }\n    });\n    return classNames.join(' ');\n};\n\n/**\n * The quoteattr() function is used in a context, where the result will not be evaluated by javascript but must be interpreted by an XML or HTML parser, and it must absolutely avoid breaking the syntax of an element attribute.\n */\nconst quoteattr = (s, preserveCR) => {\n    preserveCR = preserveCR ? '&#13;' : '\\n';\n    return ('' + s) /* Forces the conversion to string. */\n        .replace(/&/g, '&amp;') /* This MUST be the 1st replacement. */\n        .replace(/'/g, '&apos;') /* The 4 other predefined entities, required. */\n        .replace(/\"/g, '&quot;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        /*\n         * You may add other replacements here for HTML only\n         * (but it's not necessary).\n         * Or for XML, only if the named entities are defined in its DTD.\n         */\n        .replace(/\\r\\n/g, preserveCR) /* Must be before the next replacement. */\n        .replace(/[\\r\\n]/g, preserveCR);\n};\n\nexport {\n    buildHTML,\n    classNames,\n    quoteattr\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/utils.js\n **/","const preventDefault = (e) => {\n    if (typeof e.preventDefault !== 'undefined') {\n        e.preventDefault();\n    } else {\n        e.returnValue = false;\n    }\n};\n\nconst stopPropagation = (e) => {\n    if (typeof e.stopPropagation !== 'undefined') {\n        e.stopPropagation();\n    } else {\n        e.cancelBubble = true;\n    }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Compatibility\nconst addEventListener = (target, type, listener) => {\n    if (target.addEventListener) { // Standard\n        target.addEventListener(type, listener, false);\n    } else if (target.attachEvent) { // IE8\n        // In Internet Explorer versions before IE 9, you have to use attachEvent rather than the standard addEventListener.\n        target.attachEvent('on' + type, listener);\n    }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\nconst removeEventListener = (target, type, listener) => {\n    if (target.removeEventListener) { // Standard\n        target.removeEventListener(type, listener, false);\n    } else if (target.detachEvent) { // IE8\n        // In Internet Explorer versions before IE 9, you have to use detachEvent rather than the standard removeEventListener.\n        target.detachEvent('on' + type, listener);\n    }\n};\n\nexport {\n    preventDefault,\n    stopPropagation,\n    addEventListener,\n    removeEventListener\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/polyfill.js\n **/","import { buildHTML, classNames, quoteattr } from '../src/utils';\n\nconst rowRenderer = (node) => {\n    const { id, label, children, state } = node;\n    const { depth, more, open, path, total, selected = false } = state;\n    const childrenLength = Object.keys(children).length;\n\n    let toggler = '';\n    if (more) {\n        let togglerContent = '';\n        if (open) {\n            togglerContent = '<i class=\"glyphicon glyphicon-triangle-bottom\"></i>';\n        }\n        if (!open) {\n            togglerContent = '<i class=\"glyphicon glyphicon-triangle-right\"></i>';\n        }\n        toggler = buildHTML('a', togglerContent, {\n            'class': (() => {\n                if (more && open) {\n                    return classNames(\n                        'tree-toggler'\n                    );\n                }\n                if (more && !open) {\n                    return classNames(\n                        'tree-toggler',\n                        'tree-closed'\n                    );\n                }\n                return '';\n            })()\n        });\n    }\n\n    const icon = buildHTML('i', '', {\n        'class': classNames(\n            'tree-folder-icon',\n            'glyphicon',\n            { 'glyphicon-folder-open': more && open },\n            { 'glyphicon-folder-close': more && !open },\n            { 'glyphicon-file': !more }\n        )\n    });\n    const title = buildHTML('span', quoteattr(label), {\n        'class': classNames('tree-title')\n    });\n    const count = buildHTML('span', childrenLength, {\n        'class': 'count'\n    });\n    const treeNode = buildHTML('div', toggler + icon + title + count, {\n        'class': 'tree-node',\n        'style': 'margin-left: ' + depth * 18 + 'px'\n    });\n    const treeItem = buildHTML('div', treeNode, {\n        'aria-id': id,\n        'aria-expanded': more && open,\n        'aria-depth': depth,\n        'aria-path': path,\n        'aria-selected': selected,\n        'aria-children': childrenLength,\n        'aria-total': total,\n        'class': classNames(\n            'tree-item',\n            { 'tree-selected': selected }\n        )\n    });\n\n    return treeItem;\n};\n\nexport default rowRenderer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./renderer.js\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/stylus-loader/index.js!./index.styl\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/stylus-loader/index.js!./index.styl\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/stylus-loader/index.js!./index.styl\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/index.styl\n ** module id = 13\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".infinite-tree-scroll{overflow:auto}.infinite-tree-content{outline:0}.infinite-tree-content .tree-selected.tree-item,.infinite-tree-content .tree-selected.tree-item:hover{background:#deecfd;border:1px solid #06c}.infinite-tree-content .tree-item{border:1px solid transparent;cursor:default}.infinite-tree-content .tree-item:hover{background:#f2fdff}.infinite-tree-content .tree-node{position:relative}.infinite-tree-content .tree-toggler{color:#666;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-tree-content .tree-toggler:hover{color:#333;text-decoration:none}.infinite-tree-content .tree-title{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-tree-no-data{text-align:center}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/css-loader!../~/stylus-loader!../src/index.styl\n ** module id = 14\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/css-loader/lib/css-base.js\n ** module id = 15\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/style-loader/addStyles.js\n ** module id = 16\n ** module chunks = 0\n **/"],"sourceRoot":""}